--
-- PostgreSQL database dump
--

-- Dumped from database version 12.7 (Debian 12.7-1.pgdg100+1)
-- Dumped by pg_dump version 13.3

-- Started on 2021-11-28 17:10:55 CET

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 3254 (class 0 OID 16483)
-- Dependencies: 225
-- Data for Name: pattern_language; Type: TABLE DATA; Schema: public; Owner: patternatlas
--

INSERT INTO public.pattern_language VALUES ('efdc1625-6445-4662-a37e-5f1fd37a542b', 'Cloud Computing Patterns', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns', NULL, 'https://www.cloudcomputingpatterns.org/', 'https://www.cloudcomputingpatterns.org/img/book.png');
INSERT INTO public.pattern_language VALUES ('f6b807aa-5905-4435-aec6-324355a0483f', 'Enterprise Integration Patterns', 'https://patternpedia.org/patternLanguages/eip', '[{"x": 298.04036505554365, "y": 1802.937713972551, "id": "c56361d3-4230-4653-942b-fc8ac7488bf9", "vx": -0.019885748351522677, "vy": -0.17677951094778305, "uri": "https://patternpedia.org/patternLanguages/eip/message", "type": "default", "index": 0, "title": "Message"}, {"x": 148.03915383581392, "y": 1773.8458991147575, "id": "19c5ed05-1a24-4971-9aac-390e1931f010", "vx": 0.05483076803328695, "vy": -0.1487282805558399, "uri": "https://patternpedia.org/patternLanguages/eip/commandMessage", "type": "default", "index": 1, "title": "Command Message"}, {"x": 1820.8113205095242, "y": 660.01273613395, "id": "b14e9775-09ad-4019-b5db-dd9670221679", "vx": -0.13298358233207336, "vy": -0.049040694708064644, "uri": "https://patternpedia.org/patternLanguages/eip/documentMessage", "type": "default", "index": 2, "title": "Document Message"}, {"x": 689.6394462095757, "y": -1040.152463377981, "id": "f3afc386-7c81-41d1-9b94-a06a49deb965", "vx": 0.04238765490394163, "vy": 0.18460440161932798, "uri": "https://patternpedia.org/patternLanguages/eip/eventMessage", "type": "default", "index": 3, "title": "Event Message"}, {"x": -639.6023241157444, "y": 1361.660869587724, "id": "ef45bb4d-7f1a-4840-9783-aa22ed40032a", "vx": 0.16137796937308346, "vy": -0.11175636614690963, "uri": "https://patternpedia.org/patternLanguages/eip/request-reply", "type": "default", "index": 4, "title": "Request-Reply"}, {"x": -743.6311632764131, "y": 920.2416602240206, "id": "ea7c0692-6545-40e3-8cf8-f4c828c5fce8", "vx": 0.07305291998542814, "vy": 0.035741144357581064, "uri": "https://patternpedia.org/patternLanguages/eip/returnAddress", "type": "default", "index": 5, "title": "Return Address"}, {"x": 1104.1617600145587, "y": -772.288615649231, "id": "330ba4a6-411d-4d44-913a-2805a9f21cf7", "vx": 0.01981439202254048, "vy": 0.0749061245855654, "uri": "https://patternpedia.org/patternLanguages/eip/correlationIdentifier", "type": "default", "index": 6, "title": "Correlation Identifier"}, {"x": 1486.42031172661, "y": 1329.0169513543838, "id": "acb053d6-b8be-4bce-b62d-3a8aa10b9a0d", "vx": -0.09952106515577937, "vy": -0.11203143931067473, "uri": "https://patternpedia.org/patternLanguages/eip/messageSequence", "type": "default", "index": 7, "title": "Message Sequence"}, {"x": 516.3225724361316, "y": -1033.8670662217962, "id": "c34d4c11-da4f-445d-8682-1c92dcfbb6be", "vx": 0.08251748346343382, "vy": 0.1676691856099125, "uri": "https://patternpedia.org/patternLanguages/eip/messageExpiration", "type": "default", "index": 8, "title": "Message Expiration"}, {"x": -280.5148974374001, "y": 1692.989884615335, "id": "01d63259-109f-4136-878d-77e503ac8a11", "vx": 0.07638220764892445, "vy": -0.12379447472820737, "uri": "https://patternpedia.org/patternLanguages/eip/formatIndicator", "type": "default", "index": 9, "title": "Format Indicator"}, {"x": 1062.985369554234, "y": -925.0433199118725, "id": "1a1b9319-e303-431d-91c3-f4a3b6189982", "vx": -0.06463810615855227, "vy": 0.19279933608443328, "uri": "https://patternpedia.org/patternLanguages/eip/pipesAndFilters", "type": "default", "index": 10, "title": "Pipes and Filters"}, {"x": -909.5284343549644, "y": 1037.5906114588881, "id": "9bafcace-20a3-4726-963b-06d09437c677", "vx": 0.22265307749601215, "vy": -0.04842155749808409, "uri": "https://patternpedia.org/patternLanguages/eip/messageRouter", "type": "default", "index": 11, "title": "Message Router"}, {"x": -132.57681990622717, "y": 1668.9533379978207, "id": "26c8f1cb-a592-415e-846e-22f2ee761c8f", "vx": 0.06726215561192266, "vy": -0.1906902792579279, "uri": "https://patternpedia.org/patternLanguages/eip/messageStore", "type": "default", "index": 12, "title": "Message Store"}, {"x": -466.0401851558957, "y": 1484.609781103876, "id": "d89d5a40-b864-4d97-9b44-211ed25c4f98", "vx": 0.08321795330859852, "vy": -0.1242086546383932, "uri": "https://patternpedia.org/patternLanguages/eip/content-basedRouter", "type": "default", "index": 13, "title": "Content-Based Router"}, {"x": 1319.8094728403055, "y": -559.1053376755715, "id": "9c49472d-47fc-417e-b75a-512d57e76870", "vx": -0.040541588152538, "vy": -0.02396893759551367, "uri": "https://patternpedia.org/patternLanguages/eip/messageFilter", "type": "default", "index": 14, "title": "Message Filter"}, {"x": 1254.579427336354, "y": -772.6848051584618, "id": "be9c4245-79db-40cd-a0d4-c750c3a822b6", "vx": -0.13756574491303183, "vy": 0.14281364190893125, "uri": "https://patternpedia.org/patternLanguages/eip/dynamicRouter", "type": "default", "index": 15, "title": "Dynamic Router"}, {"x": 1518.5814679797375, "y": -462.8262258671644, "id": "0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf", "vx": -0.12662278041438021, "vy": -0.025750309883191914, "uri": "https://patternpedia.org/patternLanguages/eip/recipientList", "type": "default", "index": 16, "title": "Recipient List"}, {"x": 1533.6889371564482, "y": -748.6129333455057, "id": "7d28fe21-466a-4e22-9851-374e9cb93cd9", "vx": -0.15960650927613626, "vy": 0.15353561450697242, "uri": "https://patternpedia.org/patternLanguages/eip/splitter", "type": "default", "index": 17, "title": "Splitter"}, {"x": 1389.5171108598013, "y": -707.1846472833681, "id": "db5033cf-c13f-47b1-a617-aea77a0d5864", "vx": -0.15327141777397485, "vy": 0.17480927038417693, "uri": "https://patternpedia.org/patternLanguages/eip/aggregator", "type": "default", "index": 18, "title": "Aggregator"}, {"x": 954.2270954938591, "y": -776.7149106173324, "id": "8c047398-63a1-4940-a5c5-c44834f48516", "vx": 0.02160767042763977, "vy": 0.013716929708125465, "uri": "https://patternpedia.org/patternLanguages/eip/resequencer", "type": "default", "index": 19, "title": "Resequencer"}, {"x": 1593.6849711861116, "y": -596.4986607213865, "id": "885ade35-d310-421a-98b8-877e27e51531", "vx": -0.24048697893886323, "vy": 0.06647600580446138, "uri": "https://patternpedia.org/patternLanguages/eip/composedMessageProcessor", "type": "default", "index": 20, "title": "Composed Message Processor"}, {"x": -66.3261130337272, "y": -872.6454969595952, "id": "ba3aaa33-9010-459f-acb5-5452788e9abc", "vx": 0.08942460415749702, "vy": 0.08222086359232825, "uri": "https://patternpedia.org/patternLanguages/eip/scatter-gather", "type": "default", "index": 21, "title": "Scatter-Gather"}, {"x": -924.006891632058, "y": 608.6759498166731, "id": "c7e15bdd-a5f3-486d-8e3d-f3117f39eb1a", "vx": 0.14761302795650966, "vy": 0.0443975159088782, "uri": "https://patternpedia.org/patternLanguages/eip/routingSlip", "type": "default", "index": 22, "title": "Routing Slip"}, {"x": 617.5994825291057, "y": 1780.9943668963765, "id": "53adbbff-f4d6-4bd7-8b90-475f57913c1a", "vx": -0.08465465779506463, "vy": -0.1566374917278702, "uri": "https://patternpedia.org/patternLanguages/eip/processManager", "type": "default", "index": 23, "title": "Process Manager"}, {"x": 600.2598368880444, "y": -906.7437256257422, "id": "329b49fc-de79-4d63-97ca-87a8f83ef1e2", "vx": 0.07346707295400215, "vy": 0.03377067297410094, "uri": "https://patternpedia.org/patternLanguages/eip/messageBroker", "type": "default", "index": 24, "title": "Message Broker"}, {"x": 1658.7276181883744, "y": -318.4610152747336, "id": "29f4224d-6b91-4218-aed6-0db3e5fa9dc2", "vx": -0.18084586824227458, "vy": -0.03749181268432971, "uri": "https://patternpedia.org/patternLanguages/eip/messageTranslator", "type": "default", "index": 25, "title": "Message Translator"}, {"x": -241.93239023855992, "y": 1502.2873995097827, "id": "658b6fce-40b0-4f05-a2da-2fd3e33684fb", "vx": 0.027592861717566888, "vy": -0.04235414229853039, "uri": "https://patternpedia.org/patternLanguages/eip/envelopeWrapper", "type": "default", "index": 26, "title": "Envelope Wrapper"}, {"x": -224.11071535677522, "y": -833.133578278125, "id": "b3418862-26a6-4bbb-b546-c12f48c45b16", "vx": 0.11383906887567266, "vy": 0.10133204957171371, "uri": "https://patternpedia.org/patternLanguages/eip/contentEnricher", "type": "default", "index": 27, "title": "Content Enricher"}, {"x": 1697.326555218191, "y": 1009.2510247966235, "id": "26bc2583-1c9f-4d6e-9968-e5aa0e8ab82f", "vx": -0.11955117830816817, "vy": -0.08629299548770301, "uri": "https://patternpedia.org/patternLanguages/eip/contentFilter", "type": "default", "index": 28, "title": "Content Filter"}, {"x": 822.01488769755, "y": -1139.6936574029728, "id": "6c3f4121-65c2-444e-9d5a-f16f47fd2ed5", "vx": -0.007416664631373944, "vy": 0.2650276210470477, "uri": "https://patternpedia.org/patternLanguages/eip/claimCheck", "type": "default", "index": 29, "title": "Claim Check"}, {"x": 1627.224527979427, "y": -167.26270316760085, "id": "89dd6672-dd42-470b-8e84-129e4ec7540c", "vx": -0.10138622697458376, "vy": -0.08452650813997459, "uri": "https://patternpedia.org/patternLanguages/eip/normalizer", "type": "default", "index": 30, "title": "Normalizer"}, {"x": -877.0232705111991, "y": 48.19725153408291, "id": "98ccd4dc-86a8-4652-b2c1-5b83b6f078e1", "vx": 0.13359930388932642, "vy": -0.02569984010279126, "uri": "https://patternpedia.org/patternLanguages/eip/canonicalDataModel", "type": "default", "index": 31, "title": "Canonical Data Model"}, {"x": 937.5691258414522, "y": -1020.5028676102867, "id": "3953e924-30f6-4561-8e02-e761b417c1d4", "vx": -0.03646632005887378, "vy": 0.21100339490999356, "uri": "https://patternpedia.org/patternLanguages/eip/messageEndpoint", "type": "default", "index": 32, "title": "Message Endpoint"}, {"x": -907.5789133398443, "y": -142.32764412581633, "id": "02fc1261-b7d6-4d85-89ef-c987ab92f3d4", "vx": 0.17781912128684388, "vy": 0.025624955673467273, "uri": "https://patternpedia.org/patternLanguages/eip/messagingGateway", "type": "default", "index": 33, "title": "Messaging Gateway"}, {"x": 344.2225573511053, "y": -1028.6623461767008, "id": "29acda13-a41f-4270-9248-375814889f20", "vx": 0.07469355609696497, "vy": 0.15556176292967588, "uri": "https://patternpedia.org/patternLanguages/eip/messagingMapper", "type": "default", "index": 34, "title": "Messaging Mapper"}, {"x": -633.5880699255893, "y": -436.35267922771897, "id": "a2b0eaca-aa24-4036-b730-265a97043b75", "vx": 0.08547560710430507, "vy": 0.05589513971401422, "uri": "https://patternpedia.org/patternLanguages/eip/transactionalClient", "type": "default", "index": 35, "title": "Transactional Client"}, {"x": 1841.7785857946255, "y": 481.4263660831492, "id": "78b58f38-9075-44a1-8eb4-5ab0ba4b801d", "vx": -0.13603273072646083, "vy": -0.028156646097565442, "uri": "https://patternpedia.org/patternLanguages/eip/pollingConsumer", "type": "default", "index": 36, "title": "Polling Consumer"}, {"x": 10.330668709157093, "y": 1714.5323554436627, "id": "87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65", "vx": 0.05179964270664616, "vy": -0.14218123550830708, "uri": "https://patternpedia.org/patternLanguages/eip/event-drivenConsumer", "type": "default", "index": 37, "title": "Event-Driven Consumer"}, {"x": 448.6137861923635, "y": 1788.3124948527707, "id": "d9bd086d-030c-4ca4-b6d2-29c2fbf517c8", "vx": -0.05394284279331255, "vy": -0.15857322288686512, "uri": "https://patternpedia.org/patternLanguages/eip/competingConsumers", "type": "default", "index": 38, "title": "Competing Consumers"}, {"x": 812.9398982352516, "y": -873.4662979523505, "id": "7c775873-1ebf-4574-8cb1-29b0c661b8f3", "vx": 0.05286093486526519, "vy": 0.05918240672130098, "uri": "https://patternpedia.org/patternLanguages/eip/messageDispatcher", "type": "default", "index": 39, "title": "Message Dispatcher"}, {"x": 1684.8969586692049, "y": -477.4172879786059, "id": "0ee54310-5f4d-4435-9c34-cf93f742e101", "vx": -0.23759862487415395, "vy": 0.0642636268916017, "uri": "https://patternpedia.org/patternLanguages/eip/selectiveConsumer", "type": "default", "index": 40, "title": "Selective Consumer"}, {"x": 1612.7219874159139, "y": 1183.4268123451373, "id": "ca07715c-696e-4a62-af10-74145ff818f5", "vx": -0.11863538450219434, "vy": -0.09870170374487106, "uri": "https://patternpedia.org/patternLanguages/eip/durableSubscriber", "type": "default", "index": 41, "title": "Durable Subscriber"}, {"x": -758.3467351104819, "y": 1070.2724830716188, "id": "06c5d5cc-5c29-4a74-be75-dfba20cc4f80", "vx": 0.11586530492231317, "vy": -0.037134713089486036, "uri": "https://patternpedia.org/patternLanguages/eip/idempotentReceiver", "type": "default", "index": 42, "title": "Idempotent Receiver"}, {"x": -542.5554043873196, "y": -587.5476757503424, "id": "9167d0da-69ec-40a5-b7f8-5eab25833d70", "vx": 0.10103876507912597, "vy": 0.09377854361276997, "uri": "https://patternpedia.org/patternLanguages/eip/serviceActivator", "type": "default", "index": 43, "title": "Service Activator"}, {"x": 984.7052019446456, "y": 1678.7952633903824, "id": "3b3a9b48-63aa-4523-be3a-6a39fdf4bda7", "vx": -0.08040177980276766, "vy": -0.13841205539352888, "uri": "https://patternpedia.org/patternLanguages/eip/point-to-pointChannel", "type": "default", "index": 45, "title": "Point-to-Point Channel"}, {"x": 1777.7169867095129, "y": -86.73974662793395, "id": "28343b10-ce82-4c1f-aef2-f7d95316b48e", "vx": -0.18943176961618838, "vy": -0.05870159123362771, "uri": "https://patternpedia.org/patternLanguages/eip/publish-subscribeChannel", "type": "default", "index": 46, "title": "Publish-Subscribe Channel"}, {"x": 1363.7671811814864, "y": 1443.3982187980428, "id": "cf3a2b5f-9d7a-4f2c-ba39-ab2911d3a7d7", "vx": -0.06410771557459576, "vy": -0.1427579858419315, "uri": "https://patternpedia.org/patternLanguages/eip/datatypeChannel", "type": "default", "index": 47, "title": "Datatype Channel"}, {"x": -882.4971916987053, "y": 813.1622508021572, "id": "3e74edee-f076-45b3-8247-a5dd19cb24b2", "vx": 0.1617363754216057, "vy": 0.03187058341769303, "uri": "https://patternpedia.org/patternLanguages/eip/invalidMessageChannel", "type": "default", "index": 48, "title": "Invalid Message Channel"}, {"x": -487.35828928133185, "y": 1336.2123714219342, "id": "78185c7d-f353-49ee-b1e2-c2a0bcfc4ed2", "vx": 0.04221073219011812, "vy": -0.11974099713285163, "uri": "https://patternpedia.org/patternLanguages/eip/deadLetterChannel", "type": "default", "index": 49, "title": "Dead Letter Channel"}, {"x": 1832.699308333678, "y": 257.45265044524405, "id": "96ec8c86-c024-4d03-a283-49375e43e086", "vx": -0.1376402554022699, "vy": -0.022372350909187568, "uri": "https://patternpedia.org/patternLanguages/eip/guaranteedDelivery", "type": "default", "index": 50, "title": "Guaranteed Delivery"}, {"x": -414.2376092273117, "y": 1625.3122766657518, "id": "b5c458ea-3a4e-4211-afc9-82510c2cff46", "vx": 0.07160496316938143, "vy": -0.11842329601696104, "uri": "https://patternpedia.org/patternLanguages/eip/channelAdapter", "type": "default", "index": 51, "title": "Channel Adapter"}, {"x": -785.0966333730297, "y": -391.44060298010726, "id": "adcaac7d-a028-4d33-9111-ef3e711637e7", "vx": 0.1714553322447996, "vy": 0.08253991341529301, "uri": "https://patternpedia.org/patternLanguages/eip/messagingBridge", "type": "default", "index": 52, "title": "Messaging Bridge"}, {"x": 1767.8986614428454, "y": 841.6420266909832, "id": "ccb661e2-6c0d-4020-9eb2-abd290230b5b", "vx": -0.12476092731428162, "vy": -0.0633413748467917, "uri": "https://patternpedia.org/patternLanguages/eip/messageBus", "type": "default", "index": 53, "title": "Message Bus"}, {"x": 1378.8088681466847, "y": -856.8019525875206, "id": "712b29e2-411b-4ef8-8f81-6cae15222c07", "vx": -0.1185710485604468, "vy": 0.17235103047935638, "uri": "https://patternpedia.org/patternLanguages/eip/controlBus", "type": "default", "index": 54, "title": "Control Bus"}, {"x": 1177.69168475915, "y": -637.6343629773602, "id": "662ffad9-7dd3-490f-93d2-efb92f74c5ae", "vx": 0.01732875883599718, "vy": -0.025780918761825238, "uri": "https://patternpedia.org/patternLanguages/eip/detour", "type": "default", "index": 55, "title": "Detour"}, {"x": -738.0069307896466, "y": -217.45031180900023, "id": "b244a2fb-1f27-4e6d-8f43-7e512798f299", "vx": 0.09070050305784409, "vy": 0.008675913003745329, "uri": "https://patternpedia.org/patternLanguages/eip/wireTap", "type": "default", "index": 56, "title": "Wire Tap"}, {"x": 204.46498095031282, "y": -953.8005562056516, "id": "84c81b22-765b-4edb-a6e7-c626151e0af8", "vx": 0.07569320074398597, "vy": 0.09088997095368385, "uri": "https://patternpedia.org/patternLanguages/eip/messageHistory", "type": "default", "index": 57, "title": "Message History"}, {"x": 1374.9020706053727, "y": -413.67080798586176, "id": "c699fdf0-f31e-45c0-9d0d-cee2388e1544", "vx": -0.02515993077864633, "vy": -0.09593672854682637, "uri": "https://patternpedia.org/patternLanguages/eip/smartProxy", "type": "default", "index": 58, "title": "Smart Proxy"}, {"x": -357.55607902763427, "y": -734.641528479686, "id": "5778b4ba-4acd-4c94-9c10-d83d80f75d50", "vx": 0.12164700024133385, "vy": 0.07517257111966026, "uri": "https://patternpedia.org/patternLanguages/eip/testMessage", "type": "default", "index": 59, "title": "Test Message"}, {"x": -705.649562907106, "y": 1214.0735645711752, "id": "38b1dd17-c3ff-46c4-b300-2e1c7d542abe", "vx": 0.13453125648565006, "vy": -0.06687967055257289, "uri": "https://patternpedia.org/patternLanguages/eip/channelPurger", "type": "default", "index": 60, "title": "Channel Purger"}, {"x": 563.3134269706416, "y": 1151.1552887887333, "id": "f619a8fd-fff8-4981-8947-48ebaaad993c", "vx": -0.20371875620168947, "vy": 2.988453528363171, "uri": "https://patternpedia.org/patternLanguages/eip/fileTransfer", "type": "default", "index": 61, "title": "File Transfer"}, {"x": 389.84066369242146, "y": 1154.7174151133013, "id": "60e3ca01-0b7a-4785-acd7-3dddad0eea8e", "vx": 0.3342934245123169, "vy": 2.8958511613423696, "uri": "https://patternpedia.org/patternLanguages/eip/sharedDatabase", "type": "default", "index": 62, "title": "Shared Database"}, {"x": 474.0609000573262, "y": 1273.150798176766, "id": "36531ec5-477c-4d74-8d84-43276359aa14", "vx": 0.16626523421607756, "vy": 3.146840137793178, "uri": "https://patternpedia.org/patternLanguages/eip/remoteProcedureInvocation", "type": "default", "index": 63, "title": "Remote Procedure Invocation"}, {"x": 467.956050312267, "y": 1032.8754398728697, "id": "a7e45f3a-e408-4593-9aba-0a724c5ebf26", "vx": 0.2682530429159721, "vy": 2.7236624676760464, "uri": "https://patternpedia.org/patternLanguages/eip/messaging", "type": "default", "index": 64, "title": "Messaging"}]', 'https://www.enterpriseintegrationpatterns.com/', 'https://images-na.ssl-images-amazon.com/images/I/51SO8Sn59NL._SX376_BO1,204,203,200_.jpg');
INSERT INTO public.pattern_language VALUES ('af7780d5-1f97-4536-8da7-4194b093ab1d', 'Quantum Algorithm Patterns', 'https://patternpedia.org/patternLanguages/quantumAlgorithmPatterns', NULL, NULL, NULL);
INSERT INTO public.pattern_language VALUES ('66540853-0299-4815-ac1b-6d2d1ba369d0', 'Infrastructure as Code Patterns', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns', '[{"x": 490.6510210702782, "y": 737.8013674367168, "id": "66620d74-ebc6-49f5-aafb-5749a8dec5c6", "vx": -0.0937378838119133, "vy": 0.1503787316710433, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/monolithicStack", "type": "default", "index": 0, "title": "Monolithic Stack", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 559.1020993534781, "y": 871.7561285661974, "id": "25ed4f02-2b74-4493-8f85-812c28feb9a8", "vx": 0.1078837110179565, "vy": 0.02576213870871482, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/applicationGroupStack", "type": "default", "index": 1, "title": "Application Group Stack", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 413.4617356766163, "y": 891.1799447371026, "id": "80a5a17d-7a99-421c-a743-7ab12c2d727d", "vx": 0.0043278953455411434, "vy": -0.3161774557834958, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/serviceStack", "type": "default", "index": 2, "title": "Service Stack", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 341.67892745958517, "y": 759.4931410206873, "id": "3ab1e189-e4a8-4c1c-8a4b-426e07f8a267", "vx": -0.1286602837948517, "vy": -0.2767501958510019, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/microStack", "type": "default", "index": 3, "title": "Micro Stack", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 1041.7843611130402, "y": 531.6880135837802, "id": "b4ea4a4a-e892-4780-80d9-40d6a20e8f6f", "vx": 3.4307627507888196, "vy": 1.2855916521758808, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/multiple-environmentStack", "type": "default", "index": 4, "title": "Multiple-Environment Stack", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 1063.6058940452258, "y": 389.3977454750336, "id": "1463b4df-ea4f-44c9-952c-a5612f2016b6", "vx": 3.8974523800945913, "vy": 0.0743199125855761, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/copy-pasteEnvironments", "type": "default", "index": 5, "title": "Copy-Paste Environments", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 920.631898576839, "y": 412.1216672340149, "id": "a614b4ee-e8e3-4600-8324-c170e1b69ec0", "vx": 4.107684788897956, "vy": 1.8786446417904203, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/reusableStack", "type": "default", "index": 6, "title": "Reusable Stack", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 1071.4073341433993, "y": 6.520735278465679, "id": "e7c75a04-f9d3-40e0-aec6-6eabcfbc4aee", "vx": 4.519261513227127, "vy": -2.9843215477567147, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/stackConfigurationFiles", "type": "default", "index": 7, "title": "Stack Configuration Files", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": -252.71982851022943, "y": 592.4476261472071, "id": "5afb64cd-694b-45f1-bf2c-c371373aaee3", "vx": 6.005056942404906, "vy": -2.3290367199635162, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/persistentTestStack(aka.StaticEnvironment)", "type": "default", "index": 8, "title": "Persistent Test Stack", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 853.1055953690345, "y": -168.70660095251569, "id": "72e1d670-0d69-4f26-98b3-d216a2f00107", "vx": 1.110308114220995, "vy": -1.8046691602178648, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/manualStackParameters", "type": "default", "index": 9, "title": "Manual Stack Parameters", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 761.9427888515667, "y": -42.37471660343991, "id": "5dc385bb-2691-4f20-86c1-11dad63afd3f", "vx": 0.17480516951000133, "vy": -3.108045941697837, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/stackEnvironmentVariables", "type": "default", "index": 10, "title": "Stack Environment Variables", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 1008.7567069148959, "y": -219.7270752963541, "id": "4c7a0a0f-face-4953-baf5-5cacedd36f0c", "vx": 3.54523967322183, "vy": 0.21963674161236355, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/wrapperStack", "type": "default", "index": 11, "title": "Wrapper Stack", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 993.0881616634902, "y": -87.23262302109985, "id": "3339fd4b-158d-4a83-9591-a1dba018e238", "vx": -0.9511556270983362, "vy": -0.7011578859434923, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/scriptedParameters", "type": "default", "index": 12, "title": "Scripted Parameters", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 871.1386006701391, "y": -9.277413102564166, "id": "3cbcb60b-853f-46c0-beb7-f63fa6e9bc12", "vx": -0.9299970358065432, "vy": -0.16147217793770352, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/pipelineStackParameters", "type": "default", "index": 13, "title": "Pipeline Stack Parameters", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": -525.2851651074293, "y": 423.71450702180147, "id": "91a39a34-5f79-477a-8bdb-b248ef79b4cc", "vx": -0.6833416636862983, "vy": 7.000792496241667, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/ephemeralTestStack", "type": "default", "index": 14, "title": "Ephemeral Test Stack", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 914.1028277711933, "y": 121.00721107559136, "id": "c0a25c90-aebe-4fbf-8579-358afa157d21", "vx": 0.25244643628108054, "vy": 0.11756482246929013, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/stackParameterRegistry", "type": "default", "index": 15, "title": "Stack Parameter Registry", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": -324.6064210578651, "y": 456.59513115079574, "id": "2dec367b-fbf3-4e33-bf1b-1ab7581a9e51", "vx": 0.20805954420416306, "vy": 0.6735077142284278, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/dualPersistentAndEphemeralStackStages", "type": "default", "index": 16, "title": "Dual Persistent and Ephemeral Stack Stages", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": -406.27586994163903, "y": 581.061857168163, "id": "6c53a774-8c9e-4fb3-9283-454ae5cffcdb", "vx": 5.456626335137632, "vy": 4.307246163402103, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/periodicStackRebuild", "type": "default", "index": 17, "title": "Periodic Stack Rebuild", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": -379.36787735704826, "y": 318.9408631316821, "id": "9bf3816c-cf1c-4b85-8cc8-f0ae0a8c5d7b", "vx": -5.326141202979053, "vy": 2.7071149551839864, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/continuousStackReset", "type": "default", "index": 18, "title": "Continuous Stack Reset", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 607.09867831802, "y": -32.89707331584209, "id": "45559bb5-24ff-4432-9bb1-8802778180cd", "vx": 0.7948510220457051, "vy": -0.07901250900929062, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/applyOnChange", "type": "default", "index": 19, "title": "Apply On Change", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 463.8891987383998, "y": 34.00201427986302, "id": "2cd1fca5-139f-4159-a040-fd6b59449398", "vx": 1.5182022390443066, "vy": 2.4097195430965397, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/immutableServer", "type": "default", "index": 20, "title": "Immutable Server", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 569.7759766691039, "y": -200.4050293274715, "id": "1c3b59e7-7b7f-49eb-8f79-8b5a26212367", "vx": -2.017021130512966, "vy": 0.722525416320526, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/pushServerConfiguration", "type": "default", "index": 21, "title": "Push Server Configuration", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 473.4404387189925, "y": -108.79094070618923, "id": "eae90baf-ea92-4a7e-ae12-7f6119cfb376", "vx": -0.2613147731047503, "vy": 2.492375308345279, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/continuousConfigurationSynchronization", "type": "default", "index": 22, "title": "Continuous Configuration Synchronization", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 705.3235198810893, "y": -155.11528781542387, "id": "dc9e7d0c-923b-4f29-b118-2a743baab105", "vx": -1.2166516737210151, "vy": -1.8724032507255255, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/pullServerConfiguration", "type": "default", "index": 23, "title": "Pull Server Configuration", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 211.7845192855012, "y": 488.31447875533274, "id": "df903950-138e-45ae-8fdd-787dcfdeb5f1", "vx": -7.68740659803419, "vy": -6.11539729876599, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/facadeModule", "type": "default", "index": 24, "title": "Facade Module", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 271.4207926038955, "y": 620.9254319871812, "id": "80945f10-25df-465b-a3aa-38df56adbbac", "vx": -13.54285730521789, "vy": -3.3332181683979476, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/obfuscationModule", "type": "default", "index": 25, "title": "Obfuscation Module", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 370.3772806455352, "y": 512.781064244907, "id": "d5da5afa-d17d-4ab5-a56c-a399a0bf376a", "vx": -8.895178094794845, "vy": 0.5943251471943007, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/unsharedModule", "type": "default", "index": 26, "title": "Unshared Module", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 162.5570053309036, "y": 371.50101890424304, "id": "87bf22e8-5611-45e4-98f2-0ead82bc1095", "vx": -3.0248913732566205, "vy": -8.676032350902181, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/infrastructureDomainEntity", "type": "default", "index": 27, "title": "Infrastructure Domain Entity", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 327.30685328770767, "y": 382.93121763601675, "id": "7fdef8d4-e31e-41b6-80a0-caf365ec5247", "vx": -3.762786874137852, "vy": -1.6035596199730338, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/spaghettiModule", "type": "default", "index": 28, "title": "Spaghetti Module", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 259.50296034596784, "y": 249.30588291758025, "id": "560a18fd-4fe7-49ad-a7d5-20a3011ddb3c", "vx": 1.990885737877641, "vy": -4.680131188214472, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/bundleModule", "type": "default", "index": 29, "title": "Bundle Module", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 1141.3861840449908, "y": 268.95585236115653, "id": "ea97c486-7047-4fb9-97e8-f0a58b072faa", "vx": -0.0980275099116131, "vy": -1.891389180547303, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/resourceMatching", "type": "default", "index": 30, "title": "Resource Matching", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 985.7676822420261, "y": 255.38767763898605, "id": "b9a1279c-9b1a-4966-bde2-2743988dde1b", "vx": 0.3220447377155638, "vy": 0.015272793330884582, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/stackDataLookup", "type": "default", "index": 31, "title": "Stack Data Lookup", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 1066.1837513831526, "y": 128.7707755125172, "id": "89aa9d13-decb-4e49-b738-a97394042eec", "vx": -0.7698191180802982, "vy": -0.6821523909918487, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/integrationRegistryLookup", "type": "default", "index": 32, "title": "Integration Registry Lookup", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 336.4463970776515, "y": -44.933381426779626, "id": "de2064d4-c769-409f-92c5-665f6da84635", "vx": 0.2557264093765719, "vy": 3.5503066775614838, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/build-timeProjectIntegration", "type": "default", "index": 33, "title": "Build-Time Project Integration", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 217.7037726003993, "y": -147.34665018761115, "id": "045e55b5-bc6e-4787-adf6-0cacfddfead4", "vx": -0.6085364544315276, "vy": 4.86844708818274, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/delivery-timeProjectIntegration", "type": "default", "index": 34, "title": "Delivery-Time Project Integration", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}, {"x": 357.2227309367562, "y": -202.41222254807235, "id": "6e2eacf0-d026-4a00-8ca4-157298b75f0f", "vx": -1.1250609032947092, "vy": 3.541459890319641, "uri": "https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/apply-timeProjectIntegration", "type": "default", "index": 35, "title": "Apply-Time Project Integration", "iconUrl": "", "patternLanguageId": "66540853-0299-4815-ac1b-6d2d1ba369d0", "patternLanguageName": "Infrastructure as Code Patterns"}]', NULL, 'https://dynamic.thoughtworks.com/landing_pages/book_cover_image-644ff9caa8c5be60b8c048917c0d0beb.png');


--
-- TOC entry 3231 (class 0 OID 16385)
-- Dependencies: 202
-- Data for Name: candidate; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3264 (class 0 OID 16525)
-- Dependencies: 235
-- Data for Name: role; Type: TABLE DATA; Schema: public; Owner: patternatlas
--

INSERT INTO public.role VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', 'ADMIN');


--
-- TOC entry 3269 (class 0 OID 16546)
-- Dependencies: 240
-- Data for Name: user_entity; Type: TABLE DATA; Schema: public; Owner: patternatlas
--

INSERT INTO public.user_entity VALUES ('6ad807b2-949b-4502-9827-0d1475a9a3b5', 'admin@mail', 'ADMIN', '$2a$10$9SvJDvLMDCkTQCCXDqCop.X7KCehIjE.WNsdoAT7jHN9KW6gWiy3i', 'e75701d2-06f3-4ade-8d49-790020ac808e');


--
-- TOC entry 3232 (class 0 OID 16391)
-- Dependencies: 203
-- Data for Name: candidate_comment; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3233 (class 0 OID 16394)
-- Dependencies: 204
-- Data for Name: candidate_comment_rating; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3234 (class 0 OID 16397)
-- Dependencies: 205
-- Data for Name: candidate_rating; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3235 (class 0 OID 16400)
-- Dependencies: 206
-- Data for Name: concrete_solution; Type: TABLE DATA; Schema: public; Owner: patternatlas
--

INSERT INTO public.concrete_solution VALUES ('59d19d48-e20b-4702-b5ea-df9d36dd4e7b', 'ActiveMQ-Java', 'ActiveMQ (Java DSL)', 'https://patternpedia.org/patternLanguages/eip/recipientList', 'https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-pattern-implementations/main/eip-activemq-java/recipient-list.st');
INSERT INTO public.concrete_solution VALUES ('f362bb07-48a3-4ed0-be45-f315684e4651', 'ActiveMQ-XML', 'ActiveMQ (XML Configuration)', 'https://patternpedia.org/patternLanguages/eip/recipientList', 'https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-pattern-implementations/main/eip-activemq-xml/recipient-list.st');
INSERT INTO public.concrete_solution VALUES ('f863121b-22a9-4904-872d-cab915477c13', 'ActiveMQ-XML', 'ActiveMQ (XML Configuration)', 'https://patternpedia.org/patternLanguages/eip/content-basedRouter', 'https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-pattern-implementations/main/eip-activemq-xml/content-based-router.st');
INSERT INTO public.concrete_solution VALUES ('d95c8837-4a66-45e7-85fd-cfc64bc0ee61', 'ActiveMQ-XML', 'ActiveMQ (XML Configuration)', 'https://patternpedia.org/patternLanguages/eip/publish-subscribeChannel', 'https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-pattern-implementations/main/eip-activemq-xml/publish-subscribe-channel.st');
INSERT INTO public.concrete_solution VALUES ('887e5cd5-1905-48bb-8ce9-f68c271901ab', 'ActiveMQ-XML', 'ActiveMQ (XML Configuration)', 'https://patternpedia.org/patternLanguages/eip/point-to-pointChannel', 'https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-pattern-implementations/main/eip-activemq-xml/point-to-point-channel.st');
INSERT INTO public.concrete_solution VALUES ('67a12c23-a353-4090-bce1-89d3df6081e2', 'ActiveMQ-Java', 'ActiveMQ (Java DSL)', 'https://patternpedia.org/patternLanguages/eip/content-basedRouter', 'https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-pattern-implementations/main/eip-activemq-java/content-based-router.st');
INSERT INTO public.concrete_solution VALUES ('24ff6fc8-e943-41b7-9740-cc4eadb2df94', 'ActiveMQ-Java', 'ActiveMQ (Java DSL)', 'https://patternpedia.org/patternLanguages/eip/contentEnricher', 'https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-pattern-implementations/main/eip-activemq-java/content-enricher.st');
INSERT INTO public.concrete_solution VALUES ('e8ea39b5-88cb-42c2-a240-ec5e6e1c29b2', 'ActiveMQ-Java', 'ActiveMQ (Java DSL)', 'https://patternpedia.org/patternLanguages/eip/messageFilter', 'https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-pattern-implementations/main/eip-activemq-java/message-filter.st');
INSERT INTO public.concrete_solution VALUES ('e0f45ca7-31e9-4a3b-9868-bf44bf13563a', 'ActiveMQ-Java', 'ActiveMQ (Java DSL)', 'https://patternpedia.org/patternLanguages/eip/normalizer', 'https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-pattern-implementations/main/eip-activemq-java/normalizer.st');
INSERT INTO public.concrete_solution VALUES ('055db4ff-2856-4aae-8bef-ffc5a43c65ee', 'ActiveMQ-XML', 'ActiveMQ (XML Configuration)', 'https://patternpedia.org/patternLanguages/eip/contentEnricher', 'https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-pattern-implementations/main/eip-activemq-xml/content-enricher.st');
INSERT INTO public.concrete_solution VALUES ('5b2e22f5-2779-461d-a6cc-8f21f41b211e', 'ActiveMQ-XML', 'ActiveMQ (XML Configuration)', 'https://patternpedia.org/patternLanguages/eip/messageFilter', 'https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-pattern-implementations/main/eip-activemq-xml/message-filter.st');
INSERT INTO public.concrete_solution VALUES ('21a8e985-a0c3-48c8-bfd6-36fe49f414a0', 'ActiveMQ-XML', 'ActiveMQ (XML Configuration)', 'https://patternpedia.org/patternLanguages/eip/normalizer', 'https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-pattern-implementations/main/eip-activemq-xml/normalizer.st');
INSERT INTO public.concrete_solution VALUES ('e78f38ce-9a52-49f7-a3f7-04f722a22654', 'AWS-CloudFormation-JSON', 'Amazon MQ (AWS CloudFormation)', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/message-orientedMiddleware', 'https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-pattern-implementations/main/aws-cloudformation-json/message-oriented-middleware.st');
INSERT INTO public.concrete_solution VALUES ('81ee94a9-1630-48be-a60d-ccee4572ae61', 'ActiveMQ-XML', 'ActiveMQ (XML Configuration)', 'https://patternpedia.org/patternLanguages/eip/aggregator', 'https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-pattern-implementations/main/eip-activemq-xml/aggregator.st');
INSERT INTO public.concrete_solution VALUES ('ee01abb8-c829-441a-8b02-13645ca668b8', 'MessageEndpoint', 'Message Endpoint (JMS async)', 'https://patternpedia.org/patternLanguages/eip/messageEndpoint', 'https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-pattern-implementations/main/eip-java/message-endpoint-async.st');
INSERT INTO public.concrete_solution VALUES ('a80c00dc-d358-44f0-978b-3ac24bbfd48f', 'MessageEndpoint', 'Message Endpoint (JMS sync)', 'https://patternpedia.org/patternLanguages/eip/messageEndpoint', 'https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-pattern-implementations/main/eip-java/message-endpoint-sync.st');
INSERT INTO public.concrete_solution VALUES ('582ff88e-d1f9-4699-8d96-abb7bccb856f', 'AWS-CloudFormation-JSON', 'Amazon MQ (AWS CloudFormation)', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/publicCloud', 'https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-pattern-implementations/main/aws-cloudformation-json/public-cloud.st');
INSERT INTO public.concrete_solution VALUES ('c965352d-1bf7-49ea-8395-5afb35c94a6e', 'AWS-CloudFormation-JSON', 'Amazon MQ (AWS CloudFormation)', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/elasticPlatform', 'https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-pattern-implementations/main/aws-cloudformation-json/elastic-platform.st');


--
-- TOC entry 3236 (class 0 OID 16406)
-- Dependencies: 207
-- Data for Name: design_model; Type: TABLE DATA; Schema: public; Owner: patternatlas
--

INSERT INTO public.design_model VALUES ('31694712-1496-4efb-9992-6c8ebebadfa4', 'Example', 'https://patternpedia.org/designModels/example', 'https://share.nerdsupport.de/pattern-atlas/design-model-example.png');


--
-- TOC entry 3237 (class 0 OID 16412)
-- Dependencies: 208
-- Data for Name: design_model_edge_type; Type: TABLE DATA; Schema: public; Owner: patternatlas
--

INSERT INTO public.design_model_edge_type VALUES ('hostedOn', false);
INSERT INTO public.design_model_edge_type VALUES ('send', true);
INSERT INTO public.design_model_edge_type VALUES ('receive', false);
INSERT INTO public.design_model_edge_type VALUES ('publish', true);
INSERT INTO public.design_model_edge_type VALUES ('subscribe', false);


--
-- TOC entry 3253 (class 0 OID 16477)
-- Dependencies: 224
-- Data for Name: pattern; Type: TABLE DATA; Schema: public; Owner: patternatlas
--

INSERT INTO public.pattern VALUES ('1a1b9319-e303-431d-91c3-f4a3b6189982', 'Pipes and Filters', 'https://patternpedia.org/patternLanguages/eip/pipesAndFilters', '{"Icon": " ![](https://www.enterpriseintegrationpatterns.com/img/PipesAndFiltersIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/PipesAndFilters.gif)", "Solution": "Use the Pipes and Filters architectural style to divide a larger processing task into a sequence of smaller, independent processing steps (Filters) that are connected by channels (Pipes).", "Driving Question": "How can we perform complex processing on a message while maintaining independence and flexibility?"}', 'https://www.enterpriseintegrationpatterns.com/img/PipesAndFiltersIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('9bafcace-20a3-4726-963b-06d09437c677', 'Message Router', 'https://patternpedia.org/patternLanguages/eip/messageRouter', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/ContentBasedRouterIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/MessageRouter.gif)", "Solution": "Insert a special filter, a Message Router, which consumes a Message from one Message Channel and republishes it to a different Message Channel channel depending on a set of conditions.", "Driving Question": "How can you decouple individual processing steps so that messages can be passed to different filters depending on a set of conditions?"}', 'https://www.enterpriseintegrationpatterns.com/img/ContentBasedRouterIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('26c8f1cb-a592-415e-846e-22f2ee761c8f', 'Message Store', 'https://patternpedia.org/patternLanguages/eip/messageStore', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/MessageStoreIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/MessageStore.gif)", "Solution": "Use a Message Store to capture information about each message in a central location.", "Driving Question": "How can we report against message information without disturbing the loosely coupled and transient nature of a messaging system?"}', 'https://www.enterpriseintegrationpatterns.com/img/MessageStoreIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('d89d5a40-b864-4d97-9b44-211ed25c4f98', 'Content-Based Router', 'https://patternpedia.org/patternLanguages/eip/content-basedRouter', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/ContentBasedRouterIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/ContentBasedRouter.gif)", "Solution": "Use a Content-Based Router to route each message to the correct recipient based on message content.", "Driving Question": "How do we handle a situation where the implementation of a single logical function (e.g., inventory check) is spread across multiple physical systems?"}', 'https://www.enterpriseintegrationpatterns.com/img/ContentBasedRouterIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('c56361d3-4230-4653-942b-fc8ac7488bf9', 'Message', 'https://patternpedia.org/patternLanguages/eip/message', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/MessageIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/MessageSolution.gif)", "Solution": "Package the information into a Message, a data record that the messaging system can transmit through a message channel.", "Driving Question": "How can two applications connected by a message channel exchange a piece of information?"}', 'https://www.enterpriseintegrationpatterns.com/img/MessageIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('19c5ed05-1a24-4971-9aac-390e1931f010', 'Command Message', 'https://patternpedia.org/patternLanguages/eip/commandMessage', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/CommandMessageIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/CommandMessageSolution.gif)", "Solution": "Use a Command Message to reliably invoke a procedure in another application.", "Driving Question": "How can messaging be used to invoke a procedure in another application?"}', 'https://www.enterpriseintegrationpatterns.com/img/CommandMessageIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('b14e9775-09ad-4019-b5db-dd9670221679', 'Document Message', 'https://patternpedia.org/patternLanguages/eip/documentMessage', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/DocumentMessageIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/DocumentMessageSolution.gif)", "Solution": "Use a Document Message to reliably transfer a data structure between applications.", "Driving Question": "How can messaging be used to transfer data between applications?"}', 'https://www.enterpriseintegrationpatterns.com/img/DocumentMessageIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('f3afc386-7c81-41d1-9b94-a06a49deb965', 'Event Message', 'https://patternpedia.org/patternLanguages/eip/eventMessage', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/EventMessageIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/EventMessageSolution.gif)", "Solution": "Use an Event Message for reliable, asynchronous event notification between applications.", "Driving Question": "How can messaging be used to transmit events from one application to another?"}', 'https://www.enterpriseintegrationpatterns.com/img/EventMessageIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('ef45bb4d-7f1a-4840-9783-aa22ed40032a', 'Request-Reply', 'https://patternpedia.org/patternLanguages/eip/request-reply', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/RequestReplyIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/RequestReply.gif)", "Solution": "Send a pair of Request-Reply messages, each on its own channel.", "Driving Question": "When an application sends a message, how can it get a response from the receiver?"}', 'https://www.enterpriseintegrationpatterns.com/img/RequestReplyIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('ea7c0692-6545-40e3-8cf8-f4c828c5fce8', 'Return Address', 'https://patternpedia.org/patternLanguages/eip/returnAddress', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/ReturnAddressIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/ReturnAddressSolution.gif)", "Solution": "The request message should contain a Return Address that indicates where to send the reply message.", "Driving Question": "How does a replier know where to send the reply?"}', 'https://www.enterpriseintegrationpatterns.com/img/ReturnAddressIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('330ba4a6-411d-4d44-913a-2805a9f21cf7', 'Correlation Identifier', 'https://patternpedia.org/patternLanguages/eip/correlationIdentifier', '{"Icon": " ![](https://www.enterpriseintegrationpatterns.com/img/CorrelationIdentifierIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/CorrelationIdentifierSolution.gif)", "Solution": "Each reply message should contain a Correlation Identifier, a unique identifier that indicates which request message this reply is for.", "Driving Question": "How does a requestor that has received a reply know which request this is the reply for?"}', 'https://www.enterpriseintegrationpatterns.com/img/CorrelationIdentifierIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('acb053d6-b8be-4bce-b62d-3a8aa10b9a0d', 'Message Sequence', 'https://patternpedia.org/patternLanguages/eip/messageSequence', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/MessageSequenceIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/MessageSequenceSize.gif)", "Solution": "Whenever a large set of data may need to be broken into message-size chunks, send the data as a Message Sequence and mark each message with sequence identification fields.", "Driving Question": "How can messaging transmit an arbitrarily large amount of data?"}', 'https://www.enterpriseintegrationpatterns.com/img/MessageSequenceIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('045e55b5-bc6e-4787-adf6-0cacfddfead4', 'Delivery-Time Project Integration', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/delivery-timeProjectIntegration', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "Given multiple projects with dependencies between them, *delivery-time project integration* builds and tests each project individually before combining them. This approach integrates versions of code later than with build-time integration.\n\n\nOnce the projects have been combined and tested, their code progresses together through the rest of the delivery cycle.\n\n\nAs an example, an `application-infrastructure-stack` project defines a cluster of virtual machines using the server image defined in the `application-server-image` project (see figure).\n\n\nWhen someone makes a change to the infrastructure stack code, the delivery pipeline builds and tests the stack project on its own.\n\n\nIf the new version of the stack project passes those tests, it proceeds to the integration test phase, which tests the stack integrated with the last server image that passed its own tests. This stage is the integration point for the two projects. The versions of the projects then progress to later stages in the pipeline together.", "Motivation": "Building and testing projects individually before integrating them is one way to enforce clear boundaries and loose coupling between them.\n\n\nFor example, a team member implements a firewall rule in `application-infrastructure-stack`, which opens a TCP port defined in a configuration file in `application-server-image`. They write code that reads the port number directly from that configuration file. But when they push their code, the test stage for the stack fails, because the configuration file from the other project is not available on the build agent.\n\n\nThis failure is a good thing. It exposes coupling between the two projects. The team member can change their code to use a parameter value for the port number to open, setting the value later. The code will be more maintainable than a codebase with direct references to files across projects.", "Consequences": "Delivery-time integration puts the complexity of resolving and coordinating different versions of different projects into the delivery process. This requires a sophisticated delivery implementation, such as a pipeline.", "Applicability": "Delivery-time integration is useful when you need clear boundaries between projects in a codebase, but still want to test and deliver versions of each project together. The pattern is difficult to scale to a large number of projects.", "Implementation": "Delivery pipelines integrate different projects using the \"fan-in\" pipeline design. The stage that brings different projects together is called a fan-in stage, or project integration stage.\n\n\nHow the stage integrates different projects depends on what types of projects it combines. In the example of a stack project that uses a server image, the stack code would be applied and passed a reference to the relevant version of the image. Infrastructure dependencies are retrieved from the code delivery repository.\n\n\nThe same set of combined project versions need to be applied in later stages of the delivery process. There are two common approaches to handling this.\n\n\nOne approach is to bundle all of the project code into a single artifact to use in later stages. For example, when two different stack projects are integrated and tested, the integration stage could zip the code for both projects into a single archive, promoting that to downstream pipeline stages. A GitOps flow would merge the projects to the integration stage branch, and then merge them from that branch to downstream branches.\n\n\nAnother approach is to create a descriptor file with the version numbers of each project. For example:\n   descriptor-version: 1.9.1\n\n   stack-project:\n     name: application-infrastructure-stack\n     version: 1.2.34\n\n   server-image-project:\n     name: application-server-image\n     version: 1.1.1\nThe delivery process treats the descriptor file as an artifact. Each stage that applies the infrastructure code pulls the individual project artifact from the delivery repository.\n\n\nA third approach would be to tag relevant resources with an aggregated version number."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "Given multiple projects with dependencies between them, *delivery-time project integration* builds and tests each project individually before combining them. This approach integrates versions of code later than with build-time integration.\n\n\nOnce the projects have been combined and tested, their code progresses together through the rest of the delivery cycle.\n\n\nAs an example, an `application-infrastructure-stack` project defines a cluster of virtual machines using the server image defined in the `application-server-image` project (see figure).\n\n\nWhen someone makes a change to the infrastructure stack code, the delivery pipeline builds and tests the stack project on its own.\n\n\nIf the new version of the stack project passes those tests, it proceeds to the integration test phase, which tests the stack integrated with the last server image that passed its own tests. This stage is the integration point for the two projects. The versions of the projects then progress to later stages in the pipeline together.", "Motivation": "Building and testing projects individually before integrating them is one way to enforce clear boundaries and loose coupling between them.\n\n\nFor example, a team member implements a firewall rule in `application-infrastructure-stack`, which opens a TCP port defined in a configuration file in `application-server-image`. They write code that reads the port number directly from that configuration file. But when they push their code, the test stage for the stack fails, because the configuration file from the other project is not available on the build agent.\n\n\nThis failure is a good thing. It exposes coupling between the two projects. The team member can change their code to use a parameter value for the port number to open, setting the value later. The code will be more maintainable than a codebase with direct references to files across projects.", "Consequences": "Delivery-time integration puts the complexity of resolving and coordinating different versions of different projects into the delivery process. This requires a sophisticated delivery implementation, such as a pipeline.", "Applicability": "Delivery-time integration is useful when you need clear boundaries between projects in a codebase, but still want to test and deliver versions of each project together. The pattern is difficult to scale to a large number of projects.", "Implementation": "Delivery pipelines integrate different projects using the \"fan-in\" pipeline design. The stage that brings different projects together is called a fan-in stage, or project integration stage.\n\n\nHow the stage integrates different projects depends on what types of projects it combines. In the example of a stack project that uses a server image, the stack code would be applied and passed a reference to the relevant version of the image. Infrastructure dependencies are retrieved from the code delivery repository.\n\n\nThe same set of combined project versions need to be applied in later stages of the delivery process. There are two common approaches to handling this.\n\n\nOne approach is to bundle all of the project code into a single artifact to use in later stages. For example, when two different stack projects are integrated and tested, the integration stage could zip the code for both projects into a single archive, promoting that to downstream pipeline stages. A GitOps flow would merge the projects to the integration stage branch, and then merge them from that branch to downstream branches.\n\n\nAnother approach is to create a descriptor file with the version numbers of each project. For example:\n   descriptor-version: 1.9.1\n\n   stack-project:\n     name: application-infrastructure-stack\n     version: 1.2.34\n\n   server-image-project:\n     name: application-server-image\n     version: 1.1.1\nThe delivery process treats the descriptor file as an artifact. Each stage that applies the infrastructure code pulls the individual project artifact from the delivery repository.\n\n\nA third approach would be to tag relevant resources with an aggregated version number."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('c34d4c11-da4f-445d-8682-1c92dcfbb6be', 'Message Expiration', 'https://patternpedia.org/patternLanguages/eip/messageExpiration', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/MessageExpirationIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/MessageExpirationSolution.gif)", "Solution": "Set the Message Expiration to specify a time limit how long the message is viable.", "Driving Question": "How can a sender indicate when a message should be considered stale and thus shouldn’t be processed?"}', 'https://www.enterpriseintegrationpatterns.com/img/MessageExpirationIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('01d63259-109f-4136-878d-77e503ac8a11', 'Format Indicator', 'https://patternpedia.org/patternLanguages/eip/formatIndicator', '{"Icon": "", "Sketch": "", "Solution": "Design a data format that includes a Format Indicator, so that the message specifies what format it is using.", "Driving Question": "How can a message’s data format be designed to allow for possible future changes?"}', '', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('9c49472d-47fc-417e-b75a-512d57e76870', 'Message Filter', 'https://patternpedia.org/patternLanguages/eip/messageFilter', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/MessageFilterIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/MessageFilter.gif)", "Solution": "Use a special kind of Message Router, a Message Filter, to eliminate undesired messages from a channel based on a set of criteria.", "Driving Question": "How can a component avoid receiving uninteresting messages?"}', 'https://www.enterpriseintegrationpatterns.com/img/MessageFilterIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('be9c4245-79db-40cd-a0d4-c750c3a822b6', 'Dynamic Router', 'https://patternpedia.org/patternLanguages/eip/dynamicRouter', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/DynamicRouterIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/DynamicRouter.gif)", "Solution": "Use a Dynamic Router, a Router that can self-configure based on special configuration messages from participating destinations.", "Driving Question": "How can you avoid the dependency of the router on all possible destinations while maintaining its efficiency?"}', 'https://www.enterpriseintegrationpatterns.com/img/DynamicRouterIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf', 'Recipient List', 'https://patternpedia.org/patternLanguages/eip/recipientList', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/RecipientListIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/RecipientList.gif)", "Solution": "Define a channel for each recipient. Then use a Recipient List to inspect an incoming message, determine the list of desired recipients, and forward the message to all channels associated with the recipients in the list.", "Driving Question": "How do we route a message to a list of dynamically specified recipients?"}', 'https://www.enterpriseintegrationpatterns.com/img/RecipientListIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('7d28fe21-466a-4e22-9851-374e9cb93cd9', 'Splitter', 'https://patternpedia.org/patternLanguages/eip/splitter', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/SplitterIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/Sequencer.gif) ", "Solution": "Use a Splitter to break out the composite message into a series of individual messages, each containing data related to one item.", "Driving Question": "How can we process a message if it contains multiple elements, each of which may have to be processed in a different way?"}', 'https://www.enterpriseintegrationpatterns.com/img/SplitterIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('db5033cf-c13f-47b1-a617-aea77a0d5864', 'Aggregator', 'https://patternpedia.org/patternLanguages/eip/aggregator', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/AggregatorIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/Aggregator.gif)", "Solution": "Use a stateful filter, an Aggregator, to collect and store individual messages until a complete set of related messages has been received. Then, the Aggregator publishes a single message distilled from the individual messages.", "Driving Question": "How do we combine the results of individual, but related messages so that they can be processed as a whole?"}', 'https://www.enterpriseintegrationpatterns.com/img/AggregatorIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('8c047398-63a1-4940-a5c5-c44834f48516', 'Resequencer', 'https://patternpedia.org/patternLanguages/eip/resequencer', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/ResequencerIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/Resequencer.gif)", "Solution": "Use a stateful filter, a Resequencer, to collect and re-order messages so that they can be published to the output channel in a specified order.", "Driving Question": "How can we get a stream of related but out-of-sequence messages back into the correct order?"}', 'https://www.enterpriseintegrationpatterns.com/img/ResequencerIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('885ade35-d310-421a-98b8-877e27e51531', 'Composed Message Processor', 'https://patternpedia.org/patternLanguages/eip/composedMessageProcessor', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/DistributionAggregateIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/DistributionAggregate.gif)", "Solution": "Use Composed Message Processor to process a composite message. The Composed Message Processor splits the message up, routes the sub-messages to the appropriate destinations and re-aggregates the responses back into a single message.", "Driving Question": "How can you maintain the overall message flow when processing a message consisting of multiple elements, each of which may require different processing?"}', 'https://www.enterpriseintegrationpatterns.com/img/DistributionAggregateIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('ba3aaa33-9010-459f-acb5-5452788e9abc', 'Scatter-Gather', 'https://patternpedia.org/patternLanguages/eip/scatter-gather', '{"Icon": "", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/BroadcastAggregate.gif)", "Solution": "Use a Scatter-Gather that broadcasts a message to multiple recipients and re-aggregates the responses back into a single message.", "Driving Question": "How do you maintain the overall message flow when a message needs to be sent to multiple recipients, each of which may send a reply?"}', '', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('c7e15bdd-a5f3-486d-8e3d-f3117f39eb1a', 'Routing Slip', 'https://patternpedia.org/patternLanguages/eip/routingSlip', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/RoutingTableIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/RoutingTableSimple.gif)", "Solution": "Attach a Routing Slip to each message, specifying the sequence of processing steps. Wrap each component with a special message router that reads the Routing Slip and routes the message to the next component in the list.", "Driving Question": "How do we route a message consecutively through a series of processing steps when the sequence of steps is not known at design-time and may vary for each message?"}', 'https://www.enterpriseintegrationpatterns.com/img/RoutingTableIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('53adbbff-f4d6-4bd7-8b90-475f57913c1a', 'Process Manager', 'https://patternpedia.org/patternLanguages/eip/processManager', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/ProcessManagerIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/ProcessManager.gif)", "Solution": "Use a central processing unit, a Process Manager, to maintain the state of the sequence and determine the next processing step based on intermediate results.", "Driving Question": "How do we route a message through multiple processing steps when the required steps may not be known at design-time and may not be sequential?"}', 'https://www.enterpriseintegrationpatterns.com/img/ProcessManagerIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('329b49fc-de79-4d63-97ca-87a8f83ef1e2', 'Message Broker', 'https://patternpedia.org/patternLanguages/eip/messageBroker', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/MessageBrokerIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/MessageBroker.gif)", "Solution": "Use a central Message Broker that can receive messages from multiple destinations, determine the correct destination and route the message to the correct channel. Implement the internals of the Message Broker using the design patterns presented in this chapter.", "Driving Question": "How can you decouple the destination of a message from the sender and maintain central control over the flow of messages?"}', 'https://www.enterpriseintegrationpatterns.com/img/MessageBrokerIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('29f4224d-6b91-4218-aed6-0db3e5fa9dc2', 'Message Translator', 'https://patternpedia.org/patternLanguages/eip/messageTranslator', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/MessageTranslatorIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/MessageTranslator.gif)", "Solution": "Use a special filter, a Message Translator, between other filters or applications to translate one data format into another.", "Driving Question": "How can systems using different data formats communicate with each other using messaging?"}', 'https://www.enterpriseintegrationpatterns.com/img/MessageTranslatorIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('658b6fce-40b0-4f05-a2da-2fd3e33684fb', 'Envelope Wrapper', 'https://patternpedia.org/patternLanguages/eip/envelopeWrapper', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/EnvelopeWrapperIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/Wrapper.gif)", "Solution": "Use a Envelope Wrapper to wrap application data inside an envelope that is compliant with the messaging infrastructure. Unwrap the message when it arrives at the destination.", "Driving Question": "How can existing systems participate in a messaging exchange that places specific requirements on the message format, such as message header fields or encryption?"}', 'https://www.enterpriseintegrationpatterns.com/img/EnvelopeWrapperIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('b3418862-26a6-4bbb-b546-c12f48c45b16', 'Content Enricher', 'https://patternpedia.org/patternLanguages/eip/contentEnricher', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/DataEnricherIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/DataEnricher.gif)", "Solution": "Use a specialized transformer, a Content Enricher, to access an external data source in order to augment a message with missing information.", "Driving Question": "How do we communicate with another system if the message originator does not have all the required data items available?"}', 'https://www.enterpriseintegrationpatterns.com/img/DataEnricherIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('26bc2583-1c9f-4d6e-9968-e5aa0e8ab82f', 'Content Filter', 'https://patternpedia.org/patternLanguages/eip/contentFilter', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/ContentFilterIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/ContentFilter.gif)", "Solution": "Use a Content Filter to remove unimportant data items from a message leaving only important items.", "Driving Question": "How do you simplify dealing with a large message, when you are interested only in a few data items?"}', 'https://www.enterpriseintegrationpatterns.com/img/ContentFilterIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('6c3f4121-65c2-444e-9d5a-f16f47fd2ed5', 'Claim Check', 'https://patternpedia.org/patternLanguages/eip/claimCheck', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/StoreInLibraryIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/StoreInLibrary.gif)", "Solution": "Store message data in a persistent store and pass a Claim Check to subsequent components. These components can use the Claim Check to retrieve the stored information.", "Driving Question": "How can we reduce the data volume of message sent across the system without sacrificing information content?"}', 'https://www.enterpriseintegrationpatterns.com/img/StoreInLibraryIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('89dd6672-dd42-470b-8e84-129e4ec7540c', 'Normalizer', 'https://patternpedia.org/patternLanguages/eip/normalizer', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/NormalizerIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/NormalizerDetail.gif)", "Solution": "Use a Normalizer to route each message type through a custom Message Translator so that the resulting messages match a common format.", "Driving Question": "How do you process messages that are semantically equivalent, but arrive in a different format?"}', 'https://www.enterpriseintegrationpatterns.com/img/NormalizerIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('98ccd4dc-86a8-4652-b2c1-5b83b6f078e1', 'Canonical Data Model', 'https://patternpedia.org/patternLanguages/eip/canonicalDataModel', '{"Icon": "", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/CanonicalDataModel.gif)", "Solution": "Therefore, design a Canonical Data Model that is independent from any specific application. Require each application to produce and consume messages in this common format.", "Driving Question": "How can you minimize dependencies when integrating applications that use different data formats?"}', '', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('3953e924-30f6-4561-8e02-e761b417c1d4', 'Message Endpoint', 'https://patternpedia.org/patternLanguages/eip/messageEndpoint', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/MessageEndpointIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/MessageEndpointSolution.gif)", "Solution": "Connect an application to a messaging channel using a Message Endpoint, a client of the messaging system that the application can then use to send or receive messages.", "Driving Question": "How does an application connect to a messaging channel to send and receive messages?"}', 'https://www.enterpriseintegrationpatterns.com/img/MessageEndpointIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('02fc1261-b7d6-4d85-89ef-c987ab92f3d4', 'Messaging Gateway', 'https://patternpedia.org/patternLanguages/eip/messagingGateway', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/MessagingGatewayIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/MessagingGatewaySolution.gif)", "Solution": "Use a Messaging Gateway, a class than wraps messaging-specific method calls and exposes domain-specific methods to the application.", "Driving Question": "How do you encapsulate access to the messaging system from the rest of the application?"}', 'https://www.enterpriseintegrationpatterns.com/img/MessagingGatewayIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('29acda13-a41f-4270-9248-375814889f20', 'Messaging Mapper', 'https://patternpedia.org/patternLanguages/eip/messagingMapper', '{"Icon": "", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/MessagingMapperClassDiagram.gif)", "Solution": "Create a separate Messaging Mapper that contains the mapping logic between the messaging infrastructure and the domain objects. Neither the objects nor the infrastructure have knowledge of the Messaging Mapper''s existence.", "Driving Question": "How do you move data between domain objects and the messaging infrastructure while keeping the two independent of each other?"}', '', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('7116be12-b724-456f-ac3d-0a1ab6e85b9a', 'Static Workload', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/staticWorkload', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/static_workload_icon.png)", "Intend": "IT resources with an equal utilization over time experience Static Workload.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/static_workload_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/static_workload_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('a2b0eaca-aa24-4036-b730-265a97043b75', 'Transactional Client', 'https://patternpedia.org/patternLanguages/eip/transactionalClient', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/TransactionalClientIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/TransactionalClientSolution.gif)", "Solution": "Use a Transactional Client—make the client’s session with the messaging system transactional so that the client can specify transaction boundaries.", "Driving Question": "How can a client control its transactions with the messaging system?"}', 'https://www.enterpriseintegrationpatterns.com/img/TransactionalClientIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('78b58f38-9075-44a1-8eb4-5ab0ba4b801d', 'Polling Consumer', 'https://patternpedia.org/patternLanguages/eip/pollingConsumer', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/PollingConsumerIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/PollingConsumerSolution.gif)", "Solution": "The application should use a Polling Consumer, one that explicitly makes a call when it wants to receive a message.", "Driving Question": "How can an application consume a message when the application is ready?"}', 'https://www.enterpriseintegrationpatterns.com/img/PollingConsumerIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65', 'Event-Driven Consumer', 'https://patternpedia.org/patternLanguages/eip/event-drivenConsumer', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/EventDrivenConsumerIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/EventDrivenConsumerSolution.gif)", "Solution": "The application should use an Event-Driven Consumer, one that is automatically handed messages as they’re delivered on the channel.", "Driving Question": "How can an application automatically consume messages as they become available?"}', 'https://www.enterpriseintegrationpatterns.com/img/EventDrivenConsumerIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('d9bd086d-030c-4ca4-b6d2-29c2fbf517c8', 'Competing Consumers', 'https://patternpedia.org/patternLanguages/eip/competingConsumers', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/CompetingConsumersIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/CompetingConsumers.gif)", "Solution": "Create multiple Competing Consumers on a single channel so that the consumers can process multiple messages concurrently.", "Driving Question": "How can a messaging client process multiple messages concurrently?"}', 'https://www.enterpriseintegrationpatterns.com/img/CompetingConsumersIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('7c775873-1ebf-4574-8cb1-29b0c661b8f3', 'Message Dispatcher', 'https://patternpedia.org/patternLanguages/eip/messageDispatcher', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/MessageDispatcherIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/MessageDispatcher.gif)", "Solution": "Create a Message Dispatcher on a channel that will consume messages from a channel and distribute them to performers.", "Driving Question": "How can multiple consumers on a single channel coordinate their message processing?"}', 'https://www.enterpriseintegrationpatterns.com/img/MessageDispatcherIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('0ee54310-5f4d-4435-9c34-cf93f742e101', 'Selective Consumer', 'https://patternpedia.org/patternLanguages/eip/selectiveConsumer', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/MessageSelectorIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/MessageSelectorSolution.gif)", "Solution": "Make the consumer a Selective Consumer, one that filteres the messages delivered by its channel so that it only receives the ones that match its criteria.", "Driving Question": "How can a message consumer select which messages it wishes to receive?"}', 'https://www.enterpriseintegrationpatterns.com/img/MessageSelectorIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('ca07715c-696e-4a62-af10-74145ff818f5', 'Durable Subscriber', 'https://patternpedia.org/patternLanguages/eip/durableSubscriber', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/DurableSubscriptionIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/DurableSubscriptionSolution.gif)", "Solution": "Use a Durable Subscriber to make the messaging system save messages published while the subscriber is disconnected.", "Driving Question": "How can a subscriber avoid missing messages while it’s not listening for them?"}', 'https://www.enterpriseintegrationpatterns.com/img/DurableSubscriptionIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('06c5d5cc-5c29-4a74-be75-dfba20cc4f80', 'Idempotent Receiver', 'https://patternpedia.org/patternLanguages/eip/idempotentReceiver', '{"Icon": "", "Sketch": "", "Solution": "Design a receiver to be an Idempotent Receiver--one that can safely receive the same message multiple times.", "Driving Question": "How can a message receiver deal with duplicate messages?"}', '', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('9167d0da-69ec-40a5-b7f8-5eab25833d70', 'Service Activator', 'https://patternpedia.org/patternLanguages/eip/serviceActivator', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/MessagingAdapterIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/MessagingAdapterSolution.gif)", "Solution": "Design a Service Activator that connects the messages on the channel to the service being accessed.", "Driving Question": "How can an application design a service to be invoked both via various messaging technologies and via non-messaging techniques?"}', 'https://www.enterpriseintegrationpatterns.com/img/MessagingAdapterIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('3b3a9b48-63aa-4523-be3a-6a39fdf4bda7', 'Point-to-Point Channel', 'https://patternpedia.org/patternLanguages/eip/point-to-pointChannel', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/PointToPointIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/PointToPointSolution.gif)", "Solution": "Send the message on a Point-to-Point Channel, which ensures that only one receiver will receive a particular message.", "Driving Question": "How can the caller be sure that exactly one receiver will receive the document or perform the call?"}', 'https://www.enterpriseintegrationpatterns.com/img/PointToPointIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('28343b10-ce82-4c1f-aef2-f7d95316b48e', 'Publish-Subscribe Channel', 'https://patternpedia.org/patternLanguages/eip/publish-subscribeChannel', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/PublishSubscribeIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/PublishSubscribeSolution.gif)", "Solution": "Send the event on a Publish-Subscribe Channel, which delivers a copy of a particular event to each receiver.", "Driving Question": "How can the sender broadcast an event to all interested receivers?"}', 'https://www.enterpriseintegrationpatterns.com/img/PublishSubscribeIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('cf3a2b5f-9d7a-4f2c-ba39-ab2911d3a7d7', 'Datatype Channel', 'https://patternpedia.org/patternLanguages/eip/datatypeChannel', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/DatatypeChannelIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/DatatypeSolution.gif)", "Solution": "Use a separate Datatype Channel for each data type, so that all data on a particular channel is of the same type.", "Driving Question": "How can the application send a data item such that the receiver will know how to process it?"}', 'https://www.enterpriseintegrationpatterns.com/img/DatatypeChannelIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('6e2eacf0-d026-4a00-8ca4-157298b75f0f', 'Apply-Time Project Integration', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/apply-timeProjectIntegration', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "*Also known as: decoupled delivery or decoupled pipelines.*\n\n\n*Apply-time project integration* involves pushing multiple projects through delivery stages separately. When someone changes a project''s code, the pipeline applies the updated code to each environment in the delivery path for that project. This version of the project code may integrate with different versions of upstream or downstream projects in each of these environments.\n\n\nA `application-infrastructure-stack` project depends on networking structures created by the `shared-network-stack` project. Each project has its own delivery stages, as illustrated in the figure.\n\n\nIntegration between the projects takes place by applying the `application-infrastructure-stack` code to an environment. This operation creates or changes a server cluster that uses network structures (for example, subnets) from the shared networking.\n\n\nThis integration happens regardless of which version of the shared networking stack is in place in a given environment. So the integration of versions happens separately each time the code is applied.", "Motivation": "Integrating projects at apply time minimizes coupling between projects. Different teams can push changes to their systems to production without needing to coordinate, and without being blocked by problems with a change to another team''s projects.", "Consequences": "This pattern moves the risk of breaking dependencies across projects to the applytime operation. It doesn''t ensure consistency through the pipeline. If someone pushes a change to one project through the pipeline faster than changes to other projects, they will integrate with a different version in production than they did in test environments.\n\n\nInterfaces between projects need to be carefully managed to maximize compatibility across different versions on each side of any given dependency. So this pattern requires more complexity in designing, maintaining, and testing dependencies and interfaces.", "Applicability": "This level of decoupling suits organizations with an autonomous team structure. It also helps with larger-scale systems, where coordinating releases and delivering them in lock-step across hundreds or thousands of engineers is impractical.", "Implementation": "In some respects, designing and implementing decoupled builds and pipelines using apply-time integration is simpler than alternative patterns. Each pipeline builds, tests, and delivers a single project.\n\n\nStrategies for integrating different infrastructure stacks, for example, when a stage applies the `application-infrastructure-stack`, it needs to reference networking structures created by the `shared-network-stack`. \n\n\nThere is no guarantee of which version of another project''s code was used in any given environment. So teams need to identify dependencies between projects clearly and treat them as contracts. The `shared-network-stack` exposes identifiers for the networking structures that other projects may use. It needs to expose these in a standardized way.\n\n\nYou can use test fixtures to test each stack in isolation. As an example, the team would like to test the `application-infrastructure-stack` project without using an instance of `shared-network-stack`. The network stack defines redundant and complex infrastructure that isn''t needed to support test cases. So the team''s test setup can create a stripped-down set of networking. Doing this also reduces the risk that the application stack evolves to assume details of the network stack''s implementation.\n\n\nA team that owns a project that other projects depend on can implement contract tests that prove its code meets expectations. The `shared-network-stack` can verify that the networking structures—subnets—are created and that their identifiers are exposed using the mechanism that other projects use to consume them.\n\n\nMake sure that contract tests are clearly labeled. If someone makes a code change that causes the test to fail, they should understand that they may be breaking other projects, rather than thinking they only need to update the test to match their change.\n\n\nMany organizations find consumer-driven contract (CDC) testing useful. With this model, teams working on a *consumer* project that depends on resources created in a *provider* project write tests that run in the provider project''s pipeline. This helps the provider team to understand the expectations of consumer teams."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "*Also known as: decoupled delivery or decoupled pipelines.*\n\n\n*Apply-time project integration* involves pushing multiple projects through delivery stages separately. When someone changes a project''s code, the pipeline applies the updated code to each environment in the delivery path for that project. This version of the project code may integrate with different versions of upstream or downstream projects in each of these environments.\n\n\nA `application-infrastructure-stack` project depends on networking structures created by the `shared-network-stack` project. Each project has its own delivery stages, as illustrated in the figure.\n\n\nIntegration between the projects takes place by applying the `application-infrastructure-stack` code to an environment. This operation creates or changes a server cluster that uses network structures (for example, subnets) from the shared networking.\n\n\nThis integration happens regardless of which version of the shared networking stack is in place in a given environment. So the integration of versions happens separately each time the code is applied.", "Motivation": "Integrating projects at apply time minimizes coupling between projects. Different teams can push changes to their systems to production without needing to coordinate, and without being blocked by problems with a change to another team''s projects.", "Consequences": "This pattern moves the risk of breaking dependencies across projects to the applytime operation. It doesn''t ensure consistency through the pipeline. If someone pushes a change to one project through the pipeline faster than changes to other projects, they will integrate with a different version in production than they did in test environments.\n\n\nInterfaces between projects need to be carefully managed to maximize compatibility across different versions on each side of any given dependency. So this pattern requires more complexity in designing, maintaining, and testing dependencies and interfaces.", "Applicability": "This level of decoupling suits organizations with an autonomous team structure. It also helps with larger-scale systems, where coordinating releases and delivering them in lock-step across hundreds or thousands of engineers is impractical.", "Implementation": "In some respects, designing and implementing decoupled builds and pipelines using apply-time integration is simpler than alternative patterns. Each pipeline builds, tests, and delivers a single project.\n\n\nStrategies for integrating different infrastructure stacks, for example, when a stage applies the `application-infrastructure-stack`, it needs to reference networking structures created by the `shared-network-stack`. \n\n\nThere is no guarantee of which version of another project''s code was used in any given environment. So teams need to identify dependencies between projects clearly and treat them as contracts. The `shared-network-stack` exposes identifiers for the networking structures that other projects may use. It needs to expose these in a standardized way.\n\n\nYou can use test fixtures to test each stack in isolation. As an example, the team would like to test the `application-infrastructure-stack` project without using an instance of `shared-network-stack`. The network stack defines redundant and complex infrastructure that isn''t needed to support test cases. So the team''s test setup can create a stripped-down set of networking. Doing this also reduces the risk that the application stack evolves to assume details of the network stack''s implementation.\n\n\nA team that owns a project that other projects depend on can implement contract tests that prove its code meets expectations. The `shared-network-stack` can verify that the networking structures—subnets—are created and that their identifiers are exposed using the mechanism that other projects use to consume them.\n\n\nMake sure that contract tests are clearly labeled. If someone makes a code change that causes the test to fail, they should understand that they may be breaking other projects, rather than thinking they only need to update the test to match their change.\n\n\nMany organizations find consumer-driven contract (CDC) testing useful. With this model, teams working on a *consumer* project that depends on resources created in a *provider* project write tests that run in the provider project''s pipeline. This helps the provider team to understand the expectations of consumer teams."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('3e74edee-f076-45b3-8247-a5dd19cb24b2', 'Invalid Message Channel', 'https://patternpedia.org/patternLanguages/eip/invalidMessageChannel', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/InvalidMessageChannelIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/InvalidMessageSolution.gif)", "Solution": "The receiver should move the improper message to an Invalid Message Channel, a special channel for messages that could not be processed by their receivers.", "Driving Question": "How can a messaging receiver gracefully handle receiving a message that makes no sense?"}', 'https://www.enterpriseintegrationpatterns.com/img/InvalidMessageChannelIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('78185c7d-f353-49ee-b1e2-c2a0bcfc4ed2', 'Dead Letter Channel', 'https://patternpedia.org/patternLanguages/eip/deadLetterChannel', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/DeadLetterChannelIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/DeadLetterChannelSolution.gif)", "Solution": "When a messaging system determines that it cannot or should not deliver a message, it may elect to move the message to a Dead Letter Channel.", "Driving Question": "What will the messaging system do with a message it cannot deliver?"}', 'https://www.enterpriseintegrationpatterns.com/img/DeadLetterChannelIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('96ec8c86-c024-4d03-a283-49375e43e086', 'Guaranteed Delivery', 'https://patternpedia.org/patternLanguages/eip/guaranteedDelivery', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/GuaranteedMessagingIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/GuaranteedMessagingSolution.gif)", "Solution": "Use Guaranteed Delivery to make messages persistent so that they are not lost even if the messaging system crashes.", "Driving Question": "How can the sender make sure that a message will be delivered, even if the messaging system fails?"}', 'https://www.enterpriseintegrationpatterns.com/img/GuaranteedMessagingIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('b5c458ea-3a4e-4211-afc9-82510c2cff46', 'Channel Adapter', 'https://patternpedia.org/patternLanguages/eip/channelAdapter', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/ChannelAdapterIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/ChannelAdapterSolution.gif)", "Solution": "Use a Channel Adapter that can access the application''s API or data and publish messages on a channel based on this data, and that likewise can receive messages and invoke functionality inside the application.", "Driving Question": "How can you connect an application to the messaging system so that it can send and receive messages?"}', 'https://www.enterpriseintegrationpatterns.com/img/ChannelAdapterIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('adcaac7d-a028-4d33-9111-ef3e711637e7', 'Messaging Bridge', 'https://patternpedia.org/patternLanguages/eip/messagingBridge', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/MessagingBridgeIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/MessagingBridge.gif)", "Solution": "Use a Messaging Bridge, a connection between messaging systems, to replicate messages between systems.", "Driving Question": "How can multiple messaging systems be connected so that messages available on one are also available on the others?"}', 'https://www.enterpriseintegrationpatterns.com/img/MessagingBridgeIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('ccb661e2-6c0d-4020-9eb2-abd290230b5b', 'Message Bus', 'https://patternpedia.org/patternLanguages/eip/messageBus', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/MessageBusIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/MessageBusSolution.gif)", "Solution": "Structure the connecting middleware between these applications as a Message Bus that enables them to work together using messaging.", "Driving Question": "What is an architecture that enables separate applications to work together, but in a decoupled fashion such that applications can be easily added or removed without affecting the others?"}', 'https://www.enterpriseintegrationpatterns.com/img/MessageBusIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('712b29e2-411b-4ef8-8f81-6cae15222c07', 'Control Bus', 'https://patternpedia.org/patternLanguages/eip/controlBus', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/ControlBusIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/ControlBus.gif)", "Solution": "Use a Control Bus to manage an enterprise integration system. The Control Bus uses the same messaging mechanism used by the application data, but uses separate channels to transmit data that is relevant to the management of components involved in the message flow.", "Driving Question": "How can we effectively administer a messaging system that is distributed across multiple platforms and a wide geographic area?"}', 'https://www.enterpriseintegrationpatterns.com/img/ControlBusIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('662ffad9-7dd3-490f-93d2-efb92f74c5ae', 'Detour', 'https://patternpedia.org/patternLanguages/eip/detour', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/DetourIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/Detour.gif)", "Solution": "Construct a Detour with a context-based router controlled via the Control Bus. In one state the router routes incoming messages through additional steps while in the other it routes messages directly to the destination channel.", "Driving Question": "How can you route a message through intermediate steps to perform validation, testing or debugging functions?"}', 'https://www.enterpriseintegrationpatterns.com/img/DetourIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('b244a2fb-1f27-4e6d-8f43-7e512798f299', 'Wire Tap', 'https://patternpedia.org/patternLanguages/eip/wireTap', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/WireTapIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/WireTap.gif)", "Solution": "Insert a simple Recipient List into the channel that publishes each incoming message to the main channel and a secondary channel.", "Driving Question": "How do you inspect messages that travel on a point-to-point channel?"}', 'https://www.enterpriseintegrationpatterns.com/img/WireTapIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('84c81b22-765b-4edb-a6e7-c626151e0af8', 'Message History', 'https://patternpedia.org/patternLanguages/eip/messageHistory', '{"Icon": "", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/MessageHistory.gif)", "Solution": "Therefore, attach a Message History to the message. The Message History is a list of all applications that the message passed through since its origination.", "Driving Question": "How can we effectively analyze and debug the flow of messages in a loosely coupled system?"}', '', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('c699fdf0-f31e-45c0-9d0d-cee2388e1544', 'Smart Proxy', 'https://patternpedia.org/patternLanguages/eip/smartProxy', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/SmartProxyIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/SmartProxy.gif)", "Solution": "Use a Smart Proxy to store the Return Address supplied by the original requestor and replace it with the address of the Smart Proxy. When the service sends the reply message route it to the original Return Address.", "Driving Question": "How can you track messages on a service that publishes reply messages to the Return Address specified by the requestor?"}', 'https://www.enterpriseintegrationpatterns.com/img/SmartProxyIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('467cae27-d8be-4509-af26-64ed0a809028', 'Distributed Application', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/distributedApplication', '{"Icon": "Enter your input for this section here.", "Intend": "A cloud application divides provided functionality among multiple application components that can be scaled out independently.", "Solution Sketch": ""}', 'https://www.cloudcomputingpatterns.org/icons/distributed_application_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('5778b4ba-4acd-4c94-9c10-d83d80f75d50', 'Test Message', 'https://patternpedia.org/patternLanguages/eip/testMessage', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/TestMessageIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/TestMessage.gif)", "Solution": "Therefore, use Test Message to assure the health of message processing components (see Figure).", "Driving Question": "What happens, though, if a component is actively processing messages, but garbles outgoing messages due to an internal fault?"}', 'https://www.enterpriseintegrationpatterns.com/img/TestMessageIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('38b1dd17-c3ff-46c4-b300-2e1c7d542abe', 'Channel Purger', 'https://patternpedia.org/patternLanguages/eip/channelPurger', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/ChannelPurgerIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/ChannelPurger.gif)", "Solution": "Use a Channel Purger to remove unwanted messages from a channel.", "Driving Question": "How can you keep ''left-over'' messages on a channel from disturbing tests or running systems?"}', 'https://www.enterpriseintegrationpatterns.com/img/ChannelPurgerIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('f619a8fd-fff8-4981-8947-48ebaaad993c', 'File Transfer', 'https://patternpedia.org/patternLanguages/eip/fileTransfer', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/FileTransferIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/FileTransferIntegration.gif) ", "Solution": "Have each application produce files containing information that other applications need to consume. Integrators take the responsibility of transforming files into different formats. Produce the files at regular intervals according to the nature of the business.", "Driving Question": "How can I integrate multiple applications so that they work together and can exchange information?"}', 'https://www.enterpriseintegrationpatterns.com/img/FileTransferIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('60e3ca01-0b7a-4785-acd7-3dddad0eea8e', 'Shared Database', 'https://patternpedia.org/patternLanguages/eip/sharedDatabase', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/SharedDatabaseIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/SharedDatabaseIntegration.gif)", "Solution": "Integrate applications by having them store their data in a single Shared Database.", "Driving Question": "How can I integrate multiple applications so that they work together and can exchange information?"}', 'https://www.enterpriseintegrationpatterns.com/img/SharedDatabaseIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('36531ec5-477c-4d74-8d84-43276359aa14', 'Remote Procedure Invocation', 'https://patternpedia.org/patternLanguages/eip/remoteProcedureInvocation', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/EncapsulatedSynchronousIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/EncapsulatedSynchronousIntegration.gif)", "Solution": "Develop each application as a large-scale object or component with encapsulated data. Provide an interface to allow other applications to interact with the running application.", "Driving Question": "How can I integrate multiple applications so that they work together and can exchange information?"}', 'https://www.enterpriseintegrationpatterns.com/img/EncapsulatedSynchronousIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('a7e45f3a-e408-4593-9aba-0a724c5ebf26', 'Messaging', 'https://patternpedia.org/patternLanguages/eip/messaging', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/MessagingIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/Messaging.gif)", "Solution": "Use Messaging to transfer packets of data frequently, immediately, reliably, and asynchronously, using customizable formats.", "Driving Question": "How can I integrate multiple applications so that they work together and can exchange information?"}', 'https://www.enterpriseintegrationpatterns.com/img/MessagingIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('9fee292c-8c59-4a99-a3c2-467717a22c70', 'Message Channel', 'https://patternpedia.org/patternLanguages/eip/messageChannel', '{"Icon": "![](https://www.enterpriseintegrationpatterns.com/img/ChannelIcon.gif)", "Sketch": "![](https://www.enterpriseintegrationpatterns.com/img/MessageChannelSolution.gif)", "Solution": "Connect the applications using a Message Channel, where one application writes information to the channel and the other one reads that information from the channel.", "Driving Question": "How does one application communicate with another using messaging?"}', 'https://www.enterpriseintegrationpatterns.com/img/ChannelIcon.gif', NULL, 'f6b807aa-5905-4435-aec6-324355a0483f', NULL);
INSERT INTO public.pattern VALUES ('3baad63c-42d2-46cb-b7a5-ab394b4e012c', 'Infrastructure as a Service (IaaS)', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/infrastructureAsAService(iaas)', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/infrastructure_as_a_service_icon.png)", "Intend": "Providers share physical and virtual hardware IT resources between customers to enable self-service, rapid elasticity, and pay-per-use pricing.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/infrastructure_as_a_service_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/infrastructure_as_a_service_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('4d153210-05d9-43f0-8560-3c3bd722d8bd', 'Exactly-once Delivery', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/exactly-onceDelivery', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/exactly_once_delivery_icon.png)", "Intend": "For many critical systems duplicate messages are inacceptable. The messaging system ensures that each message is delivered exactly once by filtering possible message duplicates automatically.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/exactly_once_delivery_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/exactly_once_delivery_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('2ee3eb24-165d-46d5-976c-9eb052a1912b', 'Execution Environment', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/executionEnvironment', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/execution_environment_icon.png)", "Intend": "To avoid duplicate implementation of functionality, application components are deployed to a hosting environment providing middleware services as well as often used functionality.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/execution_environment_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/execution_environment_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('d53673f0-fc52-48c8-8893-f8f244cf6ee3', 'At-least-twice Delivery', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/at-least-onceDelivery', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/at_least_once_delivery_icon.png)", "Intend": "In case of failures that lead to message loss or take too long to recover from, messages are retransmitted to assure they are delivered at least once.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/at_least_once_delivery_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/at_least_once_delivery_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('3a1fb1cd-1078-4616-b603-a22c8f9449b2', 'Transaction-based Delivery', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/transaction-basedDelivery', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/transaction_based_delivery_icon.png)", "Intend": "Clients retrieve messages under a transactional context to ensure that messages are received by a handling component.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/transaction_based_delivery_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/transaction_based_delivery_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('10a46ac6-1420-41ad-9d3a-ab244d959062', 'Environment-based Availability', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/environment-basedAvailability', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/environment_based_availability_icon.png)", "Intend": "A cloud provider guarantees the availability of the environment hosting individual nodes, such as virtual servers or hosted application components.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/environment_based_availability_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/environment_based_availability_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('e6e239af-3d3a-4dfb-8c84-cbe268ca90d4', 'Hypervisor', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/hypervisor', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/hypervisor_icon.png)", "Intend": "To enable the elasticity of clouds, the time required to provision and decommission servers is reduced through hardware virtualization.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/hypervisor_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/hypervisor_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('ce95634f-69e0-4f97-a9b6-10bc8364849f', 'Elastic Infrastructure', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/elasticInfrastructure', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/elastic_infrastructure_icon.png)", "Intend": "Hosting of virtual servers, disk storage, and configuration of network connectivity is offered via a self-service interface over a network.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/elastic_infrastructure_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/elastic_infrastructure_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('ecb7d0a0-72d0-44c3-90dd-5b9af536ebca', 'Key-Value Storage', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/key-valueStorage', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/key_value_storage_icon.png)", "Intend": "Semi-structured or unstructured data is stored with limited querying support but high-performance, availability, and flexibility.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/key_value_storage_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/key_value_storage_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('61130a8b-68ad-4281-80ad-a62d44bc4090', 'Hybrid Cloud', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/hybridCloud', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/hybrid_cloud_icon.png)", "Intend": "Different clouds and static data centers are integrated to form a homogeneous hosting environment.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/hybrid_cloud_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/hybrid_cloud_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('0a4ffca5-3b28-4897-9842-295f9bb6bea8', 'Relational Database', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/relationalDatabase', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/relational_database_icon.png)", "Intend": "Data is structured according to a schema that is enforced during data manipulation and enables expressive queries of handled data.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/relational_database_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/relational_database_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('386a4d90-1a3d-427c-96a6-6f1a433daae6', 'Virtual Networking', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/virtualNetworking', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/virtual_networking_icon.png)", "Intend": "Networking resources are virtualized to empower customers to configure networks, firewalls, and remote access using a self-service interface.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/virtual_networking_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/virtual_networking_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('407ae0d5-e5be-4151-900b-041ed5dfcdbe', 'Blob Storage', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/blobStorage', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/blob_storage_icon.png)", "Intend": "Data is provided in form of large files that are made available in a file system-like fashion by Storage Offerings that provides elasticity.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/blob_storage_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/blob_storage_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('b8e826e0-dc07-4515-ae10-87b402e3d52c', 'Private Cloud', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/privateCloud', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/private_cloud_icon.png)", "Intend": "IT resources are provided as a service exclusively to one customer in order to meet high requirements on privacy, security, and trust while enabling elastic use of a static resource pool as good as possible.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/private_cloud_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/private_cloud_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('358bf776-378f-465e-a9e6-e8a1c7716825', 'Public Cloud', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/publicCloud', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/public_cloud_icon.png)", "Intend": "IT resources are provided as a service to a very large customer group in order to enable elastic use of a static resource pool.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/public_cloud_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/public_cloud_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('a81eb2c5-84ce-4a14-8242-e9ce19532423', 'Elastic Platform', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/elasticPlatform', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/elastic_platform_icon.png)", "Intend": "Middleware for the execution of custom applications, their communication, and data storage is offered via a self-service interface over a network.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/elastic_platform_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/elastic_platform_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('7f488cff-525f-4e50-a6c6-219b4ab4854d', 'Periodic Workload', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/periodicWorkload', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/periodic_workload_icon.png)", "Intend": "IT resources with a peaking utilization at reoccurring time intervals experience periodic workload.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/periodic_workload_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/periodic_workload_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('9b50b4bf-4b5c-4d52-a7d3-1b0e6a0f53f9', 'Once-in-a-lifetime Workload', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/once-in-a-lifetimeWorkload', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/once_in_a_lifetime_workload_icon.png)", "Intend": "IT resources with an equal utilization over time disturbed by a strong peak occurring only once experience Once-in-a-lifetime Workload.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/once_in_a_lifetime_workload_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/once_in_a_lifetime_workload_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('2fb586fd-9982-4f4e-987b-17909069e10e', 'Hybrid Backup', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/hybridBackup', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/hybrid_backup_icon.png)", "Intend": "Data is periodically extracted from an application to be archived in an elastic cloud for disaster recovery purposes.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/hybrid_backup_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/hybrid_backup_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('cbc6fe12-4a7d-4de5-b709-b20dd0cacbbf', 'Map Reduce', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/mapReduce', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/map_reduce_icon.png)", "Intend": "Large data sets to be processed are divided into smaller data chunks and distributed among processing application components. Individual results are later consolidated.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/map_reduce_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/map_reduce_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('d285eda8-41ee-4ba2-879d-52acec6a1416', 'Platform as a Service (PaaS)', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/platformAsAService(paas)', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/platform_as_a_service_icon.png)", "Intend": "Providers share IT resources providing an application hosting environment between customers to enable self-service, rapid elasticity, and pay-per-use pricing.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/platform_as_a_service_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/platform_as_a_service_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('81dba31f-e19a-4a8b-a07f-e1561fc2ce06', 'Eventual Consistency', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/eventualConsistency', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/eventual_consistency_icon.png)", "Intend": "If data is stored at different locations (replicas) to improve response time and avoid data loss in case of failures. Performance and the availability of data in case of network partitioning are enabled by ensuring data consistency eventually and not at all times.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/eventual_consistency_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/eventual_consistency_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('b6436fe2-9e3f-49ac-9e09-5cce86e480e1', 'Community Cloud', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/communityCloud', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/community_cloud_icon.png)", "Intend": "IT resources are provided as a service to a group of customers trusting each other in order to enable collaborative elastic use of a static resource pool.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/community_cloud_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/community_cloud_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('7c8849ee-26ad-4910-b798-902367e617d6', 'Node-based Availability', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/node-basedAvailability', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/node_based_availability_icon.png)", "Intend": "A cloud provider guarantees the availability of individual nodes, such as individual virtual servers, middleware components or hosted application components.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/node_based_availability_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/node_based_availability_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('80d829b6-d1ed-40a3-95ea-7e0b34de8eba', 'Timeout-based Delivery', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/timeout-basedDelivery', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/timeout_based_delivery_icon.png)", "Intend": "Clients acknowledge message receptions to ensure that messages are received properly.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/timeout_based_delivery_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/timeout_based_delivery_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('e6106e4d-46a4-4557-8c2d-009ff7159464', 'Block Storage', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/blockStorage', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/block_storage_icon.png)", "Intend": "Centralized storage is integrated into servers as a local hard drive managed by the operating system to enable access to this storage via the local file system.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/block_storage_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/block_storage_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('68a4bbc9-2535-4cfc-a4f4-b149adfb674a', 'Software as a Service (SaaS)', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/softwareAsAService(saas)', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/software_as_a_service_icon.png)", "Intend": "Providers share IT resources providing human-usable application software between customers to enable self-service, rapid elasticity, and pay-per-use pricing.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/software_as_a_service_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/software_as_a_service_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('f69638dc-6844-415c-a679-d3982c691f38', 'Strict Consistency', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/strictConsistency', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/strict_consistency_icon.png)", "Intend": "Data is stored at different locations (replicas) to improve response time and to avoid data loss in case of failures while consistency of replicas is ensured at all times.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/strict_consistency_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/strict_consistency_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('35de7456-fced-4c23-bca5-8777984bf731', 'Unpredictable Workload', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/unpredictableWorkload', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/unpredictable_workload_icon.png)", "Intend": "IT resources with a random and unforeseeable utilization over time experience unpredictable workload.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/unpredictable_workload_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/unpredictable_workload_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('c12b3086-5fa4-4140-915b-330fbffdfc43', 'Message-oriented Middleware', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/message-orientedMiddleware', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/message_oriented_middleware_icon.png)", "Intend": "Asynchronous message-based communication is provided while hiding complexity resulting from addressing, routing, or data formats from communication partners to make interaction robust and flexible.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/message_oriented_middleware_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/message_oriented_middleware_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('b7602673-7825-48e2-829e-b9df269071fc', 'Continuously Changing Workload', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/continuouslyChangingWorkload', '{"Icon": "![](http://www.cloudcomputingpatterns.org/icons/continuously_changing_workload_icon.png)", "Intend": "IT resources with a utilization that grows or shrinks constantly over time experience Continuously Changing Workload.", "Solution Sketch": "![](http://www.cloudcomputingpatterns.org/sketches/continuously_changing_workload_sketch.png)"}', 'http://www.cloudcomputingpatterns.org/icons/continuously_changing_workload_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('55f886b3-4fe0-4bc8-8bde-d0b7004a70ee', 'Loose Coupling', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/looseCoupling', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/loose_coupling_icon.png)", "Intend": "A communication intermediary separates application functionality from concerns of communication partners regarding their location, implementation platform, the time of communication, and the used data format.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/loose_coupling_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/loose_coupling_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('b86f6da4-3c9e-4146-8161-9c806b50b923', 'Stateful Component', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/statefulComponent', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/stateful_component_icon.png)", "Intend": "Multiple instances of a scaled-out application component synchronize their internal state to provide a unified behavior.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/stateful_component_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/stateful_component_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('7d2e969e-c266-4a83-85a5-5a07d528c6ef', 'Stateless Component', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/statelessComponent', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/stateless_component_icon.png)", "Intend": "State is handled external of application components to ease their scaling-out and to make the application more tolerant to component failures.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/stateless_component_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/stateless_component_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('6d763f90-d7d4-4d58-a82c-09bb68ac6b82', 'User Interface Component', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/userInterfaceComponent', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/user_interface_component_icon.png)", "Intend": "Interactive synchronous access to applications is provided to humans, while application-internal interaction is realized asynchronously when possible to ensure Loose Coupling. Furthermore, the user interface should be customizable to be used by different customers.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/user_interface_component_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/user_interface_component_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('0b5ba218-dcb1-4841-a517-b6010b8a2951', 'Processing Component', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/processingComponent', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/processing_component_icon.png)", "Intend": "Possibly long running processing functionality is handled by separate components to enable elastic scaling. Processing functionality is further made configurable to support different customer requirements.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/processing_component_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/processing_component_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('d8c99d65-8950-4b83-aa1d-549a88e28339', 'Batch Processing Component', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/batchProcessingComponent', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/batch_processing_component_icon.png)", "Intend": "Requests are delayed until environmental conditions make their processing feasible.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/batch_processing_component_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/batch_processing_component_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('b228d692-009d-4122-b617-1a3799a68766', 'Data Access Component', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/dataAccessComponent', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/data_access_component_icon.png)", "Intend": "Functionality to store and access data elements is provided by special components that isolate complexity of data access, enable additional data consistency, and ensure adjustability of handled data elements to meet different customer requirements.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/data_access_component_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/data_access_component_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('94331ad5-4f67-4183-8fbe-55fe9c542789', 'Data Abstractor', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/dataAbstractor', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/data_abstractor_icon.png)", "Intend": "The data provided to users or other application components is abstracted to inherently support eventually consistent data storage through the use of abstractions and approximations.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/data_abstractor_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/data_abstractor_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('5d7a8af7-94fb-4c63-958c-403d845d4107', 'Idempotent Processor', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/idempotentProcessor', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/idempotent_processor_icon.png)", "Intend": "Application functions detect duplicate messages and inconsistent data or are designed to be immune to these conditions.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/idempotent_processor_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/idempotent_processor_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('b9484449-18bd-4667-a9e5-1f6bf66d442d', 'Transaction-based Processor', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/transaction-basedProcessor', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/transaction_based_processor_icon.png)", "Intend": "Components receive messages or read data and process the obtained information under a transactional context to ensure that all received messages are processes and all altered data is consistent after processing, respectively.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/transaction_based_processor_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/transaction_based_processor_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('cd686d46-c77f-4c35-8016-f9819282f8a5', 'Timeout-based Message Processor', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/timeout-basedMessageProcessor', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/timeout_based_message_processor_icon.png)", "Intend": "Clients acknowledge message receptions and processing to ensure that all messages are handled by an application. If a message is not acknowledged after a certain timeout, it is processed by a different client.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/timeout_based_message_processor_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/timeout_based_message_processor_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('da2bd135-4ba2-4b98-bb77-c60607402094', 'Multi-Component Image', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/multi-componentImage', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/multi_component_image_icon.png)", "Intend": "Virtual servers host multiple application components that may not be active at all times to reduce provisioning and decommissioning operations.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/multi_component_image_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/multi_component_image_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('45fdc628-1914-4b2c-92c4-38f7be3c622a', 'Shared Component', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/sharedComponent', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/shared_component_icon.png)", "Intend": "A component is accessed by multiple tenants to leverage economies of scale.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/shared_component_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/shared_component_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('5190eb38-48a2-41ee-b85e-dbb3c609ed30', 'Tenant-isolated Component', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/tenant-isolatedComponent', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/tenant_isolated_component_icon.png)", "Intend": "A component shared between tenants avoids influences between tenants regarding assured performance, available storage capacity, and accessibility of functionality and data.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/tenant_isolated_component_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/tenant_isolated_component_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('da3a0878-df45-4eb1-857e-82e5ae055683', 'Dedicated Component', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/dedicatedComponent', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/dedicated_component_icon.png)", "Intend": "Components providing critical functionality shall be provided exclusively to tenants while still allowing other components to be shared between tenants.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/dedicated_component_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/dedicated_component_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('1dafcbc7-f048-4867-ad7f-2d0b40e096e1', 'Restricted Data Access Component', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/restrictedDataAccessComponent', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/restricted_data_access_component_icon.png)", "Intend": "Data provided to clients from different environments is adjusted based on access restrictions.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/restricted_data_access_component_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/restricted_data_access_component_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('a6e349c7-d5c0-42a7-bd78-21e4b2738fa7', 'Message Mover', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/messageMover', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/message_mover_icon.png)", "Intend": "Messages are moved automatically between different cloud providers to provide unified access to application components using messaging.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/message_mover_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/message_mover_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('0145a85e-3b00-4e64-9e20-bdaf77d2fc86', 'Application Component Proxy', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/applicationComponentProxy', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/application_component_proxy_icon.png)", "Intend": "An application component is made available in an environment from where it cannot be accessed directly by deploying an Application Component Proxy. The communication between this proxy and the application component is initiated and maintained from the environment where communication is unrestricted.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/application_component_proxy_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/application_component_proxy_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('e35d735c-f724-4946-aad9-7fa520d5a843', 'Compliant Data Replication', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/compliantDataReplication', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/compliant_data_replication_icon.png)", "Intend": "Data is replicated among multiple environments that may handle different data subsets. During replication data is obfuscated and deleted depending on laws and security regulations. Data updates are adjusted automatically to reflect the different data structures handled by environments.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/compliant_data_replication_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/compliant_data_replication_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('e22b33bc-b5cf-4a61-a8e9-dd204c48857b', 'Integration Provider', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/integrationProvider', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/integration_provider_icon.png)", "Intend": "Integration functionality such as messaging and shared data is hosted by a separate provider to enable integrate of otherwise separated hosting environments.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/integration_provider_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/integration_provider_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('50d0b397-d2df-4797-8975-d2526c8cdd63', 'Provider Adapter', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/providerAdapter', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/provider_adapter_icon.png)", "Intend": "Provider interfaces are encapsulated and mapped to unified interfaces used in applications to separate concerns of interactions with the provider from application functionality.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/provider_adapter_sketch_2.png)"}', 'https://www.cloudcomputingpatterns.org/icons/provider_adapter_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('9bcced52-edb3-44a2-a86d-43499ea61289', 'Managed Configuration', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/managedConfiguration', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/managed_configuration_icon.png)", "Intend": "Scaled-out application components should use a centrally stored configuration to provide a unified behavior that can be adjusted simultaneously.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/managed_configuration_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/managed_configuration_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('4710c428-a004-4da1-98a8-58205e051ec2', 'Elasticity Manager', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/elasticityManager', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/elasticity_manager_icon.png)", "Intend": "The utilization of IT resources on which an elastically scaled-out application is hosted, for example, virtual servers is used to determine the number of required application component instances.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/elasticity_manager_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/elasticity_manager_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('bace6e02-1e3f-4ddc-9e9a-eb04933fa226', 'Elastic Load Balancer', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/elasticLoadBalancer', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/elastic_load_balancer_icon.png)", "Intend": "The number of synchronous accesses to an elastically scaled-out application is used to determine the number of required application component instances.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/elastic_load_balancer_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/elastic_load_balancer_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('801d44ab-fc18-4cc0-8e10-49f2e73b229a', 'Elastic Queue', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/elasticQueue', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/elastic_queue_icon.png)", "Intend": "The number of asynchronous accesses via messaging to an elastically scaled-out application is used to adjust the number of required application component instances.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/elastic_queue_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/elastic_queue_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('3b090377-8703-4cf7-9ce8-a432dce76335', 'Watchdog', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/watchdog', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/watchdog_icon.png)", "Intend": "Applications cope with failures automatically by monitoring and replacing application component instances if the provider-assured availability is insufficient.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/watchdog_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/watchdog_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('15da23b4-5ad5-44ff-8936-140dd98935df', 'Elasticity Management Process', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/elasticityManagementProcess', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/elasticity_management_process_icon.png)", "Intend": "Application component instances are added automatically to an application to cope with increasing workload. If the workload decreases application component instances are removed respectively.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/elasticity_management_process_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/elasticity_management_process_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('f675060d-34cd-4af7-abb7-864a8b9adef6', 'Feature Flag Management Process', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/featureFlagManagementProcess', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/feature_flag_management_process_icon.png)", "Intend": "If the cloud cannot provide required resources in time, the features provided by application components are degraded gracefully to replace or disable unimportant ones in order to keep vital features operational.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/feature_flag_management_process_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/feature_flag_management_process_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('155933df-9d41-4b2d-bdf8-11291fb7084c', 'Update Transition Process', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/updateTransitionProcess', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/update_transition_process_icon.png)", "Intend": "When a new application component version, middleware versions etc. become available, running application components are updated seamlessly.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/update_transition_process_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/update_transition_process_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('599e5d49-ede8-489b-bb72-3e41c288ae89', 'Standby Pooling Process', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/standbyPoolingProcess', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/standby_pooling_process_icon.png)", "Intend": "Application component instances should be kept on standby to increase provisioning speed and utilize billing time-slots efficiently.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/standby_pooling_process_sketch_1.png)\n![](https://www.cloudcomputingpatterns.org/sketches/standby_pooling_process_sketch_2.png)"}', 'https://www.cloudcomputingpatterns.org/icons/standby_pooling_process_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('3d6ef3c9-28dd-4d2f-b006-e3427e24c0b0', 'Resiliency Management Process', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/resiliencyManagementProcess', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/resiliency_management_process_icon.png)", "Intend": "Application components are checked for failures and replaced automatically without human intervention.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/resiliency_management_process_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/resiliency_management_process_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('f53f1daa-1eda-4fd9-966f-3f14c107930a', 'Two-Tier Cloud Application', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/two-tierCloudApplication', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/two_tier_cloud_application_icon.png)", "Intend": "Presentation and business logic is bundled to one stateless tier that is easy to scale. This tier is separated from the data tier that is harder to scale and often handled by a provider-supplied storage offering.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/two_tier_cloud_application_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/two_tier_cloud_application_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('10edf46a-113f-4688-9af6-75494b950fbf', 'Hybrid Data', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/hybridData', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/hybrid_data_icon.png)", "Intend": "Data of varying size is hosted in an elastic cloud while the remainder of an application resides in a static environment.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/hybrid_data_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/hybrid_data_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('47e05a38-2201-49f2-80e6-17d618ed260f', 'Three-Tier Cloud Application', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/three-tierCloudApplication', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/three_tier_cloud_application_icon.png)", "Intend": "The presentation, business logic, and data handling is realized as separate tiers to scale stateless presentation and compute-intensive processing independently of the data tier, which is harder to scale and often handled by the cloud provider.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/three_tier_cloud_application_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/three_tier_cloud_application_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('e4e0fe4d-8757-4253-95de-a6f13ea66f30', 'Content Distribution Network', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/contentDistributionNetwork', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/content_distribution_network_icon.png)", "Intend": "Applications component instances and data handled by them are globally distributed to meet the access performance required by a global user group.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/content_distribution_network_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/content_distribution_network_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('000904c1-aa91-498b-88da-d6cb014931df', 'Hybrid User Interface', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/hybridUserInterface', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/hybrid_user_interface_icon.png)", "Intend": "Varying workload from a user group interacting asynchronously with an application is handled in an elastic environment while the remainder of an application resides in a static environment.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/hybrid_user_interface_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/hybrid_user_interface_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('a7bc398e-972a-481f-8c63-b4c5a1b946d9', 'Hybrid Processing', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/hybridProcessing', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/hybrid_processing_icon.png)", "Intend": "Processing functionality that experiences varying workload is hosted in an elastic cloud while the remainder of an application resides in a static environment.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/hybrid_processing_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/hybrid_processing_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('678a2e5a-697f-4416-afe6-fd18bc935bdc', 'Hybrid Backend', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/hybridBackend', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/hybrid_backend_icon.png)", "Intend": "Backend functionality comprised of data intensive processing and data storage is experiencing varying workloads and is hosted in an elastic cloud while the rest of an application is hosted in a static data center.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/hybrid_backend_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/hybrid_backend_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('34b02438-ceaf-4177-9a3e-74f907cfd63d', 'Hybrid Application Functions', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/hybridApplicationFunctions', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/hybrid_application_functions_icon.png)", "Intend": "Some application functionality provided by user interfaces, processing, and data handling is experiencing varying workload and is hosted in an elastic cloud while other application functionality of the same type is hosted in a static environment.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/hybrid_application_functions_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/hybrid_application_functions_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('d6d9a4e5-0944-4360-8af9-77d6f780716e', 'Hybrid Multimedia Web Application', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/hybridMultimediaWebApplication', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/hybrid_multimedia_web_application_icon.png)", "Intend": "Website content is largely provided from a static environment. Multimedia files that cannot be cached efficiently are provided from a large distributed elastic environment for high-performance access.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/hybrid_multimedia_web_application_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/hybrid_multimedia_web_application_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('d6db370c-42eb-414b-80b7-af50c14fb7e4', 'Hybrid Development Environment', 'https://patternpedia.org/patternLanguages/cloudComputingPatterns/hybridDevelopmentEnvironment', '{"Icon": "![](https://www.cloudcomputingpatterns.org/icons/hybrid_development_environment_icon.png)", "Intend": "A production runtime environment is replicated and mocked in an elastic environment where new applications can be developed and tested.", "Solution Sketch": "![](https://www.cloudcomputingpatterns.org/sketches/hybrid_development_environment_sketch.png)"}', 'https://www.cloudcomputingpatterns.org/icons/hybrid_development_environment_icon.png', NULL, 'efdc1625-6445-4662-a37e-5f1fd37a542b', NULL);
INSERT INTO public.pattern VALUES ('a9fabb2b-a9ba-4627-a0a9-455dacf6c8c8', 'Amplitude Encoding', 'https://patternpedia.org/patternLanguages/quantumAlgorithmPatterns/amplitudeEncoding', '{"Alias": "This encoding has also been referred to as Wavefunction Encoding by LaRose and Coyle [2020]. Every quantum system is described by its wavefunction ψ which also defines the measurement probabilities. By expressing that the wavefunction is used to encode data, it is therefore implied that amplitudes of the quantum system are used to represent data values.", "Intent": "Encode data in a compact manner that do not require calculations", "Result": "A data input vector of length $l$ can be represented by $\\lceil log_2(l)\\rceil$ qubits - this is indeed a very compact representation. For an arbitrary state represented by $n$ qubits (which represents $2^n$ data values), it is known that at least $2^n$ parallel operations are needed [Schuld and Petruccione 2018]. Current state preparation routines perform slightly better than $2^n$ operations [Schuld and Petruccione 2018]. However, depending on the data it maystill be possible to realize an encoding in a logarithmic runtime. For example, a UNIFORMSUPERPOSITION can becreated by applying a Hadamard gate to each of the $n$ qubits - which can be done in parallel and thus in a single step. This represents a $2^n$-dimensional vector in which all data entries are $\\frac{1}{\\sqrt{n}}$. Similarly, sparse data vectors can also be prepared more efficiently [Schuld and Petruccione 2018].It must be noted that if the output is also encoded in the amplitude, multiple measurements must be taken toobtain a good estimate of the output result. The number of measurements scales with the number of amplitudes -as $n$ qubits contain $2^n$ amplitudes, this is costly [Schuld and Petruccione 2018].", "Context": "A numerical input data vector $(x_0, \\ldots, x_{n-1})^T$ must be encoded for an algorithm.", "Solution": "Use amplitudes to encode the data. As the squared moduli of the amplitudes of a quantum state must sum up to 1, the input vector needs to be normalized to length 1. This is illustrated in Fig. 5 for a 2-dimensional input vector that contains 2 data points. To associate each amplitude with a component of the input vector, the dimension of the vector must be equal to a power of two because the vector space of an $n$ qubit register has dimension $2^n$. If this is not the case, the input vector can be padded with additional zeros to increase the dimension of it. Using a suitable state preparation routine (see Known Uses), the input vector is encoded in the amplitudes of the quantum state as follows: \n$| \\psi \\rangle  = \\sum_{i=0}^{n-1} x_i | i \\rangle$.\nAs the amplitudes depend on the data, the process of encoding the data (but not the encoding itself) is often referred to as arbitrary state preparation.", "Known Uses": "AMPLITUDE ENCODING is required by many quantum machine learning algorithms [LaRose and Coyle 2020]. Another example is the algorithm of Harrow, Hassidim and Lloyd [Harrow et al. 2009] (often referred to as HHL algorithm) for solving linear equations. The pre-condition that the data values can be normalized is a common assumption in machine learning [Schuld et al. 2017], e.g. in support vector machine.There are various ways to construct a state preparation routine for this encoding. For example, Plesch and Brukner [2011] and Iten et al. [2016] use the Schmidt Decomposition. For the latter, an implementation in Mathematica was presented [Iten et al. 2019]. Shende et al. [2006] presented an alternative way to construct an arbitrary quantum state which was implemented by Qiskit [Qis 2020]. PennyLane offers a loading routine for AMPLITUDE ENCODING [Pen 2020]. The library also includes an arbitrary state preparation routine that uses thealgorithm proposed by Möttönen and Vartiainen [2005]. The state preparation routine by Möttönen and Vartiainen [2005] requires an exponential number of operations to encode $2^n$ data values. Q# provides functionality to compute a state preparation routine that approximates the desired amplitude encoding [QSh 2020].", "Related Pattern": "This pattern refines INITIALIZATION. The encoding is more compact (in terms of qubits) than BASIC, ANGLE or QRAM ENCODING."}', 'https://quantumcomputingpatterns.org/assets/pattern-icons/amplitude_encoding_icon.png', '{"Alias": "This encoding has also been referred to as Wavefunction Encoding by LaRose and Coyle [2020]. Every quantum system is described by its wavefunction ψ which also defines the measurement probabilities. By expressing that the wavefunction is used to encode data, it is therefore implied that amplitudes of the quantum system are used to represent data values.", "Intent": "Encode data in a compact manner that do not require calculations", "Result": "A data input vector of length $l$ can be represented by $\\lceil log_2(l)\\rceil$ qubits - this is indeed a very compact representation. For an arbitrary state represented by $n$ qubits (which represents $2^n$ data values), it is known that at least $2^n$ parallel operations are needed [Schuld and Petruccione 2018]. Current state preparation routines perform slightly better than $2^n$ operations [Schuld and Petruccione 2018]. However, depending on the data it maystill be possible to realize an encoding in a logarithmic runtime. For example, a UNIFORMSUPERPOSITION can becreated by applying a Hadamard gate to each of the $n$ qubits - which can be done in parallel and thus in a single step. This represents a $2^n$-dimensional vector in which all data entries are $\\frac{1}{\\sqrt{n}}$. Similarly, sparse data vectors can also be prepared more efficiently [Schuld and Petruccione 2018].It must be noted that if the output is also encoded in the amplitude, multiple measurements must be taken toobtain a good estimate of the output result. The number of measurements scales with the number of amplitudes -as $n$ qubits contain $2^n$ amplitudes, this is costly [Schuld and Petruccione 2018].", "Context": "A numerical input data vector $(x_0, \\ldots, x_{n-1})^T$ must be encoded for an algorithm.", "Solution": "Use amplitudes to encode the data. As the squared moduli of the amplitudes of a quantum state must sum up to 1, the input vector needs to be normalized to length 1. This is illustrated in Fig. 5 for a 2-dimensional input vector that contains 2 data points. To associate each amplitude with a component of the input vector, the dimension of the vector must be equal to a power of two because the vector space of an $n$ qubit register has dimension $2^n$. If this is not the case, the input vector can be padded with additional zeros to increase the dimension of it. Using a suitable state preparation routine (see Known Uses), the input vector is encoded in the amplitudes of the quantum state as follows: \n$| \\psi \\rangle  = \\sum_{i=0}^{n-1} x_i | i \\rangle$.\nAs the amplitudes depend on the data, the process of encoding the data (but not the encoding itself) is often referred to as arbitrary state preparation.", "Known Uses": "AMPLITUDE ENCODING is required by many quantum machine learning algorithms [LaRose and Coyle 2020]. Another example is the algorithm of Harrow, Hassidim and Lloyd [Harrow et al. 2009] (often referred to as HHL algorithm) for solving linear equations. The pre-condition that the data values can be normalized is a common assumption in machine learning [Schuld et al. 2017], e.g. in support vector machine.There are various ways to construct a state preparation routine for this encoding. For example, Plesch and Brukner [2011] and Iten et al. [2016] use the Schmidt Decomposition. For the latter, an implementation in Mathematica was presented [Iten et al. 2019]. Shende et al. [2006] presented an alternative way to construct an arbitrary quantum state which was implemented by Qiskit [Qis 2020]. PennyLane offers a loading routine for AMPLITUDE ENCODING [Pen 2020]. The library also includes an arbitrary state preparation routine that uses thealgorithm proposed by Möttönen and Vartiainen [2005]. The state preparation routine by Möttönen and Vartiainen [2005] requires an exponential number of operations to encode $2^n$ data values. Q# provides functionality to compute a state preparation routine that approximates the desired amplitude encoding [QSh 2020].", "Related Pattern": "This pattern refines INITIALIZATION. The encoding is more compact (in terms of qubits) than BASIC, ANGLE or QRAM ENCODING."}', 'af7780d5-1f97-4536-8da7-4194b093ab1d', NULL);
INSERT INTO public.pattern VALUES ('d30b4f69-877e-405e-9070-f05398ebd5e1', 'Quantum Associative Memory (QuAM)', 'https://patternpedia.org/patternLanguages/quantumAlgorithmPatterns/quantumAssociativeMemory(quam)', '{"Alias": "", "Intent": "Encode data in a compact manner that do not require calculations", "Result": "The resulting encoding is a digital encoding and therefore suitable for arithmetic computations [Leymann and Barzen 2020b]. For input $n$ numbers that are approximated by $l$ digits, $l$ qubits are needed for this representation. Each of then encoded input values is represented by a basis vector with an amplitude of1√n.All other2l−namplitudes of the register are zero - in our example, $|000\\rangle$, $|001\\rangle$,$|100\\rangle$,$|101\\rangle$, and $|111\\rangle$. Theamplitude vector is therefore often sparse for this encoding [Schuld and Petruccione 2018]", "Context": "A quantum algorithm requires multiple numerical values $X$ as input for further calculations.", "Solution": "Use a quantum associative memory (QuAM) to prepare a superposition of basis encoded values inthe same qubit register [Leymann and Barzen 2020a].  Note that the quantum register is an equally weighted superposition of the basis encoded values.![](https://quantumcomputingpatterns.org/assets/sketches/quam_solution.png)\nBoth branches have a load and a storage part (Fig. 4). An additional element is first prepared into the loadpart of both branches. Next, the processing branch is split in such a manner, that the new element gets a properamplitude such that it can be brought into superposition with the already added elements. Finally, an UNCOMPUTEcleans the processing branch to be ready for the next iteration (see [Ventura and Martinez 2000] for details).", "Known Uses": "The presented state preparation routine based on Ventura and Martinez [2000] can be usedwhenever multiple data values need to be represented in BASIS ENCODING. Shor’s algorithm [Shor 1999] for thefactorization of prime numbers, a quantum version of the Fourier transform [Coppersmith 2002], and Grover’s algorithm [Grover 1996] for unstructured search rely on this encoding. Various algorithms extend or use Grover’s algorithm and therefore also make use of this encoding", "Related Pattern": "This pattern refines INITIALIZATION and makes use of UNCOMPUTE. UNIFORM SUPERPOSITION creates a superposition of all computational basis states. Each of the computational basis states alsorepresents a value in BASIS ENCODING."}', 'https://quantumcomputingpatterns.org/assets/pattern-icons/quam_icon.png', '{"Alias": "", "Intent": "Encode data in a compact manner that do not require calculations", "Result": "The resulting encoding is a digital encoding and therefore suitable for arithmetic computations [Leymann and Barzen 2020b]. For input $n$ numbers that are approximated by $l$ digits, $l$ qubits are needed for this representation. Each of then encoded input values is represented by a basis vector with an amplitude of1√n.All other2l−namplitudes of the register are zero - in our example, $|000\\rangle$, $|001\\rangle$,$|100\\rangle$,$|101\\rangle$, and $|111\\rangle$. Theamplitude vector is therefore often sparse for this encoding [Schuld and Petruccione 2018]", "Context": "A quantum algorithm requires multiple numerical values $X$ as input for further calculations.", "Solution": "Use a quantum associative memory (QuAM) to prepare a superposition of basis encoded values inthe same qubit register [Leymann and Barzen 2020a].  Note that the quantum register is an equally weighted superposition of the basis encoded values.![](https://quantumcomputingpatterns.org/assets/sketches/quam_solution.png)\nBoth branches have a load and a storage part (Fig. 4). An additional element is first prepared into the loadpart of both branches. Next, the processing branch is split in such a manner, that the new element gets a properamplitude such that it can be brought into superposition with the already added elements. Finally, an UNCOMPUTEcleans the processing branch to be ready for the next iteration (see [Ventura and Martinez 2000] for details).", "Known Uses": "The presented state preparation routine based on Ventura and Martinez [2000] can be usedwhenever multiple data values need to be represented in BASIS ENCODING. Shor’s algorithm [Shor 1999] for thefactorization of prime numbers, a quantum version of the Fourier transform [Coppersmith 2002], and Grover’s algorithm [Grover 1996] for unstructured search rely on this encoding. Various algorithms extend or use Grover’s algorithm and therefore also make use of this encoding", "Related Pattern": "This pattern refines INITIALIZATION and makes use of UNCOMPUTE. UNIFORM SUPERPOSITION creates a superposition of all computational basis states. Each of the computational basis states alsorepresents a value in BASIS ENCODING."}', 'af7780d5-1f97-4536-8da7-4194b093ab1d', NULL);
INSERT INTO public.pattern VALUES ('de5b0951-2b66-4312-bf06-7082d3232e6e', 'Basis Encoding', 'https://patternpedia.org/patternLanguages/quantumAlgorithmPatterns/basisEncoding', '{"Alias": "", "Intent": "Represent data elements in a quantum computer in order to perform calculations", "Result": "This encoding can be categorized as digital encoding because it is suitable for arithmetic computations [Leymann and Barzen 2020b]. For input numbers which are approximated by $l$ digits, $l$ qubits are needed for its representation. To realize this encoding, the initial $|0\\rangle$ state of qubits that represent a ’1’ digit must be flipped into $|1\\rangle$. For one qubit, this can be done by a single operation, and thus, this encoding can be prepared in linear time.", "Context": "A quantum algorithm requires numerical input data $X$ for further calculations", "Solution": "The main idea for this encoding is to use the computational basis $|0...00\\rangle, |0...01\\rangle, \\ldots, |1...11\\rangle$ to encode the input data:  An input number $x$ is approximated by a binary format $x := b_{n-1}\\ldots b_1 b_0$ which is then turned into the corresponding basis vector $|x \\rangle:=|b_{n-1} \\ldots b_1 b_0\\rangle$.  For example, the number \\\"2\\\" is represented as $10$ which is then encoded by $|10\\rangle$ (Fig. 2).  In general, this leads to the following encoding: $X \\approx \\sum_{i=-k}^m b_{i} 2^i \\mapsto | b_m \\ldots b_{-k} \\rangle$ where $X$ is first approximated  with a precision of $k$ significant digits and then represented by a basis vector. ![](https://quantumcomputingpatterns.org/assets/sketches/basis_encoding_solution.png)  \"", "Known Uses": "Vedral et al. [1996] give multiple examples for algorithms that perform arithmetic operations on numbers in BASIS ENCODING. A formal description of the solution above is also given in [Leymann and Barzen 2020a] and [Cortese and Braje 2018]. As only one quantum gate is needed to obtain this encoding, this state preparation routine can be implemented straightforwardly.", "Related Pattern": "his pattern is a refinement of INITIALIZATION. If an algorithm requires several numbers as input, each can be encoded in BASIC ENCODING which can be processed by the QUAM pattern."}', 'https://quantumcomputingpatterns.org/assets/pattern-icons/basis_encoding_icon.png', '{"Alias": "", "Intent": "Represent data elements in a quantum computer in order to perform calculations", "Result": "This encoding can be categorized as digital encoding because it is suitable for arithmetic computations [Leymann and Barzen 2020b]. For input numbers which are approximated by $l$ digits, $l$ qubits are needed for its representation. To realize this encoding, the initial $|0\\rangle$ state of qubits that represent a ’1’ digit must be flipped into $|1\\rangle$. For one qubit, this can be done by a single operation, and thus, this encoding can be prepared in linear time.", "Context": "A quantum algorithm requires numerical input data $X$ for further calculations", "Solution": "The main idea for this encoding is to use the computational basis $|0...00\\rangle, |0...01\\rangle, \\ldots, |1...11\\rangle$ to encode the input data:  An input number $x$ is approximated by a binary format $x := b_{n-1}\\ldots b_1 b_0$ which is then turned into the corresponding basis vector $|x \\rangle:=|b_{n-1} \\ldots b_1 b_0\\rangle$.  For example, the number \\\"2\\\" is represented as $10$ which is then encoded by $|10\\rangle$ (Fig. 2).  In general, this leads to the following encoding: $X \\approx \\sum_{i=-k}^m b_{i} 2^i \\mapsto | b_m \\ldots b_{-k} \\rangle$ where $X$ is first approximated  with a precision of $k$ significant digits and then represented by a basis vector. ![](https://quantumcomputingpatterns.org/assets/sketches/basis_encoding_solution.png)  \"", "Known Uses": "Vedral et al. [1996] give multiple examples for algorithms that perform arithmetic operations on numbers in BASIS ENCODING. A formal description of the solution above is also given in [Leymann and Barzen 2020a] and [Cortese and Braje 2018]. As only one quantum gate is needed to obtain this encoding, this state preparation routine can be implemented straightforwardly.", "Related Pattern": "his pattern is a refinement of INITIALIZATION. If an algorithm requires several numbers as input, each can be encoded in BASIC ENCODING which can be processed by the QUAM pattern."}', 'af7780d5-1f97-4536-8da7-4194b093ab1d', NULL);
INSERT INTO public.pattern VALUES ('66620d74-ebc6-49f5-aafb-5749a8dec5c6', 'Monolithic Stack', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/monolithicStack', '{"Icon": "Enter your input for this section here.", "Type": "Antipattern", "Context": "A monolithic stack is an infrastructure stack that includes too many elements, making it difficult to maintain. What distinguishes a monolithic stack from other patterns is that the number or relationship of infrastructure elements within the stack is difficult to manage well.", "Motivation": "People build monolithic stacks because the simplest way to add a new element to a system is to add it to the existing project. Each new stack adds more moving parts, which may need to be orchestrated, integrated, and tested.\n\n\nA single stack is simpler to manage. For a modestly sized collection of infrastructure elements, a monolithic stack might make sense. But more often, a monolithic stack organically grows out of control.", "Consequences": "Changing a large stack is riskier than changing a smaller stack. More things can go wrong—it has a larger blast radius. The impact of a failed change may be broader since there are more services and applications within the stack. Larger stacks are also slower to provision and change, which makes them harder to manage.\n\n\nAs a result of the speed and risk of changing a monolithic stack, people tend to make changes less frequently and take longer to do it. This added friction can lead to higher levels of technical debt", "Applicability": "A monolithic stack may be appropriate when your system is small and simple. It''s not appropriate when your system grows, taking longer to provision and update.", "Implementation": "You build a monolithic stack by creating an infrastructure stack project and then\ncontinuously adding code, rather than splitting it into multiple stacks."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Antipattern", "Context": "A monolithic stack is an infrastructure stack that includes too many elements, making it difficult to maintain. What distinguishes a monolithic stack from other patterns is that the number or relationship of infrastructure elements within the stack is difficult to manage well.", "Motivation": "People build monolithic stacks because the simplest way to add a new element to a system is to add it to the existing project. Each new stack adds more moving parts, which may need to be orchestrated, integrated, and tested.\n\n\nA single stack is simpler to manage. For a modestly sized collection of infrastructure elements, a monolithic stack might make sense. But more often, a monolithic stack organically grows out of control.", "Consequences": "Changing a large stack is riskier than changing a smaller stack. More things can go wrong—it has a larger blast radius. The impact of a failed change may be broader since there are more services and applications within the stack. Larger stacks are also slower to provision and change, which makes them harder to manage.\n\n\nAs a result of the speed and risk of changing a monolithic stack, people tend to make changes less frequently and take longer to do it. This added friction can lead to higher levels of technical debt", "Applicability": "A monolithic stack may be appropriate when your system is small and simple. It''s not appropriate when your system grows, taking longer to provision and update.", "Implementation": "You build a monolithic stack by creating an infrastructure stack project and then\ncontinuously adding code, rather than splitting it into multiple stacks."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('25ed4f02-2b74-4493-8f85-812c28feb9a8', 'Application Group Stack', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/applicationGroupStack', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "An *application group stack* includes the infrastructure for multiple related applications or services. The infrastructure for all of these applications is provisioned and managed as a group.\n\n\nFor example, a product application stack includes separate services for\nbrowsing products, searching for products, and managing a shopping basket. The\nservers and other infrastructure for all of these are combined in a single stack\ninstance.", "Motivation": "Defining the infrastructure for multiple related services together can make it easier to manage the application as a single unit.", "Consequences": "Grouping the infrastructure for multiple applications together also combines the\ntime, risk, and pace of changes. The team needs to manage the risk to the entire stack for every change, even if only one part is changing. This pattern is inefficient if some parts of the stack change more frequently than others.\n\n\nThe time to provision, change, and test a stack is based on the entire stack. So again, if it''s common to change only one part of a stack at a time, having it grouped adds unnecessary overhead and risk.", "Applicability": "This pattern can work well when a single team owns the infrastructure and deployment of all of the pieces of the application. An application group stack can align the boundaries of the stack to the team''s responsibilities.\n\n\nMultiservice stacks are sometimes useful as an incremental step from a monolithic stack to service stacks.", "Implementation": "To create an application group stack, you define an infrastructure project that builds all of the infrastructure for a set of services. You can provision and destroy all of the pieces of the application with a single command."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "An *application group stack* includes the infrastructure for multiple related applications or services. The infrastructure for all of these applications is provisioned and managed as a group.\n\n\nFor example, a product application stack includes separate services for\nbrowsing products, searching for products, and managing a shopping basket. The\nservers and other infrastructure for all of these are combined in a single stack\ninstance.", "Motivation": "Defining the infrastructure for multiple related services together can make it easier to manage the application as a single unit.", "Consequences": "Grouping the infrastructure for multiple applications together also combines the\ntime, risk, and pace of changes. The team needs to manage the risk to the entire stack for every change, even if only one part is changing. This pattern is inefficient if some parts of the stack change more frequently than others.\n\n\nThe time to provision, change, and test a stack is based on the entire stack. So again, if it''s common to change only one part of a stack at a time, having it grouped adds unnecessary overhead and risk.", "Applicability": "This pattern can work well when a single team owns the infrastructure and deployment of all of the pieces of the application. An application group stack can align the boundaries of the stack to the team''s responsibilities.\n\n\nMultiservice stacks are sometimes useful as an incremental step from a monolithic stack to service stacks.", "Implementation": "To create an application group stack, you define an infrastructure project that builds all of the infrastructure for a set of services. You can provision and destroy all of the pieces of the application with a single command."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('80a5a17d-7a99-421c-a743-7ab12c2d727d', 'Service Stack', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/serviceStack', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "A service stack manages the infrastructure for each deployable application component in a separate infrastructure stack.", "Motivation": "Service stacks align the boundaries of infrastructure to the software that runs on it. This alignment limits the blast radius for a change to one service, which simplifies the process for scheduling changes. Service teams can own the infrastructure that relates to their software.", "Consequences": "If you have multiple applications, each with an infrastructure stack, there could be an unnecessary duplication of code. For example, each stack may include code that specifies how to provision an application server. Duplication can encourage inconsistency, such as using different operating system versions, or different network configurations. You can mitigate this by using modules to share code.", "Applicability": "Service stacks can work well with microservice application architectures. They also help organizations with autonomous teams to ensure each team owns its infrastructure.", "Implementation": "Each application or service has a separate infrastructure code project. When creating a new application, a team might copy code from another application''s infrastructure. Or the team could use a reference project, with boilerplate code for creating new\nstacks.\n\n\nIn some cases, each stack may be complete, not sharing any infrastructure with other application stacks. In other cases, teams may create stacks with infrastructure that supports multiple application stacks."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "A service stack manages the infrastructure for each deployable application component in a separate infrastructure stack.", "Motivation": "Service stacks align the boundaries of infrastructure to the software that runs on it. This alignment limits the blast radius for a change to one service, which simplifies the process for scheduling changes. Service teams can own the infrastructure that relates to their software.", "Consequences": "If you have multiple applications, each with an infrastructure stack, there could be an unnecessary duplication of code. For example, each stack may include code that specifies how to provision an application server. Duplication can encourage inconsistency, such as using different operating system versions, or different network configurations. You can mitigate this by using modules to share code.", "Applicability": "Service stacks can work well with microservice application architectures. They also help organizations with autonomous teams to ensure each team owns its infrastructure.", "Implementation": "Each application or service has a separate infrastructure code project. When creating a new application, a team might copy code from another application''s infrastructure. Or the team could use a reference project, with boilerplate code for creating new\nstacks.\n\n\nIn some cases, each stack may be complete, not sharing any infrastructure with other application stacks. In other cases, teams may create stacks with infrastructure that supports multiple application stacks."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('3ab1e189-e4a8-4c1c-8a4b-426e07f8a267', 'Micro Stack', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/microStack', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "The micro stack pattern divides the infrastructure for a single service across multiple stacks. For example, you may have a separate stack project each for the networking, servers, and database.", "Motivation": "Different parts of a service''s infrastructure may change at different rates. Or they may have different characteristics that make them easier to manage separately. For instance, some methods for managing server instances involve frequently destroying and rebuilding them. However, some services use persistent data in a database or disk volume. Managing the servers and data in separate stacks means they can have different life cycles, with the server stack being rebuilt much more often than the data stack.", "Consequences": "Although smaller stacks are themselves simpler, having more moving parts adds complexity.", "Applicability": "", "Implementation": "Adding a new micro stack involves creating a new stack project. You need to draw boundaries in the right places between stacks to keep them appropriately sized and easy to manage. The related patterns include solutions to this. You may also need to integrate different stacks."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "The micro stack pattern divides the infrastructure for a single service across multiple stacks. For example, you may have a separate stack project each for the networking, servers, and database.", "Motivation": "Different parts of a service''s infrastructure may change at different rates. Or they may have different characteristics that make them easier to manage separately. For instance, some methods for managing server instances involve frequently destroying and rebuilding them. However, some services use persistent data in a database or disk volume. Managing the servers and data in separate stacks means they can have different life cycles, with the server stack being rebuilt much more often than the data stack.", "Consequences": "Although smaller stacks are themselves simpler, having more moving parts adds complexity.", "Applicability": "", "Implementation": "Adding a new micro stack involves creating a new stack project. You need to draw boundaries in the right places between stacks to keep them appropriately sized and easy to manage. The related patterns include solutions to this. You may also need to integrate different stacks."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('b4ea4a4a-e892-4780-80d9-40d6a20e8f6f', 'Multiple-Environment Stack', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/multiple-environmentStack', '{"Icon": "Enter your input for this section here.", "Type": "Antipattern", "Context": "A multiple-environment stack defines and manages the infrastructure for multiple environments as a single stack instance.\n\n\nFor example, if there are three environments for testing and running an application, a single stack project includes the code for all three of the environments.", "Motivation": "Many people create this type of structure when they''re learning a new stack tool because it seems natural to add new environments into an existing project.", "Consequences": "When running a tool to update a stack instance, the scope of a potential change is everything in the stack. If you have a mistake or conflict in your code, everything in the instance is vulnerable.\n\n\nWhen your production environment is in the same stack instance as another environment, changing the other environment risks causing a production issue. A coding error, unexpected dependency, or even a bug in your tool can break production when you only meant to change a test environment.", "Applicability": "", "Implementation": ""}', '', '{"Icon": "Enter your input for this section here.", "Type": "Antipattern", "Context": "A multiple-environment stack defines and manages the infrastructure for multiple environments as a single stack instance.\n\n\nFor example, if there are three environments for testing and running an application, a single stack project includes the code for all three of the environments.", "Motivation": "Many people create this type of structure when they''re learning a new stack tool because it seems natural to add new environments into an existing project.", "Consequences": "When running a tool to update a stack instance, the scope of a potential change is everything in the stack. If you have a mistake or conflict in your code, everything in the instance is vulnerable.\n\n\nWhen your production environment is in the same stack instance as another environment, changing the other environment risks causing a production issue. A coding error, unexpected dependency, or even a bug in your tool can break production when you only meant to change a test environment.", "Applicability": "", "Implementation": ""}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('1463b4df-ea4f-44c9-952c-a5612f2016b6', 'Copy-Paste Environments', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/copy-pasteEnvironments', '{"Icon": "Enter your input for this section here.", "Type": "Antipattern", "Context": "The copy-paste environments antipattern uses a separate stack source code project for each infrastructure stack instance.\n\n\nIn our example of three environments named *test*, *staging*, and *production*, there is a separate infrastructure project for each of these environments. Changes are made by editing the code in one environment and then copying the changes into each of the other environments in turn.", "Motivation": "Copy-paste environments are an intuitive way to maintain multiple environments. They avoid the blast radius problem of the multiheaded stack antipattern. You can also easily customize each stack instance.", "Consequences": "It can be challenging to maintain multiple copy-paste environments. When you want to make a code change, you need to copy it to every project. You probably need to test each instance separately, as a change may work in one but not another.\n\n\nCopy-paste environments often suffer from configuration drift. Using copy-paste environments for delivery environments reduces the reliability of the deployment process and the validity of testing, due to inconsistencies from one environment to the next.\n\n\nA copy-paste environment might be consistent when it''s first set up, but variations creep in over time.", "Applicability": "Copy-paste environments might be appropriate if you want to maintain and change different instances and aren''t worried about code duplication or consistency", "Implementation": "You create a copy-paste environment by copying the project code from one stack instance into a new project. You then edit the code to customize it for the new instance. When you make a change to one stack, you need to copy and paste it across all of the other stack projects, while keeping the customizations in each one."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Antipattern", "Context": "The copy-paste environments antipattern uses a separate stack source code project for each infrastructure stack instance.\n\n\nIn our example of three environments named *test*, *staging*, and *production*, there is a separate infrastructure project for each of these environments. Changes are made by editing the code in one environment and then copying the changes into each of the other environments in turn.", "Motivation": "Copy-paste environments are an intuitive way to maintain multiple environments. They avoid the blast radius problem of the multiheaded stack antipattern. You can also easily customize each stack instance.", "Consequences": "It can be challenging to maintain multiple copy-paste environments. When you want to make a code change, you need to copy it to every project. You probably need to test each instance separately, as a change may work in one but not another.\n\n\nCopy-paste environments often suffer from configuration drift. Using copy-paste environments for delivery environments reduces the reliability of the deployment process and the validity of testing, due to inconsistencies from one environment to the next.\n\n\nA copy-paste environment might be consistent when it''s first set up, but variations creep in over time.", "Applicability": "Copy-paste environments might be appropriate if you want to maintain and change different instances and aren''t worried about code duplication or consistency", "Implementation": "You create a copy-paste environment by copying the project code from one stack instance into a new project. You then edit the code to customize it for the new instance. When you make a change to one stack, you need to copy and paste it across all of the other stack projects, while keeping the customizations in each one."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('a614b4ee-e8e3-4600-8324-c170e1b69ec0', 'Reusable Stack', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/reusableStack', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "A reusable stack is an infrastructure source code project that is used to create multiple instances of a stack.", "Motivation": "You create a reusable stack to maintain multiple consistent instances of infrastructure. When you make changes to the stack code, you can apply and test it in one instance, and then use the same code version to create or update multiple additional instances. You want to provision new instances of the stack with minimal ceremony, maybe even automatically.\n\n\nAs an example, a team extracted common code from different stack projects that each use an application server. Team members put the common code into a module used by each of the stack projects. Later, they realized that the stack projects for their customer applications still looked very similar. In addition to using the module to create an application server, each stack had code to create databases and dedicated logging and reporting services for each customer.\n\n\nChanging and testing changes to this code across multiple customers was becoming a hassle, and they were signing up new customers every month. So the team decided to create a single stack project that defines a customer application stack. This project still uses the shared Java application server module, as do a few other applications (Jira and GoCD). But the project also has the code for setting up the rest of the per-customer infrastructure as well.\n\n\nNow, when they sign on a new customer, the team members use the common customer stack project to create a new instance. When they fix or improve something in the project codebase, they apply it to test instances to make sure it''s OK, and then\nthey roll it out one by one to the customer instances.", "Consequences": "The ability to provision and update multiple stacks from the same project enhances scalability, reliability, and throughput. You can manage more instances with less effort, make changes with a lower risk of failure, and roll changes out to more systems more rapidly.\n\n\nYou typically need to configure some aspects of the stack differently for different instances, even if it''s just what you name things.\n\n\nYou should test your stack project code before you apply changes to business-critical infrastructure.", "Applicability": "You can use a reusable stack for delivery environments or for multiple production environments. This pattern is useful when you don''t need much variation between the environments. It is less applicable when environments need to be heavily customized.", "Implementation": "You create a reusable stack as an infrastructure stack project, and then run the stack management tool each time you want to create or update an instance of the stack. Use the syntax of the stack tool command to tell it which instance you want to create or update. With Terraform, for example, you would specify a different state file or workspace for each instance. With CloudFormation, you pass a unique stack ID for each instance.\n\n\nThe following example command provisions two stack instances from a single project using a fictional command called `stack`. The command takes an argument `env` that identifies unique instances:\n\n\n    > stack up env=test --source mystack/src\n    SUCCESS: stack ''test'' created\n    > stack up env=staging --source mystack/src\n    SUCCESS: stack ''staging'' created\nAs a rule, you should use simple parameters to define differences between stack instances—strings, numbers, or in some cases, lists. Additionally, the infrastructure created by a reusable stack should not vary much across instances."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "A reusable stack is an infrastructure source code project that is used to create multiple instances of a stack.", "Motivation": "You create a reusable stack to maintain multiple consistent instances of infrastructure. When you make changes to the stack code, you can apply and test it in one instance, and then use the same code version to create or update multiple additional instances. You want to provision new instances of the stack with minimal ceremony, maybe even automatically.\n\n\nAs an example, a team extracted common code from different stack projects that each use an application server. Team members put the common code into a module used by each of the stack projects. Later, they realized that the stack projects for their customer applications still looked very similar. In addition to using the module to create an application server, each stack had code to create databases and dedicated logging and reporting services for each customer.\n\n\nChanging and testing changes to this code across multiple customers was becoming a hassle, and they were signing up new customers every month. So the team decided to create a single stack project that defines a customer application stack. This project still uses the shared Java application server module, as do a few other applications (Jira and GoCD). But the project also has the code for setting up the rest of the per-customer infrastructure as well.\n\n\nNow, when they sign on a new customer, the team members use the common customer stack project to create a new instance. When they fix or improve something in the project codebase, they apply it to test instances to make sure it''s OK, and then\nthey roll it out one by one to the customer instances.", "Consequences": "The ability to provision and update multiple stacks from the same project enhances scalability, reliability, and throughput. You can manage more instances with less effort, make changes with a lower risk of failure, and roll changes out to more systems more rapidly.\n\n\nYou typically need to configure some aspects of the stack differently for different instances, even if it''s just what you name things.\n\n\nYou should test your stack project code before you apply changes to business-critical infrastructure.", "Applicability": "You can use a reusable stack for delivery environments or for multiple production environments. This pattern is useful when you don''t need much variation between the environments. It is less applicable when environments need to be heavily customized.", "Implementation": "You create a reusable stack as an infrastructure stack project, and then run the stack management tool each time you want to create or update an instance of the stack. Use the syntax of the stack tool command to tell it which instance you want to create or update. With Terraform, for example, you would specify a different state file or workspace for each instance. With CloudFormation, you pass a unique stack ID for each instance.\n\n\nThe following example command provisions two stack instances from a single project using a fictional command called `stack`. The command takes an argument `env` that identifies unique instances:\n\n\n    > stack up env=test --source mystack/src\n    SUCCESS: stack ''test'' created\n    > stack up env=staging --source mystack/src\n    SUCCESS: stack ''staging'' created\nAs a rule, you should use simple parameters to define differences between stack instances—strings, numbers, or in some cases, lists. Additionally, the infrastructure created by a reusable stack should not vary much across instances."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('e7c75a04-f9d3-40e0-aec6-6eabcfbc4aee', 'Stack Configuration Files', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/stackConfigurationFiles', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "Stack configuration files manage parameter values for each instance in a separate file,\nwhich you manage in version control with your stack code, such as in this example:\n```\n ├── src/\n │   ├── cluster.infra\n │   ├── host_servers.infra\n │   └── networking.infra\n ├── environments/\n │   ├── test.properties\n │   ├── staging.properties\n │   └── production.properties\n └── test/\n```", "Motivation": "Creating configuration files for a stack''s instances is straightforward and easy to understand. Because the file is committed to the source code repository, it is easy to:\nStack configuration files enforce the separation of configuration from the stack code.", "Consequences": "When you want to create a new stack instance, you need to add a new configuration file to the stack project. Doing this prevents you from automatically creating new environments on the fly. In the Ephemeral Test Stack pattern, an approach is described for managing test environments that relies on creating environments automatically. You could work around this by creating a configuration file for an ephemeral environment on demand.\n\n\nParameter files can add friction for changing the configuration of downstream environments in a change delivery pipeline. Every change to the stack project code must progress through each stage of the pipeline before being applied to production. It can take a while for this to complete and doesn''t add any value when the configuration change is only applied to production.\n\n\nDefining parameter values can be a source of considerable complexity in provisioning scripts. Consider that teams often want to define default values for stack projects, and for environments, and then need logic to combine these into values for a given instance of a given stack in a different environment. Inheritance models for parameter values can get messy and confusing.\n\n\nConfiguration files in source control should not include secrets. So for secrets, you either need to select an additional pattern from this chapter to handle secrets or implement a separate secrets configuration file outside of source control.", "Applicability": "Stack configuration files are appropriate when the number of environments doesn''t change often. They require you to add a file to your project to add a new stack instance. They also require (and help enforce) consistent logic in how different instances are created and updated, since the configuration files can''t include logic.", "Implementation": "Define stack parameter values in a separate file for each environment, as shown in the example above.\n\nThe contents of a parameter file could look like this:\n```\n    env = staging\n    cluster_minimum = 2\n    cluster_maximum = 3\n```\n\t\t\nPass the path to the relevant parameter file when running the `stack` command:\n```\n    stack up --source ./src --config ./environments/staging.properties\n```\n\nIf the system is composed of multiple stacks, then it can get messy to manage configuration across all of the environments. There are two common ways of arranging parameter files in these cases. One is to put configuration files for all of the environments with the code for each stack:\n```\n    ├── cluster_stack/\n    │   ├── src/\n    │   │   ├── cluster.infra\n    │   │   ├── host_servers.infra\n    │   │   └── networking.infra\n    │   └── environments/\n    │   ├── test.properties\n    │   ├── staging.properties\n    │   └── production.properties\n    │\n    └── appserver_stack/\n        ├── src/\n        │   ├── server.infra\n        │   └── networking.infra\n        └── environments/\n        ├── test.properties\n        ├── staging.properties\n        └── production.properties\n```\n\nThe other is to centralize the configuration for all of the stacks in one place:\n```\n    ├── cluster_stack/\n    │   ├── cluster.infra\n    │   ├── host_servers.infra\n    │   └── networking.infra\n    │\n    ├── appserver_stack/\n    │   ├── server.infra\n    │   └── networking.infra\n    │\n    └── environments/\n        ├── test/\n        │   ├── cluster.properties\n        │   └── appserver.properties\n        ├── staging/\n        │   ├── cluster.properties\n        │   └── appserver.properties\n        └── production/\n            ├── cluster.properties\n            └── appserver.properties\n```\n\nEach approach can become messy and confusing in its own way. When you need to make a change to all of the things in an environment, making changes to configuration files across dozens of stack projects is painful. When you need to change the configuration for a single stack across the various environments it''s in, trawling through a tree full of configuration for dozens of other stacks is also not fun.\n\nIf you want to use configuration files to provide secrets, rather than using a separate pattern for secrets, then you should manage those files outside of the project code checked into source control.\n\nFor local development environments, you can require users to create the file in a set\nlocation manually. Pass the file location to the `stack` command like this:\n```\n    stack up --source ./src \\\n      --config ./environments/staging.properties \\\n      --config ../.secrets/staging.properties\n```\n\t\t\t\nIn this example, you provide two `--config` arguments to the stack tool, and it reads parameter values from both. You have a directory named *.secrets* outside the project folder, so it is not in source control.\n\nIt can be trickier to do this when running the stack tool automatically, from a compute instance like a Continuous Delivery (CD) pipeline agent. You could provision similar secrets property files onto these compute instances, but that can expose secrets to other processes that run on the same agent. You also need to provide the secrets to the process that builds the compute instance for the agent, so you still have a bootstrapping problem."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "Stack configuration files manage parameter values for each instance in a separate file,\nwhich you manage in version control with your stack code, such as in this example:\n```\n ├── src/\n │   ├── cluster.infra\n │   ├── host_servers.infra\n │   └── networking.infra\n ├── environments/\n │   ├── test.properties\n │   ├── staging.properties\n │   └── production.properties\n └── test/\n```", "Motivation": "Creating configuration files for a stack''s instances is straightforward and easy to understand. Because the file is committed to the source code repository, it is easy to:\nStack configuration files enforce the separation of configuration from the stack code.", "Consequences": "When you want to create a new stack instance, you need to add a new configuration file to the stack project. Doing this prevents you from automatically creating new environments on the fly. In the Ephemeral Test Stack pattern, an approach is described for managing test environments that relies on creating environments automatically. You could work around this by creating a configuration file for an ephemeral environment on demand.\n\n\nParameter files can add friction for changing the configuration of downstream environments in a change delivery pipeline. Every change to the stack project code must progress through each stage of the pipeline before being applied to production. It can take a while for this to complete and doesn''t add any value when the configuration change is only applied to production.\n\n\nDefining parameter values can be a source of considerable complexity in provisioning scripts. Consider that teams often want to define default values for stack projects, and for environments, and then need logic to combine these into values for a given instance of a given stack in a different environment. Inheritance models for parameter values can get messy and confusing.\n\n\nConfiguration files in source control should not include secrets. So for secrets, you either need to select an additional pattern from this chapter to handle secrets or implement a separate secrets configuration file outside of source control.", "Applicability": "Stack configuration files are appropriate when the number of environments doesn''t change often. They require you to add a file to your project to add a new stack instance. They also require (and help enforce) consistent logic in how different instances are created and updated, since the configuration files can''t include logic.", "Implementation": "Define stack parameter values in a separate file for each environment, as shown in the example above.\n\nThe contents of a parameter file could look like this:\n```\n    env = staging\n    cluster_minimum = 2\n    cluster_maximum = 3\n```\n\t\t\nPass the path to the relevant parameter file when running the `stack` command:\n```\n    stack up --source ./src --config ./environments/staging.properties\n```\n\nIf the system is composed of multiple stacks, then it can get messy to manage configuration across all of the environments. There are two common ways of arranging parameter files in these cases. One is to put configuration files for all of the environments with the code for each stack:\n```\n    ├── cluster_stack/\n    │   ├── src/\n    │   │   ├── cluster.infra\n    │   │   ├── host_servers.infra\n    │   │   └── networking.infra\n    │   └── environments/\n    │   ├── test.properties\n    │   ├── staging.properties\n    │   └── production.properties\n    │\n    └── appserver_stack/\n        ├── src/\n        │   ├── server.infra\n        │   └── networking.infra\n        └── environments/\n        ├── test.properties\n        ├── staging.properties\n        └── production.properties\n```\n\nThe other is to centralize the configuration for all of the stacks in one place:\n```\n    ├── cluster_stack/\n    │   ├── cluster.infra\n    │   ├── host_servers.infra\n    │   └── networking.infra\n    │\n    ├── appserver_stack/\n    │   ├── server.infra\n    │   └── networking.infra\n    │\n    └── environments/\n        ├── test/\n        │   ├── cluster.properties\n        │   └── appserver.properties\n        ├── staging/\n        │   ├── cluster.properties\n        │   └── appserver.properties\n        └── production/\n            ├── cluster.properties\n            └── appserver.properties\n```\n\nEach approach can become messy and confusing in its own way. When you need to make a change to all of the things in an environment, making changes to configuration files across dozens of stack projects is painful. When you need to change the configuration for a single stack across the various environments it''s in, trawling through a tree full of configuration for dozens of other stacks is also not fun.\n\nIf you want to use configuration files to provide secrets, rather than using a separate pattern for secrets, then you should manage those files outside of the project code checked into source control.\n\nFor local development environments, you can require users to create the file in a set\nlocation manually. Pass the file location to the `stack` command like this:\n```\n    stack up --source ./src \\\n      --config ./environments/staging.properties \\\n      --config ../.secrets/staging.properties\n```\n\t\t\t\nIn this example, you provide two `--config` arguments to the stack tool, and it reads parameter values from both. You have a directory named *.secrets* outside the project folder, so it is not in source control.\n\nIt can be trickier to do this when running the stack tool automatically, from a compute instance like a Continuous Delivery (CD) pipeline agent. You could provision similar secrets property files onto these compute instances, but that can expose secrets to other processes that run on the same agent. You also need to provide the secrets to the process that builds the compute instance for the agent, so you still have a bootstrapping problem."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('5afb64cd-694b-45f1-bf2c-c371373aaee3', 'Persistent Test Stack', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/persistentTestStack(aka.StaticEnvironment)', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "*Also known as: static environment.*\n\nA testing stage can use a *persistent test stack* instance that is always running. The stage applies each code change as an update to the existing stack instance, runs the tests, and leaves the resulting modified stack in place for the next run.", "Motivation": "It''s usually much faster to apply changes to an existing stack instance than to create a new instance. So the persistent test stack can give faster feedback, not only for the stage itself but for the full pipeline.", "Consequences": "It''s not uncommon for stack instances to become \"wedged\" when a change fails and leaves it in a state where any new attempt to apply stack code also fails. Often, an instance gets wedged so severely that the stack tool can''t even destroy the stack so you can start over. So your team spends too much time manually unwedging broken test instances.\n\n\nYou can often reduce the frequency of wedged stacks through better stack design. Breaking stacks down into smaller and simpler stacks, and simplifying dependencies between stacks, can lower your wedge rate.", "Applicability": "A persistent test stack is useful when you can reliably apply your stack code to the instance. If you find yourself spending time fixing broken instances to get the pipeline running again, you should consider one of the other patterns in this chapter.", "Implementation": "It''s easy to implement a persistent test stack. Your pipeline stage runs the stack tool command to update the instance with the relevant version of the stack code, runs the tests, and then leaves the stack instance in place when finished.\n\n\nYou may rebuild the stack completely as an ad hoc process, such as someone running the tool from their local computer, or using an extra stage or job outside the routine pipeline flow."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "*Also known as: static environment.*\n\nA testing stage can use a *persistent test stack* instance that is always running. The stage applies each code change as an update to the existing stack instance, runs the tests, and leaves the resulting modified stack in place for the next run.", "Motivation": "It''s usually much faster to apply changes to an existing stack instance than to create a new instance. So the persistent test stack can give faster feedback, not only for the stage itself but for the full pipeline.", "Consequences": "It''s not uncommon for stack instances to become \"wedged\" when a change fails and leaves it in a state where any new attempt to apply stack code also fails. Often, an instance gets wedged so severely that the stack tool can''t even destroy the stack so you can start over. So your team spends too much time manually unwedging broken test instances.\n\n\nYou can often reduce the frequency of wedged stacks through better stack design. Breaking stacks down into smaller and simpler stacks, and simplifying dependencies between stacks, can lower your wedge rate.", "Applicability": "A persistent test stack is useful when you can reliably apply your stack code to the instance. If you find yourself spending time fixing broken instances to get the pipeline running again, you should consider one of the other patterns in this chapter.", "Implementation": "It''s easy to implement a persistent test stack. Your pipeline stage runs the stack tool command to update the instance with the relevant version of the stack code, runs the tests, and then leaves the stack instance in place when finished.\n\n\nYou may rebuild the stack completely as an ad hoc process, such as someone running the tool from their local computer, or using an extra stage or job outside the routine pipeline flow."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('72e1d670-0d69-4f26-98b3-d216a2f00107', 'Manual Stack Parameters', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/manualStackParameters', '{"Icon": "Enter your input for this section here.", "Type": "Antipattern", "Context": "The most natural approach to provide values for a stack instance is to type the values on the command line manually, as in this example:\n\n```\n> stack up environment=production --source mystck/src\nFAILURE: No such directory ''mystck/src''\n> stack up environment=production --source mystack/src\nSUCCESS: new stack ''production'' created\n> stack destroy environment=production --source mystack/src\nSUCCESS: stack ''production'' destroyed\n> stack up environment=production --source mystack/src\nSUCCESS: existing stack ''production'' modified\n```", "Motivation": "It''s dirt-simple to type values on the command line, which is helpful when you''re learning how to use a tool. It''s also useful to type parameters on the command line to experiment.", "Consequences": "It''s easy to make a mistake when typing a value on the command line. It can also be hard to remember which values to type. For infrastructure that people care about, you probably don''t want the risk of accidentally breaking something important by mistyping a command when making an improvement or fix. When multiple people work on an infrastructure stack, as in a team, you can''t expect everyone to remember the correct values to type for each instance.\n\n\nManual stack parameters aren''t suitable for automatically applying infrastructure code to environments, such as with Continuous Integration (CI) or Continuous Delivery (CD).", "Applicability": "", "Implementation": "Pass the parameters on the command line according to the syntax expected by the particular tool.\n\n\nAnyone who runs the command needs to know the secrets, like passwords and keys, to use for a given environment and pass them on the command line. Your team should use a team password management tool to store and share them between team members securely, and rotate secrets when people leave the team."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Antipattern", "Context": "The most natural approach to provide values for a stack instance is to type the values on the command line manually, as in this example:\n\n```\n> stack up environment=production --source mystck/src\nFAILURE: No such directory ''mystck/src''\n> stack up environment=production --source mystack/src\nSUCCESS: new stack ''production'' created\n> stack destroy environment=production --source mystack/src\nSUCCESS: stack ''production'' destroyed\n> stack up environment=production --source mystack/src\nSUCCESS: existing stack ''production'' modified\n```", "Motivation": "It''s dirt-simple to type values on the command line, which is helpful when you''re learning how to use a tool. It''s also useful to type parameters on the command line to experiment.", "Consequences": "It''s easy to make a mistake when typing a value on the command line. It can also be hard to remember which values to type. For infrastructure that people care about, you probably don''t want the risk of accidentally breaking something important by mistyping a command when making an improvement or fix. When multiple people work on an infrastructure stack, as in a team, you can''t expect everyone to remember the correct values to type for each instance.\n\n\nManual stack parameters aren''t suitable for automatically applying infrastructure code to environments, such as with Continuous Integration (CI) or Continuous Delivery (CD).", "Applicability": "", "Implementation": "Pass the parameters on the command line according to the syntax expected by the particular tool.\n\n\nAnyone who runs the command needs to know the secrets, like passwords and keys, to use for a given environment and pass them on the command line. Your team should use a team password management tool to store and share them between team members securely, and rotate secrets when people leave the team."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('5dc385bb-2691-4f20-86c1-11dad63afd3f', 'Stack Environment Variables', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/stackEnvironmentVariables', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "The stack environment variables pattern involves setting parameter values as environment variables for the stack tool to use. This pattern is often combined with another pattern to set the environment variables.\n\nThe environment variables are set beforehand, as shown in this example:\n```\nexport STACK_ENVIRONMENT=test\nexport STACK_CLUSTER_MINIMUM=1\nexport STACK_CLUSTER_MAXIMUM=1\nexport STACK_SSL_CERT_PASSPHRASE=\"correct horse battery staple\"\n```\n\nThere are different implementation options, but the most basic one is for the stack code to reference them directly, as shown in this example:\n```\ncontainer_cluster: web_cluster-${ENV(\"STACK_ENVIRONMENT\")}\n  min_size: ${ENV(\"STACK_CLUSTER_MINIMUM\")}\n  max_size: ${ENV(\"STACK_CLUSTER_MAXIMUM\")}\n```", "Motivation": "Most platforms and tools support environment variables, so it''s easy to do.", "Consequences": "You need to use an additional pattern to get the values to set. Doing this adds moving parts, making it hard to trace configuration values for any given stack instance, and more work to change the values.\n\n\nUsing environment variables directly in stack code as above, arguably couples stack code too tightly to the runtime environment.\n\n\nSetting secrets in environment variables may expose them to other processes that run on the same system.", "Applicability": "If you''re already using environment variables in your system and have suitable mechanisms to manage them, you might find it convenient to use them for stack parameters.", "Implementation": "Again, you need to set the environment variables to use, which means selecting another pattern from this chapter. For example, if you expect people to set environment variables in their local environment to apply stack code, you are using the [Manual Stack Parameters](pattern-languages/undefined/72e1d670-0d69-4f26-98b3-d216a2f00107) antipattern. You could set them in a script that runs the stack tool, or have the pipeline tool set them.\n\n\nAnother approach is to put the values into a script that people or instances import into their local environment. This is a variation of the stack configuration files pattern. The script to set the variables would be exactly like in the first example, and any command that runs the stack tool would import it into the environment:\n```\n    source ./environments/staging.env\n    stack up --source ./src\n```\nAlternatively, you could build the environment values into a compute instance that runs the stack tool. For example, if you provision a separate Continuous Delivery (CD) agent node to run the stack tool to build and update stacks in each environment, the code to build the node could set the appropriate values as environment variables. Those environment variables would be available to any command that runs on the node, including the stack tool.\n\n\nBut to do this, you need to pass the values to the code that builds your agent nodes. So you need to select another pattern from this chapter to do that.\n\n\nThe other side of implementing this pattern is how the stack tool gets the environment values. The second example showed how stack code can directly read environment variables.\n\n\nBut you could, instead, use a stack orchestration script to read the environment variables and pass them to the stack tool on the command line. The code in the orchestration script would look like this:\n```\n    stack up \\\n      environment=${STACK_ENVIRONMENT} \\\n      cluster_minimum=${STACK_CLUSTER_MINIMUM} \\\n      cluster_maximum=${STACK_CLUSTER_MAXIMUM} \\\n      ssl_cert_passphrase=\"${STACK_SSL_CERT_PASSPHRASE}\"\n```\nThis approach decouples your stack code from the environment it runs in."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "The stack environment variables pattern involves setting parameter values as environment variables for the stack tool to use. This pattern is often combined with another pattern to set the environment variables.\n\nThe environment variables are set beforehand, as shown in this example:\n```\nexport STACK_ENVIRONMENT=test\nexport STACK_CLUSTER_MINIMUM=1\nexport STACK_CLUSTER_MAXIMUM=1\nexport STACK_SSL_CERT_PASSPHRASE=\"correct horse battery staple\"\n```\n\nThere are different implementation options, but the most basic one is for the stack code to reference them directly, as shown in this example:\n```\ncontainer_cluster: web_cluster-${ENV(\"STACK_ENVIRONMENT\")}\n  min_size: ${ENV(\"STACK_CLUSTER_MINIMUM\")}\n  max_size: ${ENV(\"STACK_CLUSTER_MAXIMUM\")}\n```", "Motivation": "Most platforms and tools support environment variables, so it''s easy to do.", "Consequences": "You need to use an additional pattern to get the values to set. Doing this adds moving parts, making it hard to trace configuration values for any given stack instance, and more work to change the values.\n\n\nUsing environment variables directly in stack code as above, arguably couples stack code too tightly to the runtime environment.\n\n\nSetting secrets in environment variables may expose them to other processes that run on the same system.", "Applicability": "If you''re already using environment variables in your system and have suitable mechanisms to manage them, you might find it convenient to use them for stack parameters.", "Implementation": "Again, you need to set the environment variables to use, which means selecting another pattern from this chapter. For example, if you expect people to set environment variables in their local environment to apply stack code, you are using the [Manual Stack Parameters](pattern-languages/undefined/72e1d670-0d69-4f26-98b3-d216a2f00107) antipattern. You could set them in a script that runs the stack tool, or have the pipeline tool set them.\n\n\nAnother approach is to put the values into a script that people or instances import into their local environment. This is a variation of the stack configuration files pattern. The script to set the variables would be exactly like in the first example, and any command that runs the stack tool would import it into the environment:\n```\n    source ./environments/staging.env\n    stack up --source ./src\n```\nAlternatively, you could build the environment values into a compute instance that runs the stack tool. For example, if you provision a separate Continuous Delivery (CD) agent node to run the stack tool to build and update stacks in each environment, the code to build the node could set the appropriate values as environment variables. Those environment variables would be available to any command that runs on the node, including the stack tool.\n\n\nBut to do this, you need to pass the values to the code that builds your agent nodes. So you need to select another pattern from this chapter to do that.\n\n\nThe other side of implementing this pattern is how the stack tool gets the environment values. The second example showed how stack code can directly read environment variables.\n\n\nBut you could, instead, use a stack orchestration script to read the environment variables and pass them to the stack tool on the command line. The code in the orchestration script would look like this:\n```\n    stack up \\\n      environment=${STACK_ENVIRONMENT} \\\n      cluster_minimum=${STACK_CLUSTER_MINIMUM} \\\n      cluster_maximum=${STACK_CLUSTER_MAXIMUM} \\\n      ssl_cert_passphrase=\"${STACK_SSL_CERT_PASSPHRASE}\"\n```\nThis approach decouples your stack code from the environment it runs in."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('4c7a0a0f-face-4953-baf5-5cacedd36f0c', 'Wrapper Stack', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/wrapperStack', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "A wrapper stack uses an infrastructure stack project for each instance as a wrapper to import a stack code component. Each wrapper project defines the parameter values for one instance of the stack. It then imports a component shared by all of the stack instances.", "Motivation": "A wrapper stack leverages the stack tool''s module functionality or library support to reuse shared code across stack instances. You can use the tool''s module versioning, dependency management, and artifact repository functionality to implement a change delivery pipeline. As of this writing, most infrastructure stack tools don''t have a project packaging format that you can use to implement pipelines for stack code. So you need to create a custom stack packaging process yourself. You can work around this by using a wrapper stack, and versioning and promoting your stack code as a module.\n\n\nWith wrapper stacks, you can write the logic for provisioning and configuring stacks in the same language that you use to define your infrastructure, rather than using a separate language as you would with a provisioning script (see [Scripted Parameters](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/3339fd4b-158d-4a83-9591-a1dba018e238) pattern).", "Consequences": "Components add an extra layer of complexity between your stack and the code contained in the component. You now have two levels: the stack project, which contains the wrapper projects, and the component that contains the code for the stack.\n\n\nBecause you have a separate code project for each stack instance, people may be tempted to add custom logic for each instance. Custom instance code makes your codebase inconsistent and hard to maintain.\n\n\nBecause you define parameter values in wrapper projects managed in source control, you can''t use this pattern to manage secrets. So you need to add another pattern to provide secrets to stacks.", "Applicability": "", "Implementation": "Each stack instance has a separate infrastructure stack project. For example, you would have a separate Terraform project for each environment. You can implement this like a [Copy-Paste Environment](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/1463b4df-ea4f-44c9-952c-a5612f2016b6), with each environment in a separate repository.\n\nAlternatively, each environment project could be a folder in a single repository:\n```\n    my_stack/\n       ├── test/\n       │   └── stack.infra\n       ├── staging/\n       │   └── stack.infra\n       └── production/\n           └── stack.infra\n```\n\nDefine the infrastructure code for the stack as a module, according to your tool''s implementation. You could put the module code in the same repository with your wrapper stacks. However, this would prevent you from leveraging module versioning functionality. That is, you wouldn''t be able to use different versions of the infrastructure code in different environments, which is crucial for progressively testing your code.\n\n\nThe following example is a wrapper stack that imports a module called `container_cluster_module`, specifying the version of the module, and the configuration parameters to pass to it:\n```\n    module:\n      name: container_cluster_module\n      version: 1.23\n      parameters:\n        env: test\n        cluster_minimum: 1\n        cluster_maximum: 1\n```\n\t\t\t\t\nThe wrapper stack code for the *staging* and *production* environments is similar, other than the parameter values, and perhaps the module version they use.\n\n\nThe project structure for the module could look like this:\n```\n      ├── container_cluster_module/\n      │   ├── cluster.infra\n      │   └── networking.infra\n      └── test/\n```\n\nWhen you make a change to the module code, you test and upload it to a module repository. How the repository works depends on your particular infrastructure stack tool. You can then update your test stack instance to import the new module version and apply it to the test environment.\n\n\nTerragrunt is a stack orchestration tool that implements the wrapper stack pattern."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "A wrapper stack uses an infrastructure stack project for each instance as a wrapper to import a stack code component. Each wrapper project defines the parameter values for one instance of the stack. It then imports a component shared by all of the stack instances.", "Motivation": "A wrapper stack leverages the stack tool''s module functionality or library support to reuse shared code across stack instances. You can use the tool''s module versioning, dependency management, and artifact repository functionality to implement a change delivery pipeline. As of this writing, most infrastructure stack tools don''t have a project packaging format that you can use to implement pipelines for stack code. So you need to create a custom stack packaging process yourself. You can work around this by using a wrapper stack, and versioning and promoting your stack code as a module.\n\n\nWith wrapper stacks, you can write the logic for provisioning and configuring stacks in the same language that you use to define your infrastructure, rather than using a separate language as you would with a provisioning script (see [Scripted Parameters](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/3339fd4b-158d-4a83-9591-a1dba018e238) pattern).", "Consequences": "Components add an extra layer of complexity between your stack and the code contained in the component. You now have two levels: the stack project, which contains the wrapper projects, and the component that contains the code for the stack.\n\n\nBecause you have a separate code project for each stack instance, people may be tempted to add custom logic for each instance. Custom instance code makes your codebase inconsistent and hard to maintain.\n\n\nBecause you define parameter values in wrapper projects managed in source control, you can''t use this pattern to manage secrets. So you need to add another pattern to provide secrets to stacks.", "Applicability": "", "Implementation": "Each stack instance has a separate infrastructure stack project. For example, you would have a separate Terraform project for each environment. You can implement this like a [Copy-Paste Environment](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/1463b4df-ea4f-44c9-952c-a5612f2016b6), with each environment in a separate repository.\n\nAlternatively, each environment project could be a folder in a single repository:\n```\n    my_stack/\n       ├── test/\n       │   └── stack.infra\n       ├── staging/\n       │   └── stack.infra\n       └── production/\n           └── stack.infra\n```\n\nDefine the infrastructure code for the stack as a module, according to your tool''s implementation. You could put the module code in the same repository with your wrapper stacks. However, this would prevent you from leveraging module versioning functionality. That is, you wouldn''t be able to use different versions of the infrastructure code in different environments, which is crucial for progressively testing your code.\n\n\nThe following example is a wrapper stack that imports a module called `container_cluster_module`, specifying the version of the module, and the configuration parameters to pass to it:\n```\n    module:\n      name: container_cluster_module\n      version: 1.23\n      parameters:\n        env: test\n        cluster_minimum: 1\n        cluster_maximum: 1\n```\n\t\t\t\t\nThe wrapper stack code for the *staging* and *production* environments is similar, other than the parameter values, and perhaps the module version they use.\n\n\nThe project structure for the module could look like this:\n```\n      ├── container_cluster_module/\n      │   ├── cluster.infra\n      │   └── networking.infra\n      └── test/\n```\n\nWhen you make a change to the module code, you test and upload it to a module repository. How the repository works depends on your particular infrastructure stack tool. You can then update your test stack instance to import the new module version and apply it to the test environment.\n\n\nTerragrunt is a stack orchestration tool that implements the wrapper stack pattern."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('3339fd4b-158d-4a83-9591-a1dba018e238', 'Scripted Parameters', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/scriptedParameters', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "Scripted parameters involves hardcoding the parameter values into a script that runs the stack tool. You can write a separate script for each environment or a single script that includes the values for all of your environments:\n```\n    if ${ENV} == \"test\"\n      stack up cluster_maximum=1 env=\"test\"\n    elsif ${ENV} == \"staging\"\n      stack up cluster_maximum=3 env=\"staging\"\n    elsif ${ENV} == \"production\"\n      stack up cluster_maximum=5 env=\"production\"\n    end\n```", "Motivation": "Scripts are a simple way to capture the values for each instance, avoiding the problems with the [Manual Stack Parameters](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/72e1d670-0d69-4f26-98b3-d216a2f00107) antipattern. You can be confident that values are used consistently for each environment. By checking the script into version control, you ensure you are tracking any changes to the configuration values.", "Consequences": "It''s common for the commands used to run the stack tool to become complicated over time. Provisioning scripts can grow into messy beasts. You should test provisioning scripts since they can be a source of issues with the systems they provision.", "Applicability": "A stack provisioning script is a useful way to set parameters when you have a fixed set of environments that don''t change very often. It doesn''t require the additional moving parts of some of the similar patterns.\n\n\nBecause it is wrong to hardcode secrets in scripts, this pattern is not suitable for secrets. That doesn''t mean you shouldn''t use this pattern, only that you''ll need to implement a separate pattern for dealing with secrets.", "Implementation": "There are two common implementations for this pattern. One is a single script that takes the environment as a command-line argument, with hardcoded parameter values for each environment:\n```\n#!/bin/sh\ncase $1 in\ntest)\n  CLUSTER_MINIMUM=1\n  CLUSTER_MAXIMUM=1\n  ;;\nstaging)\n  CLUSTER_MINIMUM=2\n  CLUSTER_MAXIMUM=3\n  ;;\nproduction)\n  CLUSTER_MINIMUM=2\n  CLUSTER_MAXIMUM=6\n  ;;\n*)\n  echo \"Unknown environment $1\"\n  exit 1\n  ;;\nesac\n\nstack up \\\n    environment=$1 \\\n    cluster_minimum=${CLUSTER_MINIMUM} \\\n    cluster_maximum=${CLUSTER_MAXIMUM}\n```\n\nAnother implementation is a separate script for each stack instance:\n```\nour-infra-stack/\n  ├── bin/\n  │ ├── test.sh\n  │ ├── staging.sh\n  │ └── production.sh\n  ├── src/\n  └── test/\n```\n\nEach of these scripts is identical but has different parameter values hardcoded in it. The scripts are smaller because they don''t need logic to select between different parameter values. However, they need more maintenance. If you need to change the command, you need to make it across all of the scripts. Having a script for each environment also tempts people to customize different environments, creating inconsistency.\n\nCommit your provisioning script or scripts to source control. Putting it in the same project as the stack it provisions ensures that it stays in sync with the stack code. For example, if you add a new parameter, you add it to the infrastructure source code and also to your provisioning script. You always know which version of the script to run for a given version of the stack code.\n\nAs mentioned earlier, you shouldn''t hardcode secrets into scripts, so you''ll need to use a different pattern for those. You can use the script to support that pattern. In this example, a command-line tool fetches the secret from a secrets manager, following the parameter registry pattern:\n```\n...\n# (Set environment specific values as in other examples)\n...\n\nSSL_CERT_PASSPHRASE=$(some-tool get-secret id=\"/ssl_cert_passphrase/${ENV}\")\n\nstack up \\\n    environment=${ENV} \\\n    cluster_minimum=${CLUSTER_MINIMUM} \\\n    cluster_maximum=${CLUSTER_MAXIMUM} \\\n    ssl_cert_passphrase=\"${SSL_CERT_PASSPHRASE}\"\n```\n\nThe `some-tool` command connects to the secrets manager and retrieves the secret for the relevant environment using the ID `/ssl_cert_passphrase/${ENV}`. This example assumes the session is authorized to use the secrets manager. An infrastructure developer may use the tool to start a session before running this script. Or the compute instance that runs the script may be authorized to retrieve secrets using secretless authorization."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "Scripted parameters involves hardcoding the parameter values into a script that runs the stack tool. You can write a separate script for each environment or a single script that includes the values for all of your environments:\n```\n    if ${ENV} == \"test\"\n      stack up cluster_maximum=1 env=\"test\"\n    elsif ${ENV} == \"staging\"\n      stack up cluster_maximum=3 env=\"staging\"\n    elsif ${ENV} == \"production\"\n      stack up cluster_maximum=5 env=\"production\"\n    end\n```", "Motivation": "Scripts are a simple way to capture the values for each instance, avoiding the problems with the [Manual Stack Parameters](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/72e1d670-0d69-4f26-98b3-d216a2f00107) antipattern. You can be confident that values are used consistently for each environment. By checking the script into version control, you ensure you are tracking any changes to the configuration values.", "Consequences": "It''s common for the commands used to run the stack tool to become complicated over time. Provisioning scripts can grow into messy beasts. You should test provisioning scripts since they can be a source of issues with the systems they provision.", "Applicability": "A stack provisioning script is a useful way to set parameters when you have a fixed set of environments that don''t change very often. It doesn''t require the additional moving parts of some of the similar patterns.\n\n\nBecause it is wrong to hardcode secrets in scripts, this pattern is not suitable for secrets. That doesn''t mean you shouldn''t use this pattern, only that you''ll need to implement a separate pattern for dealing with secrets.", "Implementation": "There are two common implementations for this pattern. One is a single script that takes the environment as a command-line argument, with hardcoded parameter values for each environment:\n```\n#!/bin/sh\ncase $1 in\ntest)\n  CLUSTER_MINIMUM=1\n  CLUSTER_MAXIMUM=1\n  ;;\nstaging)\n  CLUSTER_MINIMUM=2\n  CLUSTER_MAXIMUM=3\n  ;;\nproduction)\n  CLUSTER_MINIMUM=2\n  CLUSTER_MAXIMUM=6\n  ;;\n*)\n  echo \"Unknown environment $1\"\n  exit 1\n  ;;\nesac\n\nstack up \\\n    environment=$1 \\\n    cluster_minimum=${CLUSTER_MINIMUM} \\\n    cluster_maximum=${CLUSTER_MAXIMUM}\n```\n\nAnother implementation is a separate script for each stack instance:\n```\nour-infra-stack/\n  ├── bin/\n  │ ├── test.sh\n  │ ├── staging.sh\n  │ └── production.sh\n  ├── src/\n  └── test/\n```\n\nEach of these scripts is identical but has different parameter values hardcoded in it. The scripts are smaller because they don''t need logic to select between different parameter values. However, they need more maintenance. If you need to change the command, you need to make it across all of the scripts. Having a script for each environment also tempts people to customize different environments, creating inconsistency.\n\nCommit your provisioning script or scripts to source control. Putting it in the same project as the stack it provisions ensures that it stays in sync with the stack code. For example, if you add a new parameter, you add it to the infrastructure source code and also to your provisioning script. You always know which version of the script to run for a given version of the stack code.\n\nAs mentioned earlier, you shouldn''t hardcode secrets into scripts, so you''ll need to use a different pattern for those. You can use the script to support that pattern. In this example, a command-line tool fetches the secret from a secrets manager, following the parameter registry pattern:\n```\n...\n# (Set environment specific values as in other examples)\n...\n\nSSL_CERT_PASSPHRASE=$(some-tool get-secret id=\"/ssl_cert_passphrase/${ENV}\")\n\nstack up \\\n    environment=${ENV} \\\n    cluster_minimum=${CLUSTER_MINIMUM} \\\n    cluster_maximum=${CLUSTER_MAXIMUM} \\\n    ssl_cert_passphrase=\"${SSL_CERT_PASSPHRASE}\"\n```\n\nThe `some-tool` command connects to the secrets manager and retrieves the secret for the relevant environment using the ID `/ssl_cert_passphrase/${ENV}`. This example assumes the session is authorized to use the secrets manager. An infrastructure developer may use the tool to start a session before running this script. Or the compute instance that runs the script may be authorized to retrieve secrets using secretless authorization."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('3cbcb60b-853f-46c0-beb7-f63fa6e9bc12', 'Pipeline Stack Parameters', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/pipelineStackParameters', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "With the pipeline stack parameters pattern, you define values for each instance in the configuration of a delivery pipeline.\n\n\nYou can implement a pipeline using a tool like Jenkins, GoCD, or ConcourseCI.", "Motivation": "If you''re using a pipeline tool to run your infrastructure stack tool, it provides the mechanism for storing and passing parameter values to the tool out of the box. Assuming your pipeline tool is itself configured by code, then the values are defined as code and stored in version control.\n\n\nConfiguration values are kept separate from the infrastructure code. You can change configuration values for downstream environments and apply them immediately, without needing to progress a new version of the infrastructure code from the start of the pipeline.", "Consequences": "By defining stack instance variables in the pipeline configuration, you couple configuration values with your delivery process. There is a risk of the pipeline configuration becoming complicated and hard to maintain.\n\n\nThe more configuration values you define in your pipeline, the harder it is to run the stack tool outside the pipeline. Your pipeline can become a single point of failure—you may not be able to fix, recover, or rebuild an environment in an emergency until you have recovered your pipeline. And it can be hard for your team to develop and test stack code outside the pipeline.\n\n\nIn general, it''s best to keep the pipeline configuration for applying a stack project as small and simple as possible. Most of the logic should live in a script called by the pipeline, rather than in the pipeline configuration.", "Applicability": "Teams who are already using a pipeline to apply infrastructure code to environments can easily leverage this to set stack parameters for each environment. However, if stacks require more than a few parameter values, defining these in the pipeline configuration has serious drawbacks, so you should avoid this.", "Implementation": "Parameters should be implemented using \"as code\" configuration of the pipeline tool. This example shows a pseudocode pipeline stage configuration:\nstage: apply-test-stack\n  input_artifacts: container_cluster_stack\n  commands:\n    unpack ${input_artifacts}\n    stack up --source ./src environment=test cluster_minimum=1 cluster_maximum=1\n    stack test environment=test\nThis example passes the values on the command line. You may also set them as environment variables that the stack code uses, as shown in this example (see also [Stack Environment Variables](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/5dc385bb-2691-4f20-86c1-11dad63afd3f) pattern):\nstage: apply-test-stack\n  input_artifacts: container_cluster_stack\n  environment_vars:\n    STACK_ENVIRONMENT=test\n    STACK_CLUSTER_MINIMUM=1\n    STACK_CLUSTER_MAXIMUM=1\n  commands:\n    unpack ${input_artifacts}\n    stack up --source ./src\n    stack test environment=test\nIn this example, the pipeline tool sets those environment variables before running the `commands`.\n\n\nMany pipeline tools provide secret management features that you can use to pass secrets to your `stack` command. You set the secret values in the pipeline tool in some fashion, and can then refer to them in your pipeline job, as shown in this example:\nstage: apply-test-stack\n  input_artifacts: container_cluster_stack\n  commands:\n    unpack ${input_artifacts}\n    stack up --source ./src environment=test \\\n        cluster_minimum=1 \\\n        cluster_maximum=1 \\\n        ssl_cert_passphrase=${STACK_SSL_CERT_PASSPHRASE}"}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "With the pipeline stack parameters pattern, you define values for each instance in the configuration of a delivery pipeline.\n\n\nYou can implement a pipeline using a tool like Jenkins, GoCD, or ConcourseCI.", "Motivation": "If you''re using a pipeline tool to run your infrastructure stack tool, it provides the mechanism for storing and passing parameter values to the tool out of the box. Assuming your pipeline tool is itself configured by code, then the values are defined as code and stored in version control.\n\n\nConfiguration values are kept separate from the infrastructure code. You can change configuration values for downstream environments and apply them immediately, without needing to progress a new version of the infrastructure code from the start of the pipeline.", "Consequences": "By defining stack instance variables in the pipeline configuration, you couple configuration values with your delivery process. There is a risk of the pipeline configuration becoming complicated and hard to maintain.\n\n\nThe more configuration values you define in your pipeline, the harder it is to run the stack tool outside the pipeline. Your pipeline can become a single point of failure—you may not be able to fix, recover, or rebuild an environment in an emergency until you have recovered your pipeline. And it can be hard for your team to develop and test stack code outside the pipeline.\n\n\nIn general, it''s best to keep the pipeline configuration for applying a stack project as small and simple as possible. Most of the logic should live in a script called by the pipeline, rather than in the pipeline configuration.", "Applicability": "Teams who are already using a pipeline to apply infrastructure code to environments can easily leverage this to set stack parameters for each environment. However, if stacks require more than a few parameter values, defining these in the pipeline configuration has serious drawbacks, so you should avoid this.", "Implementation": "Parameters should be implemented using \"as code\" configuration of the pipeline tool. This example shows a pseudocode pipeline stage configuration:\nstage: apply-test-stack\n  input_artifacts: container_cluster_stack\n  commands:\n    unpack ${input_artifacts}\n    stack up --source ./src environment=test cluster_minimum=1 cluster_maximum=1\n    stack test environment=test\nThis example passes the values on the command line. You may also set them as environment variables that the stack code uses, as shown in this example (see also [Stack Environment Variables](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/5dc385bb-2691-4f20-86c1-11dad63afd3f) pattern):\nstage: apply-test-stack\n  input_artifacts: container_cluster_stack\n  environment_vars:\n    STACK_ENVIRONMENT=test\n    STACK_CLUSTER_MINIMUM=1\n    STACK_CLUSTER_MAXIMUM=1\n  commands:\n    unpack ${input_artifacts}\n    stack up --source ./src\n    stack test environment=test\nIn this example, the pipeline tool sets those environment variables before running the `commands`.\n\n\nMany pipeline tools provide secret management features that you can use to pass secrets to your `stack` command. You set the secret values in the pipeline tool in some fashion, and can then refer to them in your pipeline job, as shown in this example:\nstage: apply-test-stack\n  input_artifacts: container_cluster_stack\n  commands:\n    unpack ${input_artifacts}\n    stack up --source ./src environment=test \\\n        cluster_minimum=1 \\\n        cluster_maximum=1 \\\n        ssl_cert_passphrase=${STACK_SSL_CERT_PASSPHRASE}"}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('91a39a34-5f79-477a-8bdb-b248ef79b4cc', 'Ephemeral Test Stack', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/ephemeralTestStack', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "*Also known as: quick and dirty plus slow and clean.*\n\nWith the *ephemeral test stack* pattern, the test stage creates and destroys a new instance of the stack every time it runs.", "Motivation": "An ephemeral test stack provides a clean environment for each run of the tests. There is no risk from data, fixtures, or other \"cruft\" left over from a previous run.", "Consequences": "Stacks generally take a long time to provision from scratch. So stages using ephemeral stack instances make feedback loops and delivery cycles slower.", "Applicability": "You may want to use ephemeral instances for stacks that are quick to provision from scratch. \"Quick\" is relative to the feedback loop you and your teams need. For more frequent changes, like commits to application code during rapid development phases, the time to build a new environment is probably longer than people can tolerate. But less frequent changes, such as OS patch updates, may be acceptable to test with a complete rebuild.", "Implementation": "To implement an ephemeral test instance, your test stage should run the stack tool command to destroy the stack instance when testing and reporting have completed. You may want to configure the stage to stop before destroying the instance if the tests fail so that people can debug the failure."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "*Also known as: quick and dirty plus slow and clean.*\n\nWith the *ephemeral test stack* pattern, the test stage creates and destroys a new instance of the stack every time it runs.", "Motivation": "An ephemeral test stack provides a clean environment for each run of the tests. There is no risk from data, fixtures, or other \"cruft\" left over from a previous run.", "Consequences": "Stacks generally take a long time to provision from scratch. So stages using ephemeral stack instances make feedback loops and delivery cycles slower.", "Applicability": "You may want to use ephemeral instances for stacks that are quick to provision from scratch. \"Quick\" is relative to the feedback loop you and your teams need. For more frequent changes, like commits to application code during rapid development phases, the time to build a new environment is probably longer than people can tolerate. But less frequent changes, such as OS patch updates, may be acceptable to test with a complete rebuild.", "Implementation": "To implement an ephemeral test instance, your test stage should run the stack tool command to destroy the stack instance when testing and reporting have completed. You may want to configure the stage to stop before destroying the instance if the tests fail so that people can debug the failure."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('c0a25c90-aebe-4fbf-8579-358afa157d21', 'Stack Parameter Registry', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/stackParameterRegistry', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "A stack parameter registry manages the parameter values for stack instances in a central location, rather than with your stack code. The stack tool retrieves the relevant values when it applies the stack code to a given instance.", "Motivation": "Storing parameter values in a registry separates configuration from implementation. Parameters in a registry can be set, used, and viewed by different tools, using different languages and technologies. This flexibility reduces coupling between different parts of the system. You can replace any tool that uses the registry without affecting any other tool that uses it.\n\n\nBecause they are tool-agnostic, stack parameter registries can act as a source of truth for infrastructure and even system configuration, acting as a Configuration Management Database (CMDB). This configuration data can be useful in regulated contexts, making it easy to generate reports for auditing.", "Consequences": "A stack parameter registry requires a configuration registry, which is an extra moving part for your overall system. The registry is a dependency for your stack and a potential point of failure. If the registry becomes unavailable, it may be impossible to re-provision or update the infrastructure stack until you can restore it. This dependency can be painful in disaster recovery scenarios, putting the registry service on the critical path.\n\n\nManaging parameter values separately from the stack code that uses it has trade-offs. You can change the configuration of a stack instance without making a change to the stack project. If one team maintains a reusable stack project, other teams can use it to create their own stack instances without needing to add or change configuration files in the stack project itself.\n\n\nOn the other hand, making changes across more than one place—stack project and parameter registry—adds complexity and opportunity for mistakes.", "Applicability": "If you are using a configuration registry for other purposes, it makes sense to use it as a stack parameter registry, as well. For example, a configuration registry is a useful way to integrate multiple stacks.", "Implementation": "In short, it may be a service that stores key/value pairs, or it could be a file or directory structure of files that contain key-value pairs. Either way, parameter values can usually be stored in a hierarchical structure, so you can store and find them based on the environment and the stack, and perhaps other factors like the application, service, team, geography, or customer.\n\n\nThe values for a example container cluster could look like this:\n```\n└── env/\n    ├── test/\n    │   └── cluster/\n    │       ├── min = 1\n    │       └── max = 1\n    ├── staging/\n    │   └── cluster/\n    │       ├── min = 2\n    │       └── max = 3\n    └── production/\n        └── cluster/\n            ├── min = 2\n            └── max = 6\n```\n\nWhen you apply the infrastructure stack code to an instance, the stack tool uses the key to retrieve the relevant value. You will need to pass the `environment` parameter to the stack tool, and the code uses this to refer to the relevant location in the registry:\n```\n    cluster:\n      id: container_cluster-${environment}\n      minimum: ${get_value(\"/env/${environment}/cluster/min\")}\n      maximum: ${get_value(\"/env/${environment}/cluster/max\")}\n```\nThe `get_registry_item()` function in the stack code looks up the value.\n\n\nThis implementation ties your stack code to the configuration registry. You need the registry to run and test your code, which can be too heavy. You could work around this by fetching the values from the registry in a script, which then passes them to the stack code as normal parameters. Doing this gives you the flexibility to set parameter values in other ways. For reusable stack code this is particularly useful, giving users of your code more options for how to configure their stack instances.\n\n\nSecrets management services are a special type of parameter registry. Used correctly, they ensure that secrets are only available to people and services that require them, without exposing them more widely. Some configuration registry products and services can be used to store both secret and nonsecret values. But it''s important to avoid storing secrets in registries that don''t protect them. Doing so makes the registry an easy target for attackers."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "A stack parameter registry manages the parameter values for stack instances in a central location, rather than with your stack code. The stack tool retrieves the relevant values when it applies the stack code to a given instance.", "Motivation": "Storing parameter values in a registry separates configuration from implementation. Parameters in a registry can be set, used, and viewed by different tools, using different languages and technologies. This flexibility reduces coupling between different parts of the system. You can replace any tool that uses the registry without affecting any other tool that uses it.\n\n\nBecause they are tool-agnostic, stack parameter registries can act as a source of truth for infrastructure and even system configuration, acting as a Configuration Management Database (CMDB). This configuration data can be useful in regulated contexts, making it easy to generate reports for auditing.", "Consequences": "A stack parameter registry requires a configuration registry, which is an extra moving part for your overall system. The registry is a dependency for your stack and a potential point of failure. If the registry becomes unavailable, it may be impossible to re-provision or update the infrastructure stack until you can restore it. This dependency can be painful in disaster recovery scenarios, putting the registry service on the critical path.\n\n\nManaging parameter values separately from the stack code that uses it has trade-offs. You can change the configuration of a stack instance without making a change to the stack project. If one team maintains a reusable stack project, other teams can use it to create their own stack instances without needing to add or change configuration files in the stack project itself.\n\n\nOn the other hand, making changes across more than one place—stack project and parameter registry—adds complexity and opportunity for mistakes.", "Applicability": "If you are using a configuration registry for other purposes, it makes sense to use it as a stack parameter registry, as well. For example, a configuration registry is a useful way to integrate multiple stacks.", "Implementation": "In short, it may be a service that stores key/value pairs, or it could be a file or directory structure of files that contain key-value pairs. Either way, parameter values can usually be stored in a hierarchical structure, so you can store and find them based on the environment and the stack, and perhaps other factors like the application, service, team, geography, or customer.\n\n\nThe values for a example container cluster could look like this:\n```\n└── env/\n    ├── test/\n    │   └── cluster/\n    │       ├── min = 1\n    │       └── max = 1\n    ├── staging/\n    │   └── cluster/\n    │       ├── min = 2\n    │       └── max = 3\n    └── production/\n        └── cluster/\n            ├── min = 2\n            └── max = 6\n```\n\nWhen you apply the infrastructure stack code to an instance, the stack tool uses the key to retrieve the relevant value. You will need to pass the `environment` parameter to the stack tool, and the code uses this to refer to the relevant location in the registry:\n```\n    cluster:\n      id: container_cluster-${environment}\n      minimum: ${get_value(\"/env/${environment}/cluster/min\")}\n      maximum: ${get_value(\"/env/${environment}/cluster/max\")}\n```\nThe `get_registry_item()` function in the stack code looks up the value.\n\n\nThis implementation ties your stack code to the configuration registry. You need the registry to run and test your code, which can be too heavy. You could work around this by fetching the values from the registry in a script, which then passes them to the stack code as normal parameters. Doing this gives you the flexibility to set parameter values in other ways. For reusable stack code this is particularly useful, giving users of your code more options for how to configure their stack instances.\n\n\nSecrets management services are a special type of parameter registry. Used correctly, they ensure that secrets are only available to people and services that require them, without exposing them more widely. Some configuration registry products and services can be used to store both secret and nonsecret values. But it''s important to avoid storing secrets in registries that don''t protect them. Doing so makes the registry an easy target for attackers."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('2dec367b-fbf3-4e33-bf1b-1ab7581a9e51', 'Dual Persistent and Ephemeral Stack Stages', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/dualPersistentAndEphemeralStackStages', '{"Icon": "Enter your input for this section here.", "Type": "Antipattern", "Context": "With persistent and ephemeral stack stages, the pipeline sends each change to a stack to two different stages, one that uses an ephemeral stack instance, and one that uses a persistent stack instance. This combines the [Persistent Test Stack](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/5afb64cd-694b-45f1-bf2c-c371373aaee3) pattern and the [Ephemeral Test Stack](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/91a39a34-5f79-477a-8bdb-b248ef79b4cc) ephemeral test stack pattern.", "Motivation": "Teams usually implement this to work around the disadvantages of each of the two patterns it combines. If all works well, the \"quick and dirty\" stage (the one using the persistent instance) provides fast feedback. If that stage fails because the environment becomes wedged, you will get feedback eventually from the \"slow and clean\" stage (the one using the ephemeral instance).", "Consequences": "In practice, using both types of stack life cycle combines the disadvantages of both. If updating an existing stack is unreliable, then your team will still spend time manually fixing that stage when it goes wrong. And you probably wait until the slower stage passes before being confident that a change is good.\n\n\nThis antipattern is also expensive, since it uses double the infrastructure resources, at least during the test run.", "Applicability": "It might be worth implementing both types of stages as an interim solution while moving to a more reliable solution.", "Implementation": "You implement dual stages by creating two pipeline stages, both triggered by the previous stage in the pipeline for the stack project, as shown in the figure below. You may require both stages to pass before promoting the stack version to the following stage, or you may promote it when either of the stages passes."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Antipattern", "Context": "With persistent and ephemeral stack stages, the pipeline sends each change to a stack to two different stages, one that uses an ephemeral stack instance, and one that uses a persistent stack instance. This combines the [Persistent Test Stack](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/5afb64cd-694b-45f1-bf2c-c371373aaee3) pattern and the [Ephemeral Test Stack](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/91a39a34-5f79-477a-8bdb-b248ef79b4cc) ephemeral test stack pattern.", "Motivation": "Teams usually implement this to work around the disadvantages of each of the two patterns it combines. If all works well, the \"quick and dirty\" stage (the one using the persistent instance) provides fast feedback. If that stage fails because the environment becomes wedged, you will get feedback eventually from the \"slow and clean\" stage (the one using the ephemeral instance).", "Consequences": "In practice, using both types of stack life cycle combines the disadvantages of both. If updating an existing stack is unreliable, then your team will still spend time manually fixing that stage when it goes wrong. And you probably wait until the slower stage passes before being confident that a change is good.\n\n\nThis antipattern is also expensive, since it uses double the infrastructure resources, at least during the test run.", "Applicability": "It might be worth implementing both types of stages as an interim solution while moving to a more reliable solution.", "Implementation": "You implement dual stages by creating two pipeline stages, both triggered by the previous stage in the pipeline for the stack project, as shown in the figure below. You may require both stages to pass before promoting the stack version to the following stage, or you may promote it when either of the stages passes."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('6c53a774-8c9e-4fb3-9283-454ae5cffcdb', 'Periodic Stack Rebuild', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/periodicStackRebuild', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "Periodic stack rebuild uses a [Persistent Test Stack](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/5afb64cd-694b-45f1-bf2c-c371373aaee3) instance for the stack test stage, and then has a process that runs out-of-band to destroy and rebuild the stack instance on a schedule, such as nightly.", "Motivation": "People often use periodic rebuilds to reduce costs. They destroy the stack at the end of the working day and provision a new one at the start of the next day.\n\n\nPeriodic rebuilds might help with unreliable stack updates, depending on why the updates are unreliable. In some cases, the resource usage of instances builds up over time, such as memory or storage that accumulates across test runs. Regular resets can clear these out.", "Consequences": "If you use this pattern to free up idle resources, you need to consider how you can be sure they aren''t needed. For example, people working outside of office hours, or in other time zones, may be blocked without test environments.", "Applicability": "Rebuilding a stack instance to work around resource usage usually masks underlying problems or design issues. In this case, this pattern is, at best, a temporary hack, and at worst, a way to allow problems to build up until they cause a disaster.\n\n\nDestroying a stack instance when it isn''t in use to save costs is sensible, especially when using metered resources such as with public cloud platforms.", "Implementation": "Most pipeline orchestration tools make it easy to create jobs that run on a schedule to destroy and build stack instances. A more sophisticated solution would run based on activity levels. For example, you could have a job that destroys an instance if the test stage hasn''t run in the past hour.\n\n\nThere are three options for triggering the build of a fresh instance after destroying the previous instance. One is to rebuild it right away after destroying it. This approach clears resources but doesn''t save costs.\n\n\nA second option is to build the new environment instance at a scheduled point in time. But it may stop people from working flexible hours.\n\n\nThe third option is for the test stage to provision a new instance if it doesn''t currently exist. Create a separate job that destroys the instance, either on a schedule or after a period of inactivity. Each time the testing stage runs, it first checks whether the instance is already running. If not, it provisions a new instance first. With this approach, people occasionally need to wait longer than usual to get test results. If they are the first person to push a change in the morning, they need to wait for the system to provision the stack."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "Periodic stack rebuild uses a [Persistent Test Stack](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/5afb64cd-694b-45f1-bf2c-c371373aaee3) instance for the stack test stage, and then has a process that runs out-of-band to destroy and rebuild the stack instance on a schedule, such as nightly.", "Motivation": "People often use periodic rebuilds to reduce costs. They destroy the stack at the end of the working day and provision a new one at the start of the next day.\n\n\nPeriodic rebuilds might help with unreliable stack updates, depending on why the updates are unreliable. In some cases, the resource usage of instances builds up over time, such as memory or storage that accumulates across test runs. Regular resets can clear these out.", "Consequences": "If you use this pattern to free up idle resources, you need to consider how you can be sure they aren''t needed. For example, people working outside of office hours, or in other time zones, may be blocked without test environments.", "Applicability": "Rebuilding a stack instance to work around resource usage usually masks underlying problems or design issues. In this case, this pattern is, at best, a temporary hack, and at worst, a way to allow problems to build up until they cause a disaster.\n\n\nDestroying a stack instance when it isn''t in use to save costs is sensible, especially when using metered resources such as with public cloud platforms.", "Implementation": "Most pipeline orchestration tools make it easy to create jobs that run on a schedule to destroy and build stack instances. A more sophisticated solution would run based on activity levels. For example, you could have a job that destroys an instance if the test stage hasn''t run in the past hour.\n\n\nThere are three options for triggering the build of a fresh instance after destroying the previous instance. One is to rebuild it right away after destroying it. This approach clears resources but doesn''t save costs.\n\n\nA second option is to build the new environment instance at a scheduled point in time. But it may stop people from working flexible hours.\n\n\nThe third option is for the test stage to provision a new instance if it doesn''t currently exist. Create a separate job that destroys the instance, either on a schedule or after a period of inactivity. Each time the testing stage runs, it first checks whether the instance is already running. If not, it provisions a new instance first. With this approach, people occasionally need to wait longer than usual to get test results. If they are the first person to push a change in the morning, they need to wait for the system to provision the stack."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('9bf3816c-cf1c-4b85-8cc8-f0ae0a8c5d7b', 'Continuous Stack Reset', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/continuousStackReset', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "With the continuous stack reset pattern, every time the stack testing stage completes, an out-of-band job destroys and rebuilds the stack instance.", "Motivation": "Destroying and rebuilding the stack instance every time provides a clean slate to each testing run. It may automatically remove a broken instance unless it is too broken for the stack tool to destroy. And it removes the time it takes to create and destroy the stack instance from the feedback loop.\n\n\nAnother benefit of this pattern is that it can reliably test the update process that would happen for the given stack code version in production.", "Consequences": "Since the stack is destroyed and provisioned outside the delivery flow of the pipeline, problems may not be visible. The pipeline can be green, but the test instance may break behind the scenes. When the next change reaches the test stage, it may take time to realize it failed because of the background job rather than because of the change itself.", "Applicability": "Destroying the stack instance in the background can work well if the stack project doesn''t tend to break and need manual intervention to fix.", "Implementation": "When the test stage passes, it promotes the stack project code to the next stage. It also triggers a job to destroy and rebuild the stack instance. When someone pushes a new change to the code, the test stage applies it to the instance as an update.\n\n\nYou need to decide which version of the stack code to use when rebuilding the instance. You could use the same version that has just passed the stage. An alternative is to pull the last version of the stack code applied to the production instance. This way, each version of stack code is tested as an update to the current production version. Depending on how your infrastructure code typically flows to production, this may be a more accurate representation of the production upgrade process."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "With the continuous stack reset pattern, every time the stack testing stage completes, an out-of-band job destroys and rebuilds the stack instance.", "Motivation": "Destroying and rebuilding the stack instance every time provides a clean slate to each testing run. It may automatically remove a broken instance unless it is too broken for the stack tool to destroy. And it removes the time it takes to create and destroy the stack instance from the feedback loop.\n\n\nAnother benefit of this pattern is that it can reliably test the update process that would happen for the given stack code version in production.", "Consequences": "Since the stack is destroyed and provisioned outside the delivery flow of the pipeline, problems may not be visible. The pipeline can be green, but the test instance may break behind the scenes. When the next change reaches the test stage, it may take time to realize it failed because of the background job rather than because of the change itself.", "Applicability": "Destroying the stack instance in the background can work well if the stack project doesn''t tend to break and need manual intervention to fix.", "Implementation": "When the test stage passes, it promotes the stack project code to the next stage. It also triggers a job to destroy and rebuild the stack instance. When someone pushes a new change to the code, the test stage applies it to the instance as an update.\n\n\nYou need to decide which version of the stack code to use when rebuilding the instance. You could use the same version that has just passed the stage. An alternative is to pull the last version of the stack code applied to the production instance. This way, each version of stack code is tested as an update to the current production version. Depending on how your infrastructure code typically flows to production, this may be a more accurate representation of the production upgrade process."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('45559bb5-24ff-4432-9bb1-8802778180cd', 'Apply On Change', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/applyOnChange', '{"Icon": "Enter your input for this section here.", "Type": "Antipattern", "Context": "*Also known as: ad hoc automation.*\n\n\nWith the *apply on change* antipattern, configuration code is only applied to a server when there is a specific change to apply.\n\n\nFor example, consider a team that runs multiple Tomcat application servers. The team members run an Ansible playbook to install and configure Tomcat when they create a new server instance, but once the server is running, they don''t run Ansible until they need to. When a new version of Tomcat is released, they update their play book and apply it to their servers.\n\n\nIn the most extreme version of this antipattern, you only apply code to the server that you specifically intend to change.\n\n\nThe team in our example notices that one of its application servers is seeing much higher traffic, and the load is making Tomcat unstable. The team members make some changes to their playbook to optimize their Tomcat configuration for higher load and then apply it to the server that has the issue. But they don''t apply the playbook to the other application servers, because those don''t need the change.", "Motivation": "Systems and network administrators have traditionally managed servers by hand. When you need to make a change, you log in to the relevant server and make the change. Why would you do it differently? Even people who use scripts tend to write and run the scripts to make a specific change. The apply on change antipattern is an extension of this way of working that happens to use an Infrastructure as Code tool instead of a manual command or on-off script.", "Consequences": "If you only apply configuration code to make a specific change, you may have long gaps where the code is never applied to a particular server instance. When you finally do apply the code, it might fail because of other differences on the server than the one you meant to change.\n\n\nThings have a habit of changing on a server when you aren''t paying attention. Someone may make a change manually—for example, as a quick fix for an outage. Someone else may have patched the system with newer versions of OS or application packages. These fall into the category of quick changes that we''re sure won''t break anything. And into the category of changes that, a week later, we don''t remember making (because it was only a small change) until we''ve spent several hours debugging something it broke.\n\n\nThe problem becomes worse when we only apply changes to some servers and not others. Consider the previous example where the team applies code to optimize performance to one server. Later on, someone on the team will need to make a different change to the application servers.\n\n\nWhen they do, they also apply the previous performance optimization change to the servers that don''t already have it, as a side effect of applying the code for the new change. The earlier change might have unexpected effects on other servers. Worse, the person applying the code may have forgotten about the performance optimization, so they take much longer to discover the cause of any problems it creates.", "Applicability": "Applying code only as needed for a specific change may be fine for a single temporary server. But it''s not a suitable method for sustainably managing a group of servers.", "Implementation": "People who are used to making changes by hand, or using one-off scripts, tend to use server configuration code the same way. They see the tool—Ansible, Chef, Puppet—as a scripting tool with awkward syntax. Most often, people who do this run the tool by hand from their local computer, rather than having a pipeline or other orchestration service apply code."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Antipattern", "Context": "*Also known as: ad hoc automation.*\n\n\nWith the *apply on change* antipattern, configuration code is only applied to a server when there is a specific change to apply.\n\n\nFor example, consider a team that runs multiple Tomcat application servers. The team members run an Ansible playbook to install and configure Tomcat when they create a new server instance, but once the server is running, they don''t run Ansible until they need to. When a new version of Tomcat is released, they update their play book and apply it to their servers.\n\n\nIn the most extreme version of this antipattern, you only apply code to the server that you specifically intend to change.\n\n\nThe team in our example notices that one of its application servers is seeing much higher traffic, and the load is making Tomcat unstable. The team members make some changes to their playbook to optimize their Tomcat configuration for higher load and then apply it to the server that has the issue. But they don''t apply the playbook to the other application servers, because those don''t need the change.", "Motivation": "Systems and network administrators have traditionally managed servers by hand. When you need to make a change, you log in to the relevant server and make the change. Why would you do it differently? Even people who use scripts tend to write and run the scripts to make a specific change. The apply on change antipattern is an extension of this way of working that happens to use an Infrastructure as Code tool instead of a manual command or on-off script.", "Consequences": "If you only apply configuration code to make a specific change, you may have long gaps where the code is never applied to a particular server instance. When you finally do apply the code, it might fail because of other differences on the server than the one you meant to change.\n\n\nThings have a habit of changing on a server when you aren''t paying attention. Someone may make a change manually—for example, as a quick fix for an outage. Someone else may have patched the system with newer versions of OS or application packages. These fall into the category of quick changes that we''re sure won''t break anything. And into the category of changes that, a week later, we don''t remember making (because it was only a small change) until we''ve spent several hours debugging something it broke.\n\n\nThe problem becomes worse when we only apply changes to some servers and not others. Consider the previous example where the team applies code to optimize performance to one server. Later on, someone on the team will need to make a different change to the application servers.\n\n\nWhen they do, they also apply the previous performance optimization change to the servers that don''t already have it, as a side effect of applying the code for the new change. The earlier change might have unexpected effects on other servers. Worse, the person applying the code may have forgotten about the performance optimization, so they take much longer to discover the cause of any problems it creates.", "Applicability": "Applying code only as needed for a specific change may be fine for a single temporary server. But it''s not a suitable method for sustainably managing a group of servers.", "Implementation": "People who are used to making changes by hand, or using one-off scripts, tend to use server configuration code the same way. They see the tool—Ansible, Chef, Puppet—as a scripting tool with awkward syntax. Most often, people who do this run the tool by hand from their local computer, rather than having a pipeline or other orchestration service apply code."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('2cd1fca5-139f-4159-a040-fd6b59449398', 'Immutable Server', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/immutableServer', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "An *immutable server* is a server instance whose configuration is never changed. You deliver changes by creating a new server instance with the changed configuration and using it to replace the existing server.", "Motivation": "Immutable servers reduce the risk of making changes. Rather than applying a change to a running server instance, you create a new server instance. You have the opportunity to test the new instance, and then swap it out for the previous instance. You can then check that the new instance is working correctly before destroying the original, or swap it back into place if something goes wrong.", "Consequences": "Implementing immutable servers requires a robust automated process for building, testing, and updating server images. Your system and application design must support swapping server instances without interrupting service.\n\n\nDespite the name, immutable servers do change.\n\n\nConfiguration drift may creep in, especially if people can log in to servers and make changes manually rather than using the configuration change process to build new server instances. So teams using immutable servers should be careful to ensure the freshness of running instances. It''s entirely possible to combine immutable servers with the [Apply On Change](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/45559bb5-24ff-4432-9bb1-8802778180cd) antipattern, which can result in servers that run, unchanged, for a long time, without including patches and improvements made to servers built later. Teams should also consider disabling access to servers, or make the ability to make accessing and manually changing services require a \"break glass\" procedure.", "Applicability": "Organizations that need tight control and consistency of server configuration may find immutable servers useful. For example, a telecommunications company that runs thousands of server images may decide not to apply changes to running servers, preferring to guarantee the stability of their configuration.", "Implementation": "Most teams who use immutable servers handle the bulk of their configuration in server images, favoring baking images over frying instances. So a pipeline, or set of pipelines, to automatically build and update server images is a foundation for immutable servers.\n\n\nYou can fry configuration onto immutable server instances, as long as you don''t make changes to the instance after you create it. However, a stricter form of immutable servers avoids adding any differences to server instances. With this approach, you create and test a server image, and then promote it from one environment to the next. Because little or nothing changes with each server instance, you lower the risk of issues creeping in from one environment to the next."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "An *immutable server* is a server instance whose configuration is never changed. You deliver changes by creating a new server instance with the changed configuration and using it to replace the existing server.", "Motivation": "Immutable servers reduce the risk of making changes. Rather than applying a change to a running server instance, you create a new server instance. You have the opportunity to test the new instance, and then swap it out for the previous instance. You can then check that the new instance is working correctly before destroying the original, or swap it back into place if something goes wrong.", "Consequences": "Implementing immutable servers requires a robust automated process for building, testing, and updating server images. Your system and application design must support swapping server instances without interrupting service.\n\n\nDespite the name, immutable servers do change.\n\n\nConfiguration drift may creep in, especially if people can log in to servers and make changes manually rather than using the configuration change process to build new server instances. So teams using immutable servers should be careful to ensure the freshness of running instances. It''s entirely possible to combine immutable servers with the [Apply On Change](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/45559bb5-24ff-4432-9bb1-8802778180cd) antipattern, which can result in servers that run, unchanged, for a long time, without including patches and improvements made to servers built later. Teams should also consider disabling access to servers, or make the ability to make accessing and manually changing services require a \"break glass\" procedure.", "Applicability": "Organizations that need tight control and consistency of server configuration may find immutable servers useful. For example, a telecommunications company that runs thousands of server images may decide not to apply changes to running servers, preferring to guarantee the stability of their configuration.", "Implementation": "Most teams who use immutable servers handle the bulk of their configuration in server images, favoring baking images over frying instances. So a pipeline, or set of pipelines, to automatically build and update server images is a foundation for immutable servers.\n\n\nYou can fry configuration onto immutable server instances, as long as you don''t make changes to the instance after you create it. However, a stricter form of immutable servers avoids adding any differences to server instances. With this approach, you create and test a server image, and then promote it from one environment to the next. Because little or nothing changes with each server instance, you lower the risk of issues creeping in from one environment to the next."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('1c3b59e7-7b7f-49eb-8f79-8b5a26212367', 'Push Server Configuration', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/pushServerConfiguration', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "With the *push server configuration* pattern, a process running outside the new server instance connects to the server and executes, downloading and applying code.", "Motivation": "Teams use push to avoid the need to preinstall server configuration tooling onto server images.", "Consequences": "The push configuration pattern requires the ability to connect to server instances and execute the configuration process over the network. This requirement can create a security vulnerability since it opens a vector that attackers might use to connect and make unauthorized changes to your servers.\n\n\nIt can be awkward to run push configuration for server instances that are created automatically by the platform; for example, for autoscaling or automated recovery. However, it can be done.", "Applicability": "The push pattern is useful when you need a higher degree of control over the timing of configuration updates to existing servers. For example, if you have events, such as software deployments, with a sequence of activities across multiple servers, you can implement this with a central process that orchestrates the process.", "Implementation": "One way to push server configuration is for someone to run the server configuration tool from their local computer. However, it''s better to run tools from a central server or service, to ensure consistency and control over the process.\n\n\nSome server configuration tools include a server application that manages connections to machine instances, such as Ansible Tower. Some companies offer SaaS services to remotely configure server instances for you, although many organizations prefer not to give third parties this level of control over their infrastructure.\n\n\nIn other cases, you implement a central service yourself to run server configuration tools. I''ve most often seen teams build this using Continuous Integration (CI) or Continuous Delivery (CD) server products. They implement CI jobs or pipeline stages that run the configuration tool against a particular set of servers. The job triggers based on events, such as changes to server configuration code, or creation of new environments.\n\n\nThe server configuration tool needs to be able to connect to server instances. Although some tools use a custom network protocol for this, most use SSH. Each server instance must accept SSH connections from the server tool, allowing the tool to run with enough privileges to apply its configuration changes.\n\n\nIt''s essential to have strong authentication and secrets management for these connections. Otherwise, your server configuration system is a huge security hole for your estate.\n\n\nWhen creating and configuring a new server instance, you can dynamically generate a new authentication secret, such as an SSH key. Most infrastructure platforms provide a way to set a key when creating a new instance. Your server configuration tool can then use this secret and potentially disable and discard the key once it''s no longer needed.\n\n\nIf you need to apply configuration changes to existing server instances, as with continuous synchronization, then you need a longer-term method to authenticate connections from the configuration tool. The simplest method is to install a single key on all of your server instances. But this single key is a vulnerability. If it is exposed, then an attacker may be able to access every server in your estate.\n\n\nAn alternative is to set a unique key for each server instance. It''s essential to manage access to these keys in a way that allows the server configuration tool to access them while reducing the risk of an attacker gaining the same access—for example, by compromising the server that runs the tool.\n\n\nOne approach many organizations use is to have multiple servers or services that manage server configuration. The estate is divided into different security realms, and each server configuration service instance only has access to one of these. This division can reduce the scope of a compromise."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "With the *push server configuration* pattern, a process running outside the new server instance connects to the server and executes, downloading and applying code.", "Motivation": "Teams use push to avoid the need to preinstall server configuration tooling onto server images.", "Consequences": "The push configuration pattern requires the ability to connect to server instances and execute the configuration process over the network. This requirement can create a security vulnerability since it opens a vector that attackers might use to connect and make unauthorized changes to your servers.\n\n\nIt can be awkward to run push configuration for server instances that are created automatically by the platform; for example, for autoscaling or automated recovery. However, it can be done.", "Applicability": "The push pattern is useful when you need a higher degree of control over the timing of configuration updates to existing servers. For example, if you have events, such as software deployments, with a sequence of activities across multiple servers, you can implement this with a central process that orchestrates the process.", "Implementation": "One way to push server configuration is for someone to run the server configuration tool from their local computer. However, it''s better to run tools from a central server or service, to ensure consistency and control over the process.\n\n\nSome server configuration tools include a server application that manages connections to machine instances, such as Ansible Tower. Some companies offer SaaS services to remotely configure server instances for you, although many organizations prefer not to give third parties this level of control over their infrastructure.\n\n\nIn other cases, you implement a central service yourself to run server configuration tools. I''ve most often seen teams build this using Continuous Integration (CI) or Continuous Delivery (CD) server products. They implement CI jobs or pipeline stages that run the configuration tool against a particular set of servers. The job triggers based on events, such as changes to server configuration code, or creation of new environments.\n\n\nThe server configuration tool needs to be able to connect to server instances. Although some tools use a custom network protocol for this, most use SSH. Each server instance must accept SSH connections from the server tool, allowing the tool to run with enough privileges to apply its configuration changes.\n\n\nIt''s essential to have strong authentication and secrets management for these connections. Otherwise, your server configuration system is a huge security hole for your estate.\n\n\nWhen creating and configuring a new server instance, you can dynamically generate a new authentication secret, such as an SSH key. Most infrastructure platforms provide a way to set a key when creating a new instance. Your server configuration tool can then use this secret and potentially disable and discard the key once it''s no longer needed.\n\n\nIf you need to apply configuration changes to existing server instances, as with continuous synchronization, then you need a longer-term method to authenticate connections from the configuration tool. The simplest method is to install a single key on all of your server instances. But this single key is a vulnerability. If it is exposed, then an attacker may be able to access every server in your estate.\n\n\nAn alternative is to set a unique key for each server instance. It''s essential to manage access to these keys in a way that allows the server configuration tool to access them while reducing the risk of an attacker gaining the same access—for example, by compromising the server that runs the tool.\n\n\nOne approach many organizations use is to have multiple servers or services that manage server configuration. The estate is divided into different security realms, and each server configuration service instance only has access to one of these. This division can reduce the scope of a compromise."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('eae90baf-ea92-4a7e-ae12-7f6119cfb376', 'Continuous Configuration Synchronization', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/continuousConfigurationSynchronization', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "*Also known as: scheduled server configuration update.*\n\n\n*Continuous configuration synchronization* involves repeatedly and frequently applying configuration code to a server, regardless of whether the code has changed. Doing this reverts or surfaces any unexpected differences that might creep in, whether to the server, or other resources used by the configuration code.", "Motivation": "We would like to believe that server configuration is predictable. Once I apply code to a server, nothing should change until the next time I apply the code. And if I haven''t changed the code, there''s no need to apply it. However, servers, and server code, are sneaky.\n\n\nSometimes a server changes for obvious reasons, such as someone logging in and making a change by hand. People often make minor changes this way because they don''t think it will cause any problems. They are often mistaken about this. In other cases, teams manage some aspects of a server with a different tool or process. For example, some teams use a specialized tool to update and patch servers, especially for security patches.\n\n\nEven if a server hasn''t changed, applying the same server configuration code multiple times can introduce differences. For example, the code may use parameters from a central configuration registry. If one of those parameters changes, the code may do something different the next time it runs on a server.\n\n\nPackages are another external source of change. If your configuration code installs a package from a repository, it may update the package to a newer version when it becomes available. You can try to specify package versions, but this leads down one of two terrible roads. Down one road, your system eventually includes many out-of-date packages, including ones with security vulnerabilities well known to attackers. Down the other road, you and your team spend enormous amounts of energy manually updating package version numbers in your server code.\n\n\nBy reapplying your server configuration code regularly, on an automated schedule, you ensure that you keep all of your servers configured consistently. You also ensure that any differences, from whatever sources, are applied sooner rather than later.", "Consequences": "When an automated process applies server configuration across your estate, there is a risk that something will break. All of the things that might change unexpectedly, as described earlier in the \"Motivation\" section, are things that could break a server. To counter this, you should have an effective monitoring system to alert you to problems, and a good process for testing and delivering code before applying changes to production systems.", "Applicability": "It is easier to implement continuous synchronization than the main alternative, immutable servers. Most Infrastructure as Code tools—Ansible, Chef, and Puppet, for example—are designed with this pattern in mind. It is quicker and less disruptive to apply changes by updating an existing server instance than by building a new instance.", "Implementation": "As mentioned before, most server configuration as code tools are designed to run continuously. The specific mechanisms they use are described in the patterns [Push Server Configuration](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/1c3b59e7-7b7f-49eb-8f79-8b5a26212367) and [Pull Server Configuration](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/dc9e7d0c-923b-4f29-b118-2a743baab105).\n\n\nMost continuous synchronization implementations run on a schedule. These tend to have some way of varying the runtime on different servers so that all of your servers don''t wake up and run their configuration at the same time. However, sometimes you want to apply code more quickly, maybe to apply a fix, or to support a software deployment. Different tools have different solutions for doing this."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "*Also known as: scheduled server configuration update.*\n\n\n*Continuous configuration synchronization* involves repeatedly and frequently applying configuration code to a server, regardless of whether the code has changed. Doing this reverts or surfaces any unexpected differences that might creep in, whether to the server, or other resources used by the configuration code.", "Motivation": "We would like to believe that server configuration is predictable. Once I apply code to a server, nothing should change until the next time I apply the code. And if I haven''t changed the code, there''s no need to apply it. However, servers, and server code, are sneaky.\n\n\nSometimes a server changes for obvious reasons, such as someone logging in and making a change by hand. People often make minor changes this way because they don''t think it will cause any problems. They are often mistaken about this. In other cases, teams manage some aspects of a server with a different tool or process. For example, some teams use a specialized tool to update and patch servers, especially for security patches.\n\n\nEven if a server hasn''t changed, applying the same server configuration code multiple times can introduce differences. For example, the code may use parameters from a central configuration registry. If one of those parameters changes, the code may do something different the next time it runs on a server.\n\n\nPackages are another external source of change. If your configuration code installs a package from a repository, it may update the package to a newer version when it becomes available. You can try to specify package versions, but this leads down one of two terrible roads. Down one road, your system eventually includes many out-of-date packages, including ones with security vulnerabilities well known to attackers. Down the other road, you and your team spend enormous amounts of energy manually updating package version numbers in your server code.\n\n\nBy reapplying your server configuration code regularly, on an automated schedule, you ensure that you keep all of your servers configured consistently. You also ensure that any differences, from whatever sources, are applied sooner rather than later.", "Consequences": "When an automated process applies server configuration across your estate, there is a risk that something will break. All of the things that might change unexpectedly, as described earlier in the \"Motivation\" section, are things that could break a server. To counter this, you should have an effective monitoring system to alert you to problems, and a good process for testing and delivering code before applying changes to production systems.", "Applicability": "It is easier to implement continuous synchronization than the main alternative, immutable servers. Most Infrastructure as Code tools—Ansible, Chef, and Puppet, for example—are designed with this pattern in mind. It is quicker and less disruptive to apply changes by updating an existing server instance than by building a new instance.", "Implementation": "As mentioned before, most server configuration as code tools are designed to run continuously. The specific mechanisms they use are described in the patterns [Push Server Configuration](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/1c3b59e7-7b7f-49eb-8f79-8b5a26212367) and [Pull Server Configuration](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/dc9e7d0c-923b-4f29-b118-2a743baab105).\n\n\nMost continuous synchronization implementations run on a schedule. These tend to have some way of varying the runtime on different servers so that all of your servers don''t wake up and run their configuration at the same time. However, sometimes you want to apply code more quickly, maybe to apply a fix, or to support a software deployment. Different tools have different solutions for doing this."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('dc9e7d0c-923b-4f29-b118-2a743baab105', 'Pull Server Configuration', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/pullServerConfiguration', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "The *pull server configuration* pattern involves a process running on the server instance itself to download and apply configuration code. This process triggers when a new server instance is created. For existing instances under the continuous synchronization pattern, the process typically runs on a schedule, periodically waking up and applying the current configuration.", "Motivation": "Pull-based server configuration avoids the need for server instances to accept incoming connections from a central server, so it helps to reduce the attack surface. The pattern simplifies configuring instances created automatically by the infrastructure platform, such as autoscaling and automated recovery.", "Consequences": "Enter your input for this section here.", "Applicability": "You can implement pull-based server configuration when you can build or use server images that have your server configuration tool preinstalled.", "Implementation": "Pull configuration works by using a server image that has the server configuration tool preinstalled. If you are pulling configuration for new server instances, configure the image to run the tool when it first boots.\n\n\nCloud-init is a widely used tool for automatically running this kind of process. You can pass parameters to the new server instance using your infrastructure platform''s API, even including commands to execute, and parameters to pass to the server configuration tool.\n```\nserver:\n  source_image: stock-linux-1.23\n  memory: 2GB\n  vnet: ${APPSERVER_VNET}\n  instance_data:\n    - server_tool: servermaker\n    - parameter: server_role=appserver\n    - parameter: code_repo=servermaker.shopspinner.xyz\n```\n\nConfigure the script to download configuration code from a central repository and apply it on startup. If you use continuous synchronization to update running servers, the setup process should configure this, whether it''s running a background process for the server configuration tool, or a cron job to execute the tool on a schedule.\n\n\nEven if you don''t build your own server images, most of the images provided by public cloud vendors have cloud-init and popular server configuration tools preinstalled.\n\n\nA few other tools, notably Saltstack, use a messaging and event-based approach to trigger server configuration. Each server instance runs an agent that connects to a shared service bus from which it receives commands to apply configuration code."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "The *pull server configuration* pattern involves a process running on the server instance itself to download and apply configuration code. This process triggers when a new server instance is created. For existing instances under the continuous synchronization pattern, the process typically runs on a schedule, periodically waking up and applying the current configuration.", "Motivation": "Pull-based server configuration avoids the need for server instances to accept incoming connections from a central server, so it helps to reduce the attack surface. The pattern simplifies configuring instances created automatically by the infrastructure platform, such as autoscaling and automated recovery.", "Consequences": "Enter your input for this section here.", "Applicability": "You can implement pull-based server configuration when you can build or use server images that have your server configuration tool preinstalled.", "Implementation": "Pull configuration works by using a server image that has the server configuration tool preinstalled. If you are pulling configuration for new server instances, configure the image to run the tool when it first boots.\n\n\nCloud-init is a widely used tool for automatically running this kind of process. You can pass parameters to the new server instance using your infrastructure platform''s API, even including commands to execute, and parameters to pass to the server configuration tool.\n```\nserver:\n  source_image: stock-linux-1.23\n  memory: 2GB\n  vnet: ${APPSERVER_VNET}\n  instance_data:\n    - server_tool: servermaker\n    - parameter: server_role=appserver\n    - parameter: code_repo=servermaker.shopspinner.xyz\n```\n\nConfigure the script to download configuration code from a central repository and apply it on startup. If you use continuous synchronization to update running servers, the setup process should configure this, whether it''s running a background process for the server configuration tool, or a cron job to execute the tool on a schedule.\n\n\nEven if you don''t build your own server images, most of the images provided by public cloud vendors have cloud-init and popular server configuration tools preinstalled.\n\n\nA few other tools, notably Saltstack, use a messaging and event-based approach to trigger server configuration. Each server instance runs an agent that connects to a shared service bus from which it receives commands to apply configuration code."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('df903950-138e-45ae-8fdd-787dcfdeb5f1', 'Facade Module', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/facadeModule', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "*Also known as: wrapper module.*\n\n\nA facade module creates a simplified interface to a resource from the stack tool language or the infrastructure platform. The module exposes a few parameters to the calling code:\n```\nuse module: shopspinner-server\n  name: checkout-appserver\n  memory: 8GB\n```\n\nThe module uses these parameters to call the resource it wraps, and hardcodes values for other parameters needed by the resource:\ndeclare module:\n```\nshopspinner-server\n  virtual_machine:\n    name: ${name}\n    source_image: hardened-linux-base\n    memory: ${memory}\n    provision:\n      tool: servermaker\n      maker_server: maker.shopspinner.xyz\n      role: application_server\n    network:\n      vlan: application_zone_vlan\n```\n\nThis example module allows the caller to create a virtual server, specifying the name and the amount of memory for the server. Every server created using the module uses a source image, role, and networking defined by the module.", "Motivation": "A facade module simplifies and standardizes a common use case for an infrastructure resource. The stack code that uses a facade module should be simpler and easier to read. Improvements to the quality of the module code are rapidly available to all of the stacks that use it.", "Consequences": "A facade module limits how you can use the underlying infrastructure resource. Doing this can be useful, simplifying options and standardizing around better and more secure implementations. But it limits flexibility, so won''t apply to every use case.\n\n\nA module is an extra layer of code between the stack code and the code that directly specifies the infrastructure resources. This extra layer adds at least some overhead to maintaining, debugging, and improving code. It can also make it harder to understand the stack code.", "Applicability": "Facade modules work best for simple use cases, usually involving a basic infrastructure resource.", "Implementation": "Implementing a facade module generally involves specifying an infrastructure resource with a number of hardcoded values, and a small number of values that are passed through from the code that uses the module. A declarative infrastructure language is appropriate for a facade module."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "*Also known as: wrapper module.*\n\n\nA facade module creates a simplified interface to a resource from the stack tool language or the infrastructure platform. The module exposes a few parameters to the calling code:\n```\nuse module: shopspinner-server\n  name: checkout-appserver\n  memory: 8GB\n```\n\nThe module uses these parameters to call the resource it wraps, and hardcodes values for other parameters needed by the resource:\ndeclare module:\n```\nshopspinner-server\n  virtual_machine:\n    name: ${name}\n    source_image: hardened-linux-base\n    memory: ${memory}\n    provision:\n      tool: servermaker\n      maker_server: maker.shopspinner.xyz\n      role: application_server\n    network:\n      vlan: application_zone_vlan\n```\n\nThis example module allows the caller to create a virtual server, specifying the name and the amount of memory for the server. Every server created using the module uses a source image, role, and networking defined by the module.", "Motivation": "A facade module simplifies and standardizes a common use case for an infrastructure resource. The stack code that uses a facade module should be simpler and easier to read. Improvements to the quality of the module code are rapidly available to all of the stacks that use it.", "Consequences": "A facade module limits how you can use the underlying infrastructure resource. Doing this can be useful, simplifying options and standardizing around better and more secure implementations. But it limits flexibility, so won''t apply to every use case.\n\n\nA module is an extra layer of code between the stack code and the code that directly specifies the infrastructure resources. This extra layer adds at least some overhead to maintaining, debugging, and improving code. It can also make it harder to understand the stack code.", "Applicability": "Facade modules work best for simple use cases, usually involving a basic infrastructure resource.", "Implementation": "Implementing a facade module generally involves specifying an infrastructure resource with a number of hardcoded values, and a small number of values that are passed through from the code that uses the module. A declarative infrastructure language is appropriate for a facade module."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('80945f10-25df-465b-a3aa-38df56adbbac', 'Obfuscation Module', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/obfuscationModule', '{"Icon": "Enter your input for this section here.", "Type": "Antipattern", "Context": "An *Obfuscation Module* wraps the code for an infrastructure element defined by the stack language or infrastructure platform, but does not simplify it or add any particular value. In the worst cases, the module complicates the code.\n```\nuse module: any_server\n  server_name: checkout-appserver\n  ram: 8GB\n  source_image: base_linux_image\n  provisioning_tool: servermaker\n  server_role: application_server\n  vlan: application_zone_vlan\n```\n\nThe module itself passes the parameters directly to the stack management tool''s code, as shown in this example:\ndeclare module:\n```\nany_server\n  virtual_machine:\n    name: ${server_name}\n    source_image: ${origin_server_image}\n    memory: ${ram}\n    provision:\n      tool: ${provisioning_tool}\n      role: ${server_role}\n    network:\n      vlan: ${server_vlan}\n```", "Motivation": "An Obfuscation Module may be a [Facade Module](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/df903950-138e-45ae-8fdd-787dcfdeb5f1) gone wrong. Sometimes people write this kind of module aiming to follow the DRY principle (Dont'' Repeat Yourself). They see that code that defines a common infrastructure element, such as a virtual server, load balancer, or security group, is used in multiple places in the codebase. So they create a module that declares that element type once and use that everywhere. But because the elements are being used differently in different parts of the code, they need to expose a large number of parameters in their module.\n\n\nOther people create obfuscation modules in a quest to design their own language for referring to infrastructure elements, \"improving\" the one provided by their stack tool.", "Consequences": "Writing, using, and maintaining module code rather than directly using the constructs provided by your stack tool adds overhead. It adds more code to maintain, cognitive overhead to learn, and extra moving parts in your build and delivery process. A component should add enough value to make the overhead worthwhile.", "Applicability": "Nobody intentionally writes an obfuscation module. You may debate whether a given module obfuscates or is a facade, and that debate is useful. You should consider whether a module adds real value and, if not, then refactor it into code that uses the stack language directly.", "Implementation": "If a module neither simplifies the resources it defines nor adds value over the underlying stack language code, consider replacing usages by directly using the stack language."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Antipattern", "Context": "An *Obfuscation Module* wraps the code for an infrastructure element defined by the stack language or infrastructure platform, but does not simplify it or add any particular value. In the worst cases, the module complicates the code.\n```\nuse module: any_server\n  server_name: checkout-appserver\n  ram: 8GB\n  source_image: base_linux_image\n  provisioning_tool: servermaker\n  server_role: application_server\n  vlan: application_zone_vlan\n```\n\nThe module itself passes the parameters directly to the stack management tool''s code, as shown in this example:\ndeclare module:\n```\nany_server\n  virtual_machine:\n    name: ${server_name}\n    source_image: ${origin_server_image}\n    memory: ${ram}\n    provision:\n      tool: ${provisioning_tool}\n      role: ${server_role}\n    network:\n      vlan: ${server_vlan}\n```", "Motivation": "An Obfuscation Module may be a [Facade Module](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/df903950-138e-45ae-8fdd-787dcfdeb5f1) gone wrong. Sometimes people write this kind of module aiming to follow the DRY principle (Dont'' Repeat Yourself). They see that code that defines a common infrastructure element, such as a virtual server, load balancer, or security group, is used in multiple places in the codebase. So they create a module that declares that element type once and use that everywhere. But because the elements are being used differently in different parts of the code, they need to expose a large number of parameters in their module.\n\n\nOther people create obfuscation modules in a quest to design their own language for referring to infrastructure elements, \"improving\" the one provided by their stack tool.", "Consequences": "Writing, using, and maintaining module code rather than directly using the constructs provided by your stack tool adds overhead. It adds more code to maintain, cognitive overhead to learn, and extra moving parts in your build and delivery process. A component should add enough value to make the overhead worthwhile.", "Applicability": "Nobody intentionally writes an obfuscation module. You may debate whether a given module obfuscates or is a facade, and that debate is useful. You should consider whether a module adds real value and, if not, then refactor it into code that uses the stack language directly.", "Implementation": "If a module neither simplifies the resources it defines nor adds value over the underlying stack language code, consider replacing usages by directly using the stack language."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('d5da5afa-d17d-4ab5-a56c-a399a0bf376a', 'Unshared Module', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/unsharedModule', '{"Icon": "Enter your input for this section here.", "Type": "Antipattern", "Context": "An *unshared module* is only used once in a codebase, rather than being reused by multiple stacks.", "Motivation": "People usually create unshared modules as a way to organize the code within a stack project.", "Consequences": "Organizing a single stack''s code into modules adds overhead to the codebase, probably including versioning and other moving parts. Building a reusable module when you don''t need to reuse it is an example of YAGNI (\"You Aren''t Gonna Need It\"), investing effort now for a benefit that you may or may not need in the future.", "Applicability": "As a stack project''s code grows, you may be tempted to divide the code into modules. If you divide the code so that you can write tests for each module, this can make it easier to work with the code. Otherwise, there may be better ways to improve the codebase.", "Implementation": "When a stack project becomes too large, there are several alternatives to moving its code into modules. It''s often better to split the stack into multiple stacks, using an appropriate stack structural pattern. If the stack is fairly cohesive, you could instead simply organize the code into different files and, if necessary, different folders. Doing this can make the code easier to navigate and understand without the overhead of the other options.\n\n\nThe *rule of three* for software reuse suggests that you should turn something into a reusable component when you find three places that you need to use it."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Antipattern", "Context": "An *unshared module* is only used once in a codebase, rather than being reused by multiple stacks.", "Motivation": "People usually create unshared modules as a way to organize the code within a stack project.", "Consequences": "Organizing a single stack''s code into modules adds overhead to the codebase, probably including versioning and other moving parts. Building a reusable module when you don''t need to reuse it is an example of YAGNI (\"You Aren''t Gonna Need It\"), investing effort now for a benefit that you may or may not need in the future.", "Applicability": "As a stack project''s code grows, you may be tempted to divide the code into modules. If you divide the code so that you can write tests for each module, this can make it easier to work with the code. Otherwise, there may be better ways to improve the codebase.", "Implementation": "When a stack project becomes too large, there are several alternatives to moving its code into modules. It''s often better to split the stack into multiple stacks, using an appropriate stack structural pattern. If the stack is fairly cohesive, you could instead simply organize the code into different files and, if necessary, different folders. Doing this can make the code easier to navigate and understand without the overhead of the other options.\n\n\nThe *rule of three* for software reuse suggests that you should turn something into a reusable component when you find three places that you need to use it."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('87bf22e8-5611-45e4-98f2-0ead82bc1095', 'Infrastructure Domain Entity', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/infrastructureDomainEntity', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "A infrastructure domain entity implements a high-level stack component by combining multiple lower-level infrastructure resources. An example of a higher-level concept is the infrastructure needed to run an application.\n\n\nThis example shows how a library that implements a Java application infrastructure instance might be used from stack project code:\n```\n   use module: application_server\n     service_name: checkout_service\n     application_name: checkout_application\n     application_version: 1.23\n     traffic_level: medium\n```\n\nThe code defines the application and version to deploy, and also a traffic level. The domain entity library code could look similar to the [Bundle Module](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/560a18fd-4fe7-49ad-a7d5-20a3011ddb3c) example, but includes dynamic code to provision resources according to the `traffic_level` parameter:\n```\n   ...\n     switch (${traffic_level}) {\n       case (\"high\") {\n         $appserver_cluster.min_size = 3\n         $appserver_cluster.max_size = 9\n       } case (\"medium\") {\n         $appserver_cluster.min_size = 2\n         $appserver_cluster.max_size = 5\n       } case (\"low\") {\n         $appserver_cluster.min_size = 1\n         $appserver_cluster.max_size = 2\n       }\n     }\n   ...\n```", "Motivation": "A domain entity is often part of an abstraction layer that people can use to define and build infrastructure based on higher-level requirements. An infrastructure platform team builds components that other teams can use to assemble stacks.", "Consequences": "On a concrete level, implementing an infrastructure domain entity is a matter of writing the code. But the best way to create a high-quality codebase that is easy for people to learn and maintain is to take a design-led approach.\n\n\nI recommend drawing from lessons learned in software architecture and design. The infrastructure domain entity pattern derives from *Domain Driven Design* (DDD), which creates a conceptual model for the business domain of a software system, and uses that to drive the design of the system itself. Infrastructure, especially one designed and built as software, should be seen as a domain in its own right. The domain is building, delivering, and running software.\n\n\nA particularly powerful approach is for an organization to use DDD to design the architecture for the business software, and then extend the domain to include the systems and services used for building and running that software.", "Applicability": "Because an infrastructure domain entity dynamically provisions infrastructure resources, it should be written in an imperative language rather than a declarative one.", "Implementation": "Enter your input for this section here."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "A infrastructure domain entity implements a high-level stack component by combining multiple lower-level infrastructure resources. An example of a higher-level concept is the infrastructure needed to run an application.\n\n\nThis example shows how a library that implements a Java application infrastructure instance might be used from stack project code:\n```\n   use module: application_server\n     service_name: checkout_service\n     application_name: checkout_application\n     application_version: 1.23\n     traffic_level: medium\n```\n\nThe code defines the application and version to deploy, and also a traffic level. The domain entity library code could look similar to the [Bundle Module](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/560a18fd-4fe7-49ad-a7d5-20a3011ddb3c) example, but includes dynamic code to provision resources according to the `traffic_level` parameter:\n```\n   ...\n     switch (${traffic_level}) {\n       case (\"high\") {\n         $appserver_cluster.min_size = 3\n         $appserver_cluster.max_size = 9\n       } case (\"medium\") {\n         $appserver_cluster.min_size = 2\n         $appserver_cluster.max_size = 5\n       } case (\"low\") {\n         $appserver_cluster.min_size = 1\n         $appserver_cluster.max_size = 2\n       }\n     }\n   ...\n```", "Motivation": "A domain entity is often part of an abstraction layer that people can use to define and build infrastructure based on higher-level requirements. An infrastructure platform team builds components that other teams can use to assemble stacks.", "Consequences": "On a concrete level, implementing an infrastructure domain entity is a matter of writing the code. But the best way to create a high-quality codebase that is easy for people to learn and maintain is to take a design-led approach.\n\n\nI recommend drawing from lessons learned in software architecture and design. The infrastructure domain entity pattern derives from *Domain Driven Design* (DDD), which creates a conceptual model for the business domain of a software system, and uses that to drive the design of the system itself. Infrastructure, especially one designed and built as software, should be seen as a domain in its own right. The domain is building, delivering, and running software.\n\n\nA particularly powerful approach is for an organization to use DDD to design the architecture for the business software, and then extend the domain to include the systems and services used for building and running that software.", "Applicability": "Because an infrastructure domain entity dynamically provisions infrastructure resources, it should be written in an imperative language rather than a declarative one.", "Implementation": "Enter your input for this section here."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('7fdef8d4-e31e-41b6-80a0-caf365ec5247', 'Spaghetti Module', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/spaghettiModule', '{"Icon": "Enter your input for this section here.", "Type": "Antipattern", "Context": "A spaghetti module is configurable to the point where it creates significantly different results depending on the parameters given to it. The implementation of the module is messy and difficult to understand, because it has too many moving parts. See example:\n```\ndeclare module: application-server-infrastructure\n  variable: network_segment = {\n    if ${parameter.network_access} = \"public\"\n      id: public_subnet\n    else if ${parameter.network_access} = \"customer\"\n      id: customer_subnet\n    else\n      id: internal_subnet\n    end\n  }\n\n  switch ${parameter.application_type}:\n    \"java\":\n      virtual_machine:\n        origin_image: base_tomcat\n        network_segment: ${variable.network_segment}\n        server_configuration:\n        if ${parameter.database} != \"none\"\n          database_connection: ${database_instance.my_database.connection_string}\n        end\n        ...\n    \"NET\":\n      virtual_machine:\n        origin_image: windows_server\n        network_segment: ${variable.network_segment}\n        server_configuration:\n        if ${parameter.database} != \"none\"\n          database_connection: ${database_instance.my_database.connection_string}\n        end\n        ...\n    \"php\":\n      container_group:\n        cluster_id: ${parameter.container_cluster}\n        container_image: nginx_php_image\n        network_segment: ${variable.network_segment}\n        server_configuration:\n        if ${parameter.database} != \"none\"\n          database_connection: ${database_instance.my_database.connection_string}\n        end\n        ...\n  end\n\n  switch ${parameter.database}:\n    \"mysql\":\n      database_instance: my_database\n        type: mysql\n        ...\n    ...\n```\n\nThis example code assigns the server it creates to one of three different network segments, and optionally creates a database cluster and passes a connection string to the server configuration. In some cases, it creates a group of container instances rather than a virtual server. This module is a bit of a beast.", "Motivation": "As with other antipatterns, people create a spaghetti module by accident, often over time. You may create a [Facade Module](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/df903950-138e-45ae-8fdd-787dcfdeb5f1) or a [Bundle Module](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/560a18fd-4fe7-49ad-a7d5-20a3011ddb3c), that grows in complexity to handle divergent use cases that seem similar on the surface.\n\n\nSpaghetti modules often result from trying to implement an [Infrastructure Domain Entity](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/87bf22e8-5611-45e4-98f2-0ead82bc1095) using a declarative language.", "Consequences": "A module that does too many things is less maintainable than one with a tighter scope. The more things a module does, and the more variations there are in the infrastructure that it can create, the harder it is to change it without breaking something. These modules are harder to test. Better-designed code is easier to test, so if you''re struggling to write automated tests and build pipelines to test the module in isolation, it''s a sign that you have a spaghetti module.", "Applicability": "", "Implementation": "A spaghetti module''s code often contains conditionals that apply different specifications in different situations. For example, a database cluster module might take a parameter to choose which database to provision.\n\n\nWhen you realize you have a spaghetti module on your hands, you should refactor it. Often, you can split it into different modules, each with a more focused remit. For example, you might decompose your single application infrastructure module into different modules for different parts of the application''s infrastructure. An example of a stack that uses decomposed modules in this way, rather than using the spaghetti module from the example above, might look like this:\n```\nuse module: java-application-servers\n  name: checkout_appserver\n  application: \"shopping_app\"\n  application_version: \"4.20\"\n  network_segment: customer_subnet\n  server_configuration:\n    database_connection: ${module.mysql-database.outputs.connection_string}\n\nuse module: mysql-database\n  cluster_minimum: 1\n  cluster_maximum: 3\n  allow_connections_from: customer_subnet\n```\n\nEach of the modules is smaller, simpler, and so easier to maintain and test than the original spaghetti module."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Antipattern", "Context": "A spaghetti module is configurable to the point where it creates significantly different results depending on the parameters given to it. The implementation of the module is messy and difficult to understand, because it has too many moving parts. See example:\n```\ndeclare module: application-server-infrastructure\n  variable: network_segment = {\n    if ${parameter.network_access} = \"public\"\n      id: public_subnet\n    else if ${parameter.network_access} = \"customer\"\n      id: customer_subnet\n    else\n      id: internal_subnet\n    end\n  }\n\n  switch ${parameter.application_type}:\n    \"java\":\n      virtual_machine:\n        origin_image: base_tomcat\n        network_segment: ${variable.network_segment}\n        server_configuration:\n        if ${parameter.database} != \"none\"\n          database_connection: ${database_instance.my_database.connection_string}\n        end\n        ...\n    \"NET\":\n      virtual_machine:\n        origin_image: windows_server\n        network_segment: ${variable.network_segment}\n        server_configuration:\n        if ${parameter.database} != \"none\"\n          database_connection: ${database_instance.my_database.connection_string}\n        end\n        ...\n    \"php\":\n      container_group:\n        cluster_id: ${parameter.container_cluster}\n        container_image: nginx_php_image\n        network_segment: ${variable.network_segment}\n        server_configuration:\n        if ${parameter.database} != \"none\"\n          database_connection: ${database_instance.my_database.connection_string}\n        end\n        ...\n  end\n\n  switch ${parameter.database}:\n    \"mysql\":\n      database_instance: my_database\n        type: mysql\n        ...\n    ...\n```\n\nThis example code assigns the server it creates to one of three different network segments, and optionally creates a database cluster and passes a connection string to the server configuration. In some cases, it creates a group of container instances rather than a virtual server. This module is a bit of a beast.", "Motivation": "As with other antipatterns, people create a spaghetti module by accident, often over time. You may create a [Facade Module](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/df903950-138e-45ae-8fdd-787dcfdeb5f1) or a [Bundle Module](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/560a18fd-4fe7-49ad-a7d5-20a3011ddb3c), that grows in complexity to handle divergent use cases that seem similar on the surface.\n\n\nSpaghetti modules often result from trying to implement an [Infrastructure Domain Entity](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/87bf22e8-5611-45e4-98f2-0ead82bc1095) using a declarative language.", "Consequences": "A module that does too many things is less maintainable than one with a tighter scope. The more things a module does, and the more variations there are in the infrastructure that it can create, the harder it is to change it without breaking something. These modules are harder to test. Better-designed code is easier to test, so if you''re struggling to write automated tests and build pipelines to test the module in isolation, it''s a sign that you have a spaghetti module.", "Applicability": "", "Implementation": "A spaghetti module''s code often contains conditionals that apply different specifications in different situations. For example, a database cluster module might take a parameter to choose which database to provision.\n\n\nWhen you realize you have a spaghetti module on your hands, you should refactor it. Often, you can split it into different modules, each with a more focused remit. For example, you might decompose your single application infrastructure module into different modules for different parts of the application''s infrastructure. An example of a stack that uses decomposed modules in this way, rather than using the spaghetti module from the example above, might look like this:\n```\nuse module: java-application-servers\n  name: checkout_appserver\n  application: \"shopping_app\"\n  application_version: \"4.20\"\n  network_segment: customer_subnet\n  server_configuration:\n    database_connection: ${module.mysql-database.outputs.connection_string}\n\nuse module: mysql-database\n  cluster_minimum: 1\n  cluster_maximum: 3\n  allow_connections_from: customer_subnet\n```\n\nEach of the modules is smaller, simpler, and so easier to maintain and test than the original spaghetti module."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('560a18fd-4fe7-49ad-a7d5-20a3011ddb3c', 'Bundle Module', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/bundleModule', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "A bundle module declares a collection of related infrastructure resources with a simplified interface. The stack code uses the module to define what it needs to provision:\n ```\n use module: application_server\n   service_name: checkout_service\n   application_name: checkout_application\n   application_version: 1.23\n   min_cluster: 1\n   max_cluster: 3\n   ram_required: 4GB\n```\n\t\t\nThe module code declares multiple infrastructure resources, usually centered on a core resource. In the following example, the resource is a server cluster, but also includes a load balancer and DNS entry.\ndeclare module:\n```\napplication_server\n\n  server_cluster:\n    id: \"${service_name}-cluster\"\n    min_size: ${min_cluster}\n    max_size: ${max_cluster}\n    each_server_node:\n      source_image: base_linux\n      memory: ${ram_required}\n      provision:\n        tool: servermaker\n        role: appserver\n        parameters:\n          app_package: \"${checkout_application}-${application_version}.war\"\n          app_repository: \"repository.shopspinner.xyz\"\n\n  load_balancer:\n    protocol: https\n    target:\n      type: server_cluster\n      target_id: \"${service_name}-cluster\"\n\n  dns_entry:\n    id: \"${service_name}-hostname\"\n    record_type: \"A\"\n    hostname: \"${service_name}.shopspinner.xyz\"\n    ip_address: {$load_balancer.ip_address}\n```", "Motivation": "A bundle module is useful to define a cohesive collection of infrastructure resources. It avoids verbose, redundant code. These modules are useful to capture knowledge about the various elements needed and how to wire them together for a common purpose.", "Consequences": "A bundle module may provision more resources than you need in some situations. Users of the module should understand what it provisions, and avoid using the module if it''s overkill for their use case.", "Applicability": "A bundle module is suitable when you''re working with a declarative stack language, and when the resources involved don''t vary in different use cases. If you find that you need the module to create different resources or configure them differently depending on the usage, then you should either create separate modules, or else switch to an imperative language and create an [Infrastructure Domain Entity](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/87bf22e8-5611-45e4-98f2-0ead82bc1095).", "Implementation": "Define the module declaratively, including infrastructure elements that are closely related to the declared purpose."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "A bundle module declares a collection of related infrastructure resources with a simplified interface. The stack code uses the module to define what it needs to provision:\n ```\n use module: application_server\n   service_name: checkout_service\n   application_name: checkout_application\n   application_version: 1.23\n   min_cluster: 1\n   max_cluster: 3\n   ram_required: 4GB\n```\n\t\t\nThe module code declares multiple infrastructure resources, usually centered on a core resource. In the following example, the resource is a server cluster, but also includes a load balancer and DNS entry.\ndeclare module:\n```\napplication_server\n\n  server_cluster:\n    id: \"${service_name}-cluster\"\n    min_size: ${min_cluster}\n    max_size: ${max_cluster}\n    each_server_node:\n      source_image: base_linux\n      memory: ${ram_required}\n      provision:\n        tool: servermaker\n        role: appserver\n        parameters:\n          app_package: \"${checkout_application}-${application_version}.war\"\n          app_repository: \"repository.shopspinner.xyz\"\n\n  load_balancer:\n    protocol: https\n    target:\n      type: server_cluster\n      target_id: \"${service_name}-cluster\"\n\n  dns_entry:\n    id: \"${service_name}-hostname\"\n    record_type: \"A\"\n    hostname: \"${service_name}.shopspinner.xyz\"\n    ip_address: {$load_balancer.ip_address}\n```", "Motivation": "A bundle module is useful to define a cohesive collection of infrastructure resources. It avoids verbose, redundant code. These modules are useful to capture knowledge about the various elements needed and how to wire them together for a common purpose.", "Consequences": "A bundle module may provision more resources than you need in some situations. Users of the module should understand what it provisions, and avoid using the module if it''s overkill for their use case.", "Applicability": "A bundle module is suitable when you''re working with a declarative stack language, and when the resources involved don''t vary in different use cases. If you find that you need the module to create different resources or configure them differently depending on the usage, then you should either create separate modules, or else switch to an imperative language and create an [Infrastructure Domain Entity](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/87bf22e8-5611-45e4-98f2-0ead82bc1095).", "Implementation": "Define the module declaratively, including infrastructure elements that are closely related to the declared purpose."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('ea97c486-7047-4fb9-97e8-f0a58b072faa', 'Resource Matching', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/resourceMatching', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "A consumer stack uses *resource matching* to discover a dependency by looking for infrastructure resources that match names, tags, or other identifying characteristics. For example, a provider stack could name VLANs by the types of resources that belong in the VLAN and the environment of the VLAN.\n\n\nIn this example, `vlan-appserver-staging` is intended for application servers in the staging environment. The `application-infrastructure-stack` code finds this resource by matching the naming pattern:\n```\n   virtual_machine:\n     name: \"appserver-${ENVIRONMENT_NAME}\"\n     vlan: \"vlan-appserver-${ENVIRONMENT_NAME}\"\n```\n\t\t \nA value for `ENVIRONMENT_NAME` is passed to the stack management tool when applying the code.", "Motivation": "Resource matching is straightforward to implement with most stack management tools and languages. The pattern mostly eliminates hardcoded dependencies, reducing coupling.\n\n\nResource matching also avoids coupling on tools. The provider infrastructure and consumer stack can be implemented using different tools.", "Consequences": "As soon as a consumer stack implements resource matching to discover a resource from another stack, the matching pattern becomes a contract. If someone changes the naming pattern of the VLAN in the shared networking stack, the consumer''s dependency breaks.\n\n\nSo a consumer team should only discover dependencies by matching resources in ways that the provider team explicitly supports. Provider teams should clearly communicate what resource matching patterns they support, and be sure to maintain the integrity of those patterns as a contract.", "Applicability": "Use resource matching for discovering dependencies when the teams managing provider and consumer code both have a clear understanding of which resources should be used as dependencies. Consider switching to an alternative pattern if you experience issues with breaking dependencies between teams.\n\n\nResource matching is useful in larger organizations, or across organizations, where different teams may use different tooling to manage their infrastructure, but still need to integrate at the infrastructure level. Even where everyone currently uses a single tool, resource matching reduces lock-in to that tool, creating the option to use new tools for different parts of the system.", "Implementation": "There are several ways to discover infrastructure resources by matching. The most straightforward method is to use variables in the name of the resource, as shown in the example code from earlier:\n```\n   virtual_machine:\n     name: \"appserver-${ENVIRONMENT_NAME}\"\n     vlan: \"vlan-appserver-${ENVIRONMENT_NAME}\"\n```\n\nThe string `vlan-appserver-${ENVIRONMENT_NAME}` will match the relevant VLAN for the environment.\n\n\nMost stack languages have features to match other attributes than the resource name. Terraform has data sources and AWS CDK''s supports resource importing.\n\n\nIn this example (using pseudocode) the provider assigns tags to its VLANs:\n```\n   vlans:\n     - appserver_vlan\n       address_range: 10.2.0.0/8\n       tags:\n         network_tier: \"application_servers\"\n         environment: ${ENVIRONMENT_NAME}\n```\n\nThe consumer code discovers the VLAN it needs using those tags:\n```\n   external_resource:\n     id: appserver_vlan\n     match:\n       tag: name == \"network_tier\" && value == \"application_servers\"\n       tag: name == \"environment\" && value == ${ENVIRONMENT_NAME}\n\n   virtual_machine:\n     name: \"appserver-${ENVIRONMENT_NAME}\"\n     vlan: external_resource.appserver_vlan\n```"}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "A consumer stack uses *resource matching* to discover a dependency by looking for infrastructure resources that match names, tags, or other identifying characteristics. For example, a provider stack could name VLANs by the types of resources that belong in the VLAN and the environment of the VLAN.\n\n\nIn this example, `vlan-appserver-staging` is intended for application servers in the staging environment. The `application-infrastructure-stack` code finds this resource by matching the naming pattern:\n```\n   virtual_machine:\n     name: \"appserver-${ENVIRONMENT_NAME}\"\n     vlan: \"vlan-appserver-${ENVIRONMENT_NAME}\"\n```\n\t\t \nA value for `ENVIRONMENT_NAME` is passed to the stack management tool when applying the code.", "Motivation": "Resource matching is straightforward to implement with most stack management tools and languages. The pattern mostly eliminates hardcoded dependencies, reducing coupling.\n\n\nResource matching also avoids coupling on tools. The provider infrastructure and consumer stack can be implemented using different tools.", "Consequences": "As soon as a consumer stack implements resource matching to discover a resource from another stack, the matching pattern becomes a contract. If someone changes the naming pattern of the VLAN in the shared networking stack, the consumer''s dependency breaks.\n\n\nSo a consumer team should only discover dependencies by matching resources in ways that the provider team explicitly supports. Provider teams should clearly communicate what resource matching patterns they support, and be sure to maintain the integrity of those patterns as a contract.", "Applicability": "Use resource matching for discovering dependencies when the teams managing provider and consumer code both have a clear understanding of which resources should be used as dependencies. Consider switching to an alternative pattern if you experience issues with breaking dependencies between teams.\n\n\nResource matching is useful in larger organizations, or across organizations, where different teams may use different tooling to manage their infrastructure, but still need to integrate at the infrastructure level. Even where everyone currently uses a single tool, resource matching reduces lock-in to that tool, creating the option to use new tools for different parts of the system.", "Implementation": "There are several ways to discover infrastructure resources by matching. The most straightforward method is to use variables in the name of the resource, as shown in the example code from earlier:\n```\n   virtual_machine:\n     name: \"appserver-${ENVIRONMENT_NAME}\"\n     vlan: \"vlan-appserver-${ENVIRONMENT_NAME}\"\n```\n\nThe string `vlan-appserver-${ENVIRONMENT_NAME}` will match the relevant VLAN for the environment.\n\n\nMost stack languages have features to match other attributes than the resource name. Terraform has data sources and AWS CDK''s supports resource importing.\n\n\nIn this example (using pseudocode) the provider assigns tags to its VLANs:\n```\n   vlans:\n     - appserver_vlan\n       address_range: 10.2.0.0/8\n       tags:\n         network_tier: \"application_servers\"\n         environment: ${ENVIRONMENT_NAME}\n```\n\nThe consumer code discovers the VLAN it needs using those tags:\n```\n   external_resource:\n     id: appserver_vlan\n     match:\n       tag: name == \"network_tier\" && value == \"application_servers\"\n       tag: name == \"environment\" && value == ${ENVIRONMENT_NAME}\n\n   virtual_machine:\n     name: \"appserver-${ENVIRONMENT_NAME}\"\n     vlan: external_resource.appserver_vlan\n```"}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('b9a1279c-9b1a-4966-bde2-2743988dde1b', 'Stack Data Lookup', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/stackDataLookup', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "*Also known as: remote statefile lookup, stack reference lookup, or stack resource lookup.*\n\n\n*Stack data lookup* finds provider resources using data structures maintained by the\ntool that manages the provider stack.\n\n\nMany stack management tools maintain data structures for each stack instance, which include values exported by the stack code. Examples include Terraform and Pulumi remote state files.", "Motivation": "Stack management tool vendors make it easy to use their stack data lookup features to integrate different projects. Most implementations of data sharing across stacks require the provider stack to explicitly declare which resources to publish for use by other stacks. Doing this discourages consumer stacks from creating dependencies on resources without the provider''s knowledge.", "Consequences": "Stack data lookup tends to lock you into a single stack management tool. It''s possible to use the pattern with different tools, as described in the implementation of this pattern. But this adds complexity to your implementation.\n\n\nThis pattern sometimes breaks across different versions of the same stack tool. An upgrade to the tool may involve changing the stack data structures. This can cause problems when upgrading a provider stack to the newer version of the tool. Until you upgrade the consumer stack to the new version of the tool as well, it may not be possible for the older version of the tool to extract the resource values from the upgraded provider stack. This stops you from rolling out stack tool upgrades incrementally across stacks, potentially forcing a disruptive coordinated upgrade across your estate.", "Applicability": "Using stack data lookup functionality to discover dependencies across stacks works when all of the infrastructure in a system is managed using the same tool.", "Implementation": "The implementation of stack data lookup uses functionality from your stack management tool and its definition language.\n\n\nTerraform stores output values in a remote state file. Pulumi also stores resource details in a state file that can be referenced in a consumer stack using a StackReference. CloudFormation can export and import stack output values across stacks, which AWS CDK can also access.\n\n\nThe provider usually explicitly declares the resources it provides to consumers:\n```\n   stack:\n     name: shared_network_stack\n     environment: ${ENVIRONMENT_NAME}\n\n   vlans:\n     - appserver_vlan\n       address_range: 10.2.0.0/8\n\n   export:\n      - appserver_vlan_id: appserver_vlan.id\n```\n\nThe consumer declares a reference to the provider stack and uses this to refer to the VLAN identifier exported by that stack:\n```\n   external_stack:\n     name: shared_network_stack\n     environment: ${ENVIRONMENT_NAME}\n\n   virtual_machine:\n     name: \"appserver-${ENVIRONMENT_NAME}\"\n     vlan: external_stack.shared_network_stack.appserver_vlan.id\n```\n\nThis example embeds the reference to the external stack in the stack code. Another option is to use dependency injection so that your stack code is less coupled to the dependency discovery. Your orchestration script looks up the output value from the provider stack and passes it to your stack code as a parameter.\n\n\nAlthough stack data lookups are tied to the tool that manages the provider stack, you can usually extract these values in a script, so you can use them with other tools, as shown in this example:\n```\n#!/usr/bin/env bash\nVLAN_ID=$(\n  stack value \\\n    --stack_instance shared_network-staging \\\n    --export_name appserver_vlan_id\n)\n```\n\nThis code runs the fictional `stack` command, specifying the stack instance (`shared_network-staging`) to look in, and the exported variable to read and print (`appserver_vlan_id`). The shell command stores the command''s output, which is the ID of the VLAN, in a shell variable named `VLAN_ID`. The script can then use this variable in different ways."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "*Also known as: remote statefile lookup, stack reference lookup, or stack resource lookup.*\n\n\n*Stack data lookup* finds provider resources using data structures maintained by the\ntool that manages the provider stack.\n\n\nMany stack management tools maintain data structures for each stack instance, which include values exported by the stack code. Examples include Terraform and Pulumi remote state files.", "Motivation": "Stack management tool vendors make it easy to use their stack data lookup features to integrate different projects. Most implementations of data sharing across stacks require the provider stack to explicitly declare which resources to publish for use by other stacks. Doing this discourages consumer stacks from creating dependencies on resources without the provider''s knowledge.", "Consequences": "Stack data lookup tends to lock you into a single stack management tool. It''s possible to use the pattern with different tools, as described in the implementation of this pattern. But this adds complexity to your implementation.\n\n\nThis pattern sometimes breaks across different versions of the same stack tool. An upgrade to the tool may involve changing the stack data structures. This can cause problems when upgrading a provider stack to the newer version of the tool. Until you upgrade the consumer stack to the new version of the tool as well, it may not be possible for the older version of the tool to extract the resource values from the upgraded provider stack. This stops you from rolling out stack tool upgrades incrementally across stacks, potentially forcing a disruptive coordinated upgrade across your estate.", "Applicability": "Using stack data lookup functionality to discover dependencies across stacks works when all of the infrastructure in a system is managed using the same tool.", "Implementation": "The implementation of stack data lookup uses functionality from your stack management tool and its definition language.\n\n\nTerraform stores output values in a remote state file. Pulumi also stores resource details in a state file that can be referenced in a consumer stack using a StackReference. CloudFormation can export and import stack output values across stacks, which AWS CDK can also access.\n\n\nThe provider usually explicitly declares the resources it provides to consumers:\n```\n   stack:\n     name: shared_network_stack\n     environment: ${ENVIRONMENT_NAME}\n\n   vlans:\n     - appserver_vlan\n       address_range: 10.2.0.0/8\n\n   export:\n      - appserver_vlan_id: appserver_vlan.id\n```\n\nThe consumer declares a reference to the provider stack and uses this to refer to the VLAN identifier exported by that stack:\n```\n   external_stack:\n     name: shared_network_stack\n     environment: ${ENVIRONMENT_NAME}\n\n   virtual_machine:\n     name: \"appserver-${ENVIRONMENT_NAME}\"\n     vlan: external_stack.shared_network_stack.appserver_vlan.id\n```\n\nThis example embeds the reference to the external stack in the stack code. Another option is to use dependency injection so that your stack code is less coupled to the dependency discovery. Your orchestration script looks up the output value from the provider stack and passes it to your stack code as a parameter.\n\n\nAlthough stack data lookups are tied to the tool that manages the provider stack, you can usually extract these values in a script, so you can use them with other tools, as shown in this example:\n```\n#!/usr/bin/env bash\nVLAN_ID=$(\n  stack value \\\n    --stack_instance shared_network-staging \\\n    --export_name appserver_vlan_id\n)\n```\n\nThis code runs the fictional `stack` command, specifying the stack instance (`shared_network-staging`) to look in, and the exported variable to read and print (`appserver_vlan_id`). The shell command stores the command''s output, which is the ID of the VLAN, in a shell variable named `VLAN_ID`. The script can then use this variable in different ways."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('89aa9d13-decb-4e49-b738-a97394042eec', 'Integration Registry Lookup', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/integrationRegistryLookup', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "*Also known as: integration registry.*\n\n\nA consumer stack can use *integration registry lookup* to discover a resource published by a provider stack. Both stacks refer to a registry, using a known location to store and read values.\n\n\nMany stack tools support storing and retrieving values from different types of registries within definition code. The `shared-networking-stack` code sets the value:\n```\n   vlans:\n     - appserver_vlan\n       address_range: 10.2.0.0/8\n\n   registry:\n     host: registry.shopspinner.xyz\n     set:\n       /${ENVIRONMENT_NAME}/shared-networking/appserver_vlan: appserver_vlan.id\n```\n\nThe `application-infrastructure-stack code` then retrieves and uses the value:\n```\n   registry:\n     id: stack_registry\n     host: registry.shopspinner.xyz\n     values:\n       appserver_vlan_id: /${ENVIRONMENT_NAME}/shared-networking/appserver_vlan\n\n   virtual_machine:\n     name: \"appserver-${ENVIRONMENT_NAME}\"\n     vlan: stack_registry.appserver_vlan_id\n```", "Motivation": "Using a configuration registry decouples the stack management tools for different infrastructure stacks. Different teams can use different tools as long as they agree to use the same configuration registry service and naming conventions for storing values in it. This decoupling also makes it easier to upgrade and change tools incrementally, one stack at a time.\n\n\nUsing a configuration registry makes the integration points between stacks explicit. A consumer stack can only use values explicitly published by a provider stack, so the provider team can freely change how they implement their resources.", "Consequences": "The configuration registry becomes a critical service when you adopt the integration registry lookup pattern. You may not be able to provision or recover resources when the registry is unavailable.", "Applicability": "The integration registry lookup pattern is useful for larger organizations, where different teams may use different technologies. It''s also useful for organizations concerned about lock-in to a tool.\n\n\nIf your system already uses a configuration registry, for instance, to provide configuration values to stack instances following the [Stack Parameter Registry](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/c0a25c90-aebe-4fbf-8579-358afa157d21) pattern, it can make sense to use the same registry for integrating stacks.", "Implementation": "The configuration registry is a prerequisite for using this pattern. Some infrastructure tool vendors provide registry servers. With any registry product, be sure it''s well-supported by the tools you use, and those you might consider using in the future.\n\n\nIt''s essential to establish a clear convention for naming parameters, especially when using the registry to integrate infrastructure across multiple teams. Many organizations use a hierarchical namespace, similar to a directory or folder structure, even when the registry product implements a simple key/value mechanism. The structure typically includes components for architectural units (such as services, applications, or products), environments, geography, or teams.\n\n\nFor example, an application could use a hierarchical path based on the geographical region:\n   /infrastructure/\n    ├── au/\n    │   ├── shared-networking/\n    │   │   └── appserver_vlan=\n    │   └── application-infrastructure/\n    │       └── appserver_ip_address=\n    └── eu/\n        ├── shared-networking/\n        │   └── appserver_vlan=\n        └── application-infrastructure/\n            └── appserver_ip_address=\nThe IP address of the application server for the European region, in this example, is found at the location */infrastructure/eu/application-infrastructure/appserver_ip_address*."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "*Also known as: integration registry.*\n\n\nA consumer stack can use *integration registry lookup* to discover a resource published by a provider stack. Both stacks refer to a registry, using a known location to store and read values.\n\n\nMany stack tools support storing and retrieving values from different types of registries within definition code. The `shared-networking-stack` code sets the value:\n```\n   vlans:\n     - appserver_vlan\n       address_range: 10.2.0.0/8\n\n   registry:\n     host: registry.shopspinner.xyz\n     set:\n       /${ENVIRONMENT_NAME}/shared-networking/appserver_vlan: appserver_vlan.id\n```\n\nThe `application-infrastructure-stack code` then retrieves and uses the value:\n```\n   registry:\n     id: stack_registry\n     host: registry.shopspinner.xyz\n     values:\n       appserver_vlan_id: /${ENVIRONMENT_NAME}/shared-networking/appserver_vlan\n\n   virtual_machine:\n     name: \"appserver-${ENVIRONMENT_NAME}\"\n     vlan: stack_registry.appserver_vlan_id\n```", "Motivation": "Using a configuration registry decouples the stack management tools for different infrastructure stacks. Different teams can use different tools as long as they agree to use the same configuration registry service and naming conventions for storing values in it. This decoupling also makes it easier to upgrade and change tools incrementally, one stack at a time.\n\n\nUsing a configuration registry makes the integration points between stacks explicit. A consumer stack can only use values explicitly published by a provider stack, so the provider team can freely change how they implement their resources.", "Consequences": "The configuration registry becomes a critical service when you adopt the integration registry lookup pattern. You may not be able to provision or recover resources when the registry is unavailable.", "Applicability": "The integration registry lookup pattern is useful for larger organizations, where different teams may use different technologies. It''s also useful for organizations concerned about lock-in to a tool.\n\n\nIf your system already uses a configuration registry, for instance, to provide configuration values to stack instances following the [Stack Parameter Registry](pattern-languages/66540853-0299-4815-ac1b-6d2d1ba369d0/c0a25c90-aebe-4fbf-8579-358afa157d21) pattern, it can make sense to use the same registry for integrating stacks.", "Implementation": "The configuration registry is a prerequisite for using this pattern. Some infrastructure tool vendors provide registry servers. With any registry product, be sure it''s well-supported by the tools you use, and those you might consider using in the future.\n\n\nIt''s essential to establish a clear convention for naming parameters, especially when using the registry to integrate infrastructure across multiple teams. Many organizations use a hierarchical namespace, similar to a directory or folder structure, even when the registry product implements a simple key/value mechanism. The structure typically includes components for architectural units (such as services, applications, or products), environments, geography, or teams.\n\n\nFor example, an application could use a hierarchical path based on the geographical region:\n   /infrastructure/\n    ├── au/\n    │   ├── shared-networking/\n    │   │   └── appserver_vlan=\n    │   └── application-infrastructure/\n    │       └── appserver_ip_address=\n    └── eu/\n        ├── shared-networking/\n        │   └── appserver_vlan=\n        └── application-infrastructure/\n            └── appserver_ip_address=\nThe IP address of the application server for the European region, in this example, is found at the location */infrastructure/eu/application-infrastructure/appserver_ip_address*."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);
INSERT INTO public.pattern VALUES ('de2064d4-c769-409f-92c5-665f6da84635', 'Build-Time Project Integration', 'https://patternpedia.org/patternLanguages/infrastructureAsCodePatterns/build-timeProjectIntegration', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "The *build-time project integration* pattern carries out build activities across multiple projects. Doing this involves integrating the dependencies between them and setting the code versions across the projects.\n\n\nThe build process often involves building and testing each of the constituent projects before building and testing them together. What distinguishes this pattern from alternatives is that it produces either a single artifact for all of the projects, or a set of artifacts that are versioned, promoted, and applied as a group.\n\n\nIn this figure, a single build stage produces a server image using multiple server configuration projects.\n\n\nThe build stage may include multiple steps, such as building and testing the individual server configuration modules. But the output—the server image—is composed of code from all of its constituent projects.", "Motivation": "Building the projects together resolves any issues with dependencies early. Doing this gives fast feedback on conflicts, and creates a high level of consistency across the codebase through the delivery process into production. Project code integrated at build time is consistent throughout the entire delivery cycle. The same version of code is applied at every stage of the process through to production.", "Consequences": "Building and integrating multiple projects at runtime is complex, especially for very large numbers of projects. Depending on how you implement the build, it may lead to slower feedback times.\n\n\nUsing build-time project integration at scale requires sophisticated tooling to orchestrate builds. Larger organizations that use this pattern across large codebases, such as Google and Facebook, have teams dedicated to maintaining in-house tooling.\n\n\nSome build tools are available to build very large numbers of software projects, as discussed under implementation. But this approach is not used as widely in the industry as building projects separately, so there are not as many tools and reference materials to help.\n\n\nBecause projects are built together, boundaries between them are less visible than with other patterns. This may lead to tighter coupling across projects. When this happens, it can be hard to make a small change without affecting many other parts of the codebase, increasing the time and risk of changes.", "Applicability": "The use of this pattern versus one of the alternatives is mostly a matter of preference. It depends on which set of trade-offs you prefer, and on your team''s ability to manage the complexity of cross-project builds.", "Implementation": "Storing all of the projects for the build in a single repository, often called a monorepo, simplifies building them together by integrating code versioning across them.\n\n\nMost software build tools, like Gradle, Make, Maven, MSBuild, and Rake, are used to orchestrate builds across a modest number of projects. Running builds and tests across a very large number of projects can take a long time.\n\n\nParallelization can speed up this process by building and testing multiple projects in different threads, processes, or even across a compute grid. But this requires more compute resources.\n\n\nA better way to optimize large-scale builds is using a directed graph to limit building and testing to the parts of the codebase that have changed. Done well, this should reduce the time needed to build and test after a commit so that it only takes a little longer than running a build for separate projects.\n\n\nThere are several specialized build tools designed to handle very large-scale, multiproject builds. Most of these were inspired by internal tools created at Google and Facebook. Some of these tools include Bazel, Buck, Pants, and Please."}', '', '{"Icon": "Enter your input for this section here.", "Type": "Pattern", "Context": "The *build-time project integration* pattern carries out build activities across multiple projects. Doing this involves integrating the dependencies between them and setting the code versions across the projects.\n\n\nThe build process often involves building and testing each of the constituent projects before building and testing them together. What distinguishes this pattern from alternatives is that it produces either a single artifact for all of the projects, or a set of artifacts that are versioned, promoted, and applied as a group.\n\n\nIn this figure, a single build stage produces a server image using multiple server configuration projects.\n\n\nThe build stage may include multiple steps, such as building and testing the individual server configuration modules. But the output—the server image—is composed of code from all of its constituent projects.", "Motivation": "Building the projects together resolves any issues with dependencies early. Doing this gives fast feedback on conflicts, and creates a high level of consistency across the codebase through the delivery process into production. Project code integrated at build time is consistent throughout the entire delivery cycle. The same version of code is applied at every stage of the process through to production.", "Consequences": "Building and integrating multiple projects at runtime is complex, especially for very large numbers of projects. Depending on how you implement the build, it may lead to slower feedback times.\n\n\nUsing build-time project integration at scale requires sophisticated tooling to orchestrate builds. Larger organizations that use this pattern across large codebases, such as Google and Facebook, have teams dedicated to maintaining in-house tooling.\n\n\nSome build tools are available to build very large numbers of software projects, as discussed under implementation. But this approach is not used as widely in the industry as building projects separately, so there are not as many tools and reference materials to help.\n\n\nBecause projects are built together, boundaries between them are less visible than with other patterns. This may lead to tighter coupling across projects. When this happens, it can be hard to make a small change without affecting many other parts of the codebase, increasing the time and risk of changes.", "Applicability": "The use of this pattern versus one of the alternatives is mostly a matter of preference. It depends on which set of trade-offs you prefer, and on your team''s ability to manage the complexity of cross-project builds.", "Implementation": "Storing all of the projects for the build in a single repository, often called a monorepo, simplifies building them together by integrating code versioning across them.\n\n\nMost software build tools, like Gradle, Make, Maven, MSBuild, and Rake, are used to orchestrate builds across a modest number of projects. Running builds and tests across a very large number of projects can take a long time.\n\n\nParallelization can speed up this process by building and testing multiple projects in different threads, processes, or even across a compute grid. But this requires more compute resources.\n\n\nA better way to optimize large-scale builds is using a directed graph to limit building and testing to the parts of the codebase that have changed. Done well, this should reduce the time needed to build and test after a commit so that it only takes a little longer than running a build for separate projects.\n\n\nThere are several specialized build tools designed to handle very large-scale, multiproject builds. Most of these were inspired by internal tools created at Google and Facebook. Some of these tools include Bazel, Buck, Pants, and Please."}', '66540853-0299-4815-ac1b-6d2d1ba369d0', NULL);


--
-- TOC entry 3239 (class 0 OID 16421)
-- Dependencies: 210
-- Data for Name: design_model_pattern_instance; Type: TABLE DATA; Schema: public; Owner: patternatlas
--

INSERT INTO public.design_model_pattern_instance VALUES ('45c1239f-f6c9-4960-b313-a75f47fc964d', '89dd6672-dd42-470b-8e84-129e4ec7540c', '31694712-1496-4efb-9992-6c8ebebadfa4', NULL, NULL, -80.84001505374908, -71.88192176818848, NULL, NULL);
INSERT INTO public.design_model_pattern_instance VALUES ('08c86128-c3e6-49ac-ab95-4599af87ef3d', '9c49472d-47fc-417e-b75a-512d57e76870', '31694712-1496-4efb-9992-6c8ebebadfa4', NULL, NULL, 338.3240604400635, -72.30349206924438, NULL, NULL);
INSERT INTO public.design_model_pattern_instance VALUES ('ed67648b-9fa5-4147-8f2a-6c082d72b60a', '28343b10-ce82-4c1f-aef2-f7d95316b48e', '31694712-1496-4efb-9992-6c8ebebadfa4', NULL, NULL, 554.8635559082031, -0.7007060050964355, NULL, NULL);
INSERT INTO public.design_model_pattern_instance VALUES ('e5e37e9b-5db9-4105-b7f6-40389b7b4e4e', '3953e924-30f6-4561-8e02-e761b417c1d4', '31694712-1496-4efb-9992-6c8ebebadfa4', NULL, NULL, -275.5931625366211, -218.92538452148438, NULL, NULL);
INSERT INTO public.design_model_pattern_instance VALUES ('057355c9-c130-4aff-bf45-42ef09c811e7', '3953e924-30f6-4561-8e02-e761b417c1d4', '31694712-1496-4efb-9992-6c8ebebadfa4', NULL, NULL, 563.5260901451111, -218.31475067138672, NULL, NULL);
INSERT INTO public.design_model_pattern_instance VALUES ('567764eb-641a-4d0c-abaa-80f67591ac3f', '3953e924-30f6-4561-8e02-e761b417c1d4', '31694712-1496-4efb-9992-6c8ebebadfa4', NULL, NULL, 476.14769744873047, -161.95494854450226, NULL, NULL);
INSERT INTO public.design_model_pattern_instance VALUES ('cd9873ee-ebd6-47a3-b596-ab023f64b213', 'c12b3086-5fa4-4140-915b-330fbffdfc43', '31694712-1496-4efb-9992-6c8ebebadfa4', NULL, NULL, 128.60872872918844, 161.00473737716675, NULL, NULL);
INSERT INTO public.design_model_pattern_instance VALUES ('a5675128-a8b6-486b-b0e0-106c8a4796d1', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7', '31694712-1496-4efb-9992-6c8ebebadfa4', NULL, NULL, -276.6285734176636, -0.6399638652801514, NULL, NULL);
INSERT INTO public.design_model_pattern_instance VALUES ('64aeaaa1-8bcf-410b-8bf6-db7616745a09', 'a81eb2c5-84ce-4a14-8242-e9ce19532423', '31694712-1496-4efb-9992-6c8ebebadfa4', NULL, NULL, 38.47888660430908, -218.96317100524902, NULL, NULL);
INSERT INTO public.design_model_pattern_instance VALUES ('8867a184-68f5-4c04-a2ce-801c3d898fef', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7', '31694712-1496-4efb-9992-6c8ebebadfa4', NULL, NULL, 128.3186912536621, -0.7441442012786865, NULL, NULL);


--
-- TOC entry 3238 (class 0 OID 16415)
-- Dependencies: 209
-- Data for Name: design_model_pattern_edge; Type: TABLE DATA; Schema: public; Owner: patternatlas
--

INSERT INTO public.design_model_pattern_edge VALUES ('e5e37e9b-5db9-4105-b7f6-40389b7b4e4e', 'a5675128-a8b6-486b-b0e0-106c8a4796d1', '31694712-1496-4efb-9992-6c8ebebadfa4', 'send', NULL, true);
INSERT INTO public.design_model_pattern_edge VALUES ('45c1239f-f6c9-4960-b313-a75f47fc964d', 'a5675128-a8b6-486b-b0e0-106c8a4796d1', '31694712-1496-4efb-9992-6c8ebebadfa4', 'receive', NULL, true);
INSERT INTO public.design_model_pattern_edge VALUES ('45c1239f-f6c9-4960-b313-a75f47fc964d', '8867a184-68f5-4c04-a2ce-801c3d898fef', '31694712-1496-4efb-9992-6c8ebebadfa4', 'send', NULL, true);
INSERT INTO public.design_model_pattern_edge VALUES ('08c86128-c3e6-49ac-ab95-4599af87ef3d', '8867a184-68f5-4c04-a2ce-801c3d898fef', '31694712-1496-4efb-9992-6c8ebebadfa4', 'receive', NULL, true);
INSERT INTO public.design_model_pattern_edge VALUES ('08c86128-c3e6-49ac-ab95-4599af87ef3d', 'ed67648b-9fa5-4147-8f2a-6c082d72b60a', '31694712-1496-4efb-9992-6c8ebebadfa4', 'publish', NULL, true);
INSERT INTO public.design_model_pattern_edge VALUES ('567764eb-641a-4d0c-abaa-80f67591ac3f', 'ed67648b-9fa5-4147-8f2a-6c082d72b60a', '31694712-1496-4efb-9992-6c8ebebadfa4', 'subscribe', NULL, true);
INSERT INTO public.design_model_pattern_edge VALUES ('057355c9-c130-4aff-bf45-42ef09c811e7', 'ed67648b-9fa5-4147-8f2a-6c082d72b60a', '31694712-1496-4efb-9992-6c8ebebadfa4', 'subscribe', NULL, true);
INSERT INTO public.design_model_pattern_edge VALUES ('a5675128-a8b6-486b-b0e0-106c8a4796d1', 'cd9873ee-ebd6-47a3-b596-ab023f64b213', '31694712-1496-4efb-9992-6c8ebebadfa4', 'hostedOn', NULL, true);
INSERT INTO public.design_model_pattern_edge VALUES ('45c1239f-f6c9-4960-b313-a75f47fc964d', 'cd9873ee-ebd6-47a3-b596-ab023f64b213', '31694712-1496-4efb-9992-6c8ebebadfa4', 'hostedOn', NULL, true);
INSERT INTO public.design_model_pattern_edge VALUES ('8867a184-68f5-4c04-a2ce-801c3d898fef', 'cd9873ee-ebd6-47a3-b596-ab023f64b213', '31694712-1496-4efb-9992-6c8ebebadfa4', 'hostedOn', NULL, true);
INSERT INTO public.design_model_pattern_edge VALUES ('08c86128-c3e6-49ac-ab95-4599af87ef3d', 'cd9873ee-ebd6-47a3-b596-ab023f64b213', '31694712-1496-4efb-9992-6c8ebebadfa4', 'hostedOn', NULL, true);
INSERT INTO public.design_model_pattern_edge VALUES ('ed67648b-9fa5-4147-8f2a-6c082d72b60a', 'cd9873ee-ebd6-47a3-b596-ab023f64b213', '31694712-1496-4efb-9992-6c8ebebadfa4', 'hostedOn', NULL, true);
INSERT INTO public.design_model_pattern_edge VALUES ('e5e37e9b-5db9-4105-b7f6-40389b7b4e4e', '64aeaaa1-8bcf-410b-8bf6-db7616745a09', '31694712-1496-4efb-9992-6c8ebebadfa4', 'hostedOn', NULL, true);


--
-- TOC entry 3266 (class 0 OID 16531)
-- Dependencies: 237
-- Data for Name: undirected_edge; Type: TABLE DATA; Schema: public; Owner: patternatlas
--

INSERT INTO public.undirected_edge VALUES ('0f437930-a6fe-48a6-97b5-68a79b7b0e54', 'null', 'isRelatedTo', '9bcced52-edb3-44a2-a86d-43499ea61289', '50d0b397-d2df-4797-8975-d2526c8cdd63', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('9f8a5c44-5fa8-4802-b47f-142f12dc3f83', 'null', 'isRelatedTo', '50d0b397-d2df-4797-8975-d2526c8cdd63', '801d44ab-fc18-4cc0-8e10-49f2e73b229a', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('8cac72dc-9a43-4e9a-89ec-7f212cde122f', 'null', 'isRelatedTo', 'bace6e02-1e3f-4ddc-9e9a-eb04933fa226', '3b090377-8703-4cf7-9ce8-a432dce76335', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('31246b94-1e03-411e-b12d-5edd2b4c1321', 'null', 'isRelatedTo', 'b9484449-18bd-4667-a9e5-1f6bf66d442d', '3b090377-8703-4cf7-9ce8-a432dce76335', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('81040dab-6c19-4310-9479-efd5232bfc38', 'null', 'isRelatedTo', 'cd686d46-c77f-4c35-8016-f9819282f8a5', '3b090377-8703-4cf7-9ce8-a432dce76335', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('d1ecbdb1-255d-4034-b75b-5c587211ded0', 'null', 'isRelatedTo', 'da2bd135-4ba2-4b98-bb77-c60607402094', 'f675060d-34cd-4af7-abb7-864a8b9adef6', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('8149085a-85dc-4786-8d24-d687de113c37', 'null', 'isRelatedTo', '599e5d49-ede8-489b-bb72-3e41c288ae89', 'f675060d-34cd-4af7-abb7-864a8b9adef6', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('27d7431d-9310-499e-86e3-3ba8d5004e9d', 'null', 'isRelatedTo', 'da2bd135-4ba2-4b98-bb77-c60607402094', '599e5d49-ede8-489b-bb72-3e41c288ae89', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('930152a6-fd5c-4b71-8bb2-1cec3908262e', 'null', 'isRelatedTo', 'f53f1daa-1eda-4fd9-966f-3f14c107930a', '47e05a38-2201-49f2-80e6-17d618ed260f', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('1b9a15e3-55d9-4cc7-81c0-55f00c1bf161', 'null', 'isRelatedTo', 'd6db370c-42eb-414b-80b7-af50c14fb7e4', 'f53f1daa-1eda-4fd9-966f-3f14c107930a', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('d1fd664b-9821-441e-bdb9-08a8dea448a5', 'null', 'isRelatedTo', 'c12b3086-5fa4-4140-915b-330fbffdfc43', '4d153210-05d9-43f0-8560-3c3bd722d8bd', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('a5197092-18cf-4044-8f29-ecbfd8dbb7a8', 'null', 'isRelatedTo', 'a81eb2c5-84ce-4a14-8242-e9ce19532423', '2ee3eb24-165d-46d5-976c-9eb052a1912b', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('a988535c-a6b0-425b-9ccc-195f52000b2b', 'null', 'isRelatedTo', 'b9484449-18bd-4667-a9e5-1f6bf66d442d', '3a1fb1cd-1078-4616-b603-a22c8f9449b2', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('cf3c5ffe-ffeb-4796-8286-dfc50b2d269d', 'null', 'isRelatedTo', '4d153210-05d9-43f0-8560-3c3bd722d8bd', '3a1fb1cd-1078-4616-b603-a22c8f9449b2', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('89458123-000c-4b5b-87d3-97e780fb68a8', 'null', 'isRelatedTo', 'ce95634f-69e0-4f97-a9b6-10bc8364849f', 'e6e239af-3d3a-4dfb-8c84-cbe268ca90d4', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('b899bd56-1cea-4ddd-b3bd-866d6dd0413f', 'null', 'isRelatedTo', '386a4d90-1a3d-427c-96a6-6f1a433daae6', 'ce95634f-69e0-4f97-a9b6-10bc8364849f', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('67e86ec5-d40e-4244-b390-14954d2b4d2f', 'null', 'isRelatedTo', '81dba31f-e19a-4a8b-a07f-e1561fc2ce06', 'ecb7d0a0-72d0-44c3-90dd-5b9af536ebca', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('273b801e-dbc3-48e9-a1c6-249e877b6874', 'null', 'isRelatedTo', '7d2e969e-c266-4a83-85a5-5a07d528c6ef', '0a4ffca5-3b28-4897-9842-295f9bb6bea8', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('1bdbba49-cf89-4029-a1b1-bd650a4dd82e', 'null', 'isRelatedTo', 'b228d692-009d-4122-b617-1a3799a68766', '0a4ffca5-3b28-4897-9842-295f9bb6bea8', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('33ce266d-6877-49ad-a717-0ffbcbbd790a', 'null', 'isRelatedTo', 'f69638dc-6844-415c-a679-d3982c691f38', '0a4ffca5-3b28-4897-9842-295f9bb6bea8', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('029c2b01-b8cd-41e4-a053-9ee1f8a89290', 'null', 'isRelatedTo', '81dba31f-e19a-4a8b-a07f-e1561fc2ce06', '0a4ffca5-3b28-4897-9842-295f9bb6bea8', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('cd67255f-ba2a-4138-86fa-81e100152159', 'null', 'isRelatedTo', 'e6106e4d-46a4-4557-8c2d-009ff7159464', '407ae0d5-e5be-4151-900b-041ed5dfcdbe', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('08833d89-5e88-4d4e-b91b-a1cd3dbc0273', 'null', 'isRelatedTo', '0b5ba218-dcb1-4841-a517-b6010b8a2951', '407ae0d5-e5be-4151-900b-041ed5dfcdbe', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('6a3d8ed4-ac42-4955-ae0e-3fff31e39220', 'null', 'isRelatedTo', 'b228d692-009d-4122-b617-1a3799a68766', '407ae0d5-e5be-4151-900b-041ed5dfcdbe', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('41102771-2520-4103-b284-ae985efd714b', 'null', 'isRelatedTo', 'f69638dc-6844-415c-a679-d3982c691f38', '407ae0d5-e5be-4151-900b-041ed5dfcdbe', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('515e1f6c-1ca7-4e24-a389-8775490741a0', 'null', 'isRelatedTo', '81dba31f-e19a-4a8b-a07f-e1561fc2ce06', '407ae0d5-e5be-4151-900b-041ed5dfcdbe', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('97f657b5-ff97-43ef-b23d-4372a48c1b7c', 'null', 'isRelatedTo', 'e6106e4d-46a4-4557-8c2d-009ff7159464', '81dba31f-e19a-4a8b-a07f-e1561fc2ce06', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('ff9d47de-0237-47fa-8981-7e500101c6df', 'null', 'isRelatedTo', 'e6106e4d-46a4-4557-8c2d-009ff7159464', 'f69638dc-6844-415c-a679-d3982c691f38', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('4476cce4-5925-457d-94a2-098a9d264b0f', 'null', 'isRelatedTo', 'f69638dc-6844-415c-a679-d3982c691f38', 'ecb7d0a0-72d0-44c3-90dd-5b9af536ebca', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('29246825-7454-4fad-93fb-81d844aaf39e', 'null', 'isRelatedTo', '0b5ba218-dcb1-4841-a517-b6010b8a2951', '6d763f90-d7d4-4d58-a82c-09bb68ac6b82', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('986bf6f6-b4fc-4fde-9c01-c937d1b70977', 'null', 'isRelatedTo', '1dafcbc7-f048-4867-ad7f-2d0b40e096e1', 'b228d692-009d-4122-b617-1a3799a68766', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('c68bd118-937a-48dc-9a7f-7e852748dce7', 'null', 'isRelatedTo', '94331ad5-4f67-4183-8fbe-55fe9c542789', 'b228d692-009d-4122-b617-1a3799a68766', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('79a4970d-8fa1-41d1-a0a2-83a8e38d9d26', 'null', 'isRelatedTo', '50d0b397-d2df-4797-8975-d2526c8cdd63', 'b228d692-009d-4122-b617-1a3799a68766', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('e415f150-8b28-4a1c-afb9-28e9d455dd84', 'null', 'isRelatedTo', 'e35d735c-f724-4946-aad9-7fa520d5a843', 'b228d692-009d-4122-b617-1a3799a68766', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('850060ec-484c-46ce-9991-dfd2a018f307', 'null', 'isRelatedTo', 'cd686d46-c77f-4c35-8016-f9819282f8a5', 'b9484449-18bd-4667-a9e5-1f6bf66d442d', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('633d69d5-16f5-4155-96f4-db01949b2e8e', 'null', 'isRelatedTo', '80d829b6-d1ed-40a3-95ea-7e0b34de8eba', 'cd686d46-c77f-4c35-8016-f9819282f8a5', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('33dff06b-c547-4f3e-8c93-d47bb81995c0', 'null', 'isRelatedTo', '5190eb38-48a2-41ee-b85e-dbb3c609ed30', '45fdc628-1914-4b2c-92c4-38f7be3c622a', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('245bb117-4643-4161-a06c-69026cecffea', 'null', 'isRelatedTo', 'da3a0878-df45-4eb1-857e-82e5ae055683', '45fdc628-1914-4b2c-92c4-38f7be3c622a', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('1f34be36-648d-40a6-9430-fd6f7c518979', 'null', 'isRelatedTo', 'da3a0878-df45-4eb1-857e-82e5ae055683', '5190eb38-48a2-41ee-b85e-dbb3c609ed30', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('ea360586-5f5c-4a8f-a45b-59449aea4a0f', 'null', 'isRelatedTo', '4710c428-a004-4da1-98a8-58205e051ec2', '50d0b397-d2df-4797-8975-d2526c8cdd63', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('4b49d641-a86e-40b6-bfd6-289fa1a4e85b', 'null', 'isRelatedTo', 'bace6e02-1e3f-4ddc-9e9a-eb04933fa226', '50d0b397-d2df-4797-8975-d2526c8cdd63', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('8be72075-b1d5-4d04-bc84-fe9bf50d89b0', 'null', 'isRelatedTo', '3d6ef3c9-28dd-4d2f-b006-e3427e24c0b0', '599e5d49-ede8-489b-bb72-3e41c288ae89', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('26a98e21-d111-4010-a5bc-cb1c7277a476', 'null', 'isRelatedTo', '2fb586fd-9982-4f4e-987b-17909069e10e', '10edf46a-113f-4688-9af6-75494b950fbf', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('edf5b534-d4b5-40de-9346-bc43ca6d3540', 'null', 'isRelatedTo', '678a2e5a-697f-4416-afe6-fd18bc935bdc', 'a7bc398e-972a-481f-8c63-b4c5a1b946d9', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('0a867dc3-829f-4972-b492-83d1b8560612', 'null', 'isRelatedTo', 'e35d735c-f724-4946-aad9-7fa520d5a843', '678a2e5a-697f-4416-afe6-fd18bc935bdc', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.undirected_edge VALUES ('2b5764b6-e470-40c9-9ab4-7cbf90e424c3', '" A monolithic stack may be an application group stack that has grown out of control."', 'isRelatedTo', '25ed4f02-2b74-4493-8f85-812c28feb9a8', '66620d74-ebc6-49f5-aafb-5749a8dec5c6', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('edcda528-877f-4bc3-b096-dccf2cd93672', '"Micro stacks are the opposite end of the spectrum from a monolithic stack, where a single stack contains all the infrastructure for a system."', 'cannotBeUsedWith', '3ab1e189-e4a8-4c1c-8a4b-426e07f8a267', '66620d74-ebc6-49f5-aafb-5749a8dec5c6', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('88218b30-869a-441a-9cf0-f5aab380c826', '"Both patterns can be combined to set environment values."', 'canBeUsedWith', '72e1d670-0d69-4f26-98b3-d216a2f00107', '5dc385bb-2691-4f20-86c1-11dad63afd3f', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('7c9b3ab5-8744-4d33-9aa0-49d4306c2476', '"The stack configuration files pattern extracts the parameter values from the script into separate files."', 'isVariationOf', '3339fd4b-158d-4a83-9591-a1dba018e238', 'e7c75a04-f9d3-40e0-aec6-6eabcfbc4aee', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('51f2c681-2c5e-4ea6-afa2-c8ff2a4d4031', '"A wrapper stack is similar to the scripted parameters pattern. The main differences are that it uses your stack tool’s language rather than a separate scripting language and that the infrastructure code is in a separate component."', 'isVariationOf', '3339fd4b-158d-4a83-9591-a1dba018e238', '4c7a0a0f-face-4953-baf5-5cacedd36f0c', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('f25670fd-9c97-4f37-b58e-482253f8f591', '"Defining the commands and parameters to apply stack code for each environment in pipeline configuration is similar to the scripted parameters pattern. The difference is where the scripting lives—in the pipeline configuration versus in script files."', 'isVariationOf', '3339fd4b-158d-4a83-9591-a1dba018e238', '3cbcb60b-853f-46c0-beb7-f63fa6e9bc12', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('1b8a719b-cdcf-40c5-bc07-73e933191198', '"The periodic stack rebuild pattern is a simple tweak to this pattern, tearing the instance down at the end of the working day and building a new one every morning."', 'isVariationOf', '5afb64cd-694b-45f1-bf2c-c371373aaee3', '6c53a774-8c9e-4fb3-9283-454ae5cffcdb', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('af9b3c1b-901f-4660-ae9f-8630e9fbdd80', '"The continuous stack reset pattern is similar, but runs the stack creation and destruction commands out of band from the stage, so the time taken doesn’t affect feedback loops."', 'isVariationOf', '91a39a34-5f79-477a-8bdb-b248ef79b4cc', '9bf3816c-cf1c-4b85-8cc8-f0ae0a8c5d7b', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('8f8d063c-f75f-4686-a640-71bb43d727f2', '"Continuous synchronization is the opposite approach, routinely applying changes to running server instances."', 'isRelatedTo', 'eae90baf-ea92-4a7e-ae12-7f6119cfb376', '2cd1fca5-139f-4159-a040-fd6b59449398', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('fa7761ae-8165-4639-b1ef-130432130528', 'null', 'isAlternativeTo', 'dc9e7d0c-923b-4f29-b118-2a743baab105', '1c3b59e7-7b7f-49eb-8f79-8b5a26212367', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('c616bf23-c513-4ed5-bc69-bdc9c33a13f6', 'null', 'canBeUsedWith', '1c3b59e7-7b7f-49eb-8f79-8b5a26212367', '45559bb5-24ff-4432-9bb1-8802778180cd', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('4261a465-8f07-4ca9-ae16-922d9f2e8894', 'null', 'canBeUsedWith', 'dc9e7d0c-923b-4f29-b118-2a743baab105', '45559bb5-24ff-4432-9bb1-8802778180cd', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('d81d3aaf-bb3d-465b-b57e-191164306ee9', '"An obfuscation module is a facade module that doesn’t hide much, adding complexity without adding much value."', 'isVariationOf', '80945f10-25df-465b-a3aa-38df56adbbac', 'df903950-138e-45ae-8fdd-787dcfdeb5f1', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('70cd14e5-bb7e-4ee0-8cf5-8320a8e3e526', '"A facade module wraps a single infrastructure resource, while a bundle module includes multiple resources, although both are declarative in nature."', 'isVariationOf', '560a18fd-4fe7-49ad-a7d5-20a3011ddb3c', 'df903950-138e-45ae-8fdd-787dcfdeb5f1', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('a043bb2b-83d5-47d2-a252-054969f1333b', '"A spaghetti module is often an attempt at building an infrastructure domain entity using declarative code. It could also be a facade module that people tried to extend to handle different use cases."', 'isRelatedTo', 'df903950-138e-45ae-8fdd-787dcfdeb5f1', '7fdef8d4-e31e-41b6-80a0-caf365ec5247', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('3cfb1d46-d803-4ec7-b181-4c7a9c08721f', '"A spaghetti module is often an attempt at building an infrastructure domain entity using declarative code. It could also be a bundle module that people tried to extend to handle different use cases."', 'isRelatedTo', '560a18fd-4fe7-49ad-a7d5-20a3011ddb3c', '7fdef8d4-e31e-41b6-80a0-caf365ec5247', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('55b079e4-5410-49d1-87fd-a2d3312e2336', '"A bundle module is similar to a domain entity in that it creates a cohesive collection of infrastructure resources. But a bundle module normally creates a fairly static set of resources, without much variation. The mindset of a bundle module is usually bottom-up, starting with the infrastructure resources to create. A domain entity is a top-down approach, starting with what''s required for the use case."', 'isVariationOf', '560a18fd-4fe7-49ad-a7d5-20a3011ddb3c', '87bf22e8-5611-45e4-98f2-0ead82bc1095', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('ab1222de-1dc6-484f-8ff3-2c540b8288e7', '"Most spaghetti modules for infrastructure stacks are a result of pushing declarative code to implement dynamic logic. But sometimes an infrastructure domain entity becomes overly complicated. A domain entity with poor cohesion becomes a spaghetti module."', 'isRelatedTo', '7fdef8d4-e31e-41b6-80a0-caf365ec5247', '87bf22e8-5611-45e4-98f2-0ead82bc1095', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('bdadae1e-a942-4659-a5a5-b59face8e951', '"The resource matching pattern is similar to the stack data lookup pattern. The main difference is that resource matching doesn’t depend on the implementation of the same stack tool across provider and consumer stacks."', 'isVariationOf', 'b9a1279c-9b1a-4966-bde2-2743988dde1b', 'ea97c486-7047-4fb9-97e8-f0a58b072faa', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('5fd19b93-b70f-43cd-9e7a-325f9d401234', '"Both pattern store and retrieve values from a registry. Stack Data Lookup pattern uses data structures specific to the stack management tool, whereas the Integration Registry Lookup pattern uses a general-purpose registry implementation."', 'isVariationOf', 'b9a1279c-9b1a-4966-bde2-2743988dde1b', '89aa9d13-decb-4e49-b738-a97394042eec', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('8de969b9-0494-46bd-98f6-560af837f704', '"Both patterns are essentially the same, in that a stack pulls values from a registry to use in a given stack instance. The only difference is that with the Integration Registry Lookup pattern, the value comes from another stack, and is used explicitly to integrate infrastructure resources between stacks."', 'isVariationOf', 'c0a25c90-aebe-4fbf-8579-358afa157d21', '89aa9d13-decb-4e49-b738-a97394042eec', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('2a8a4b2c-f03d-4a8d-b3db-0946317c5b36', '"The build-time project integration pattern integrates the projects at the beginning, rather than after some delivery activities have already taken place on the separate projects. The apply-time project integration pattern integrates the projects at each delivery stage that uses them together but doesn’t “lock” the versions."', 'isAlternativeTo', '045e55b5-bc6e-4787-adf6-0cacfddfead4', 'de2064d4-c769-409f-92c5-665f6da84635', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('d71c7136-b287-42dd-8a17-fb63e21e95a5', '"The build-time project integration pattern is at the opposite end of the spectrum from this pattern. That pattern integrates projects once, at the beginning of the delivery cycle, rather than each time."', 'isAlternativeTo', 'de2064d4-c769-409f-92c5-665f6da84635', '6e2eacf0-d026-4a00-8ca4-157298b75f0f', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('d92b73fe-7afd-4f04-a178-281d16909567', '"Delivery-time project integration also integrates projects once, but at a point during the delivery cycle rather than at the beginning."', 'isAlternativeTo', '045e55b5-bc6e-4787-adf6-0cacfddfead4', '6e2eacf0-d026-4a00-8ca4-157298b75f0f', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('c87bb066-cef2-4784-af03-40b0b631a51e', 'null', 'isVariationOf', '25ed4f02-2b74-4493-8f85-812c28feb9a8', '80a5a17d-7a99-421c-a743-7ab12c2d727d', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.undirected_edge VALUES ('572bee55-6702-4f65-8ca9-63c152981f6b', 'null', 'isVariationOf', '3ab1e189-e4a8-4c1c-8a4b-426e07f8a267', '80a5a17d-7a99-421c-a743-7ab12c2d727d', '66540853-0299-4815-ac1b-6d2d1ba369d0');


--
-- TOC entry 3240 (class 0 OID 16424)
-- Dependencies: 211
-- Data for Name: design_model_undirected_edge; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3241 (class 0 OID 16427)
-- Dependencies: 212
-- Data for Name: directed_edge; Type: TABLE DATA; Schema: public; Owner: patternatlas
--

INSERT INTO public.directed_edge VALUES ('3878b960-845e-41a6-ab01-79240d89599d', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'f619a8fd-fff8-4981-8947-48ebaaad993c', '36531ec5-477c-4d74-8d84-43276359aa14');
INSERT INTO public.directed_edge VALUES ('1b0e3cb2-d29d-4a61-a01f-54f7c3911d78', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'f619a8fd-fff8-4981-8947-48ebaaad993c', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('f481d599-2c6b-4138-97bc-70d854472d90', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'f619a8fd-fff8-4981-8947-48ebaaad993c', '60e3ca01-0b7a-4785-acd7-3dddad0eea8e');
INSERT INTO public.directed_edge VALUES ('b7e5552a-bbb0-40ce-920e-00a08dda7fdf', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '60e3ca01-0b7a-4785-acd7-3dddad0eea8e', '36531ec5-477c-4d74-8d84-43276359aa14');
INSERT INTO public.directed_edge VALUES ('6932e43a-17b1-4c07-9816-e7712223f478', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '60e3ca01-0b7a-4785-acd7-3dddad0eea8e', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('623d9876-4b91-47b8-b567-6ab5cb584c88', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '60e3ca01-0b7a-4785-acd7-3dddad0eea8e', 'f619a8fd-fff8-4981-8947-48ebaaad993c');
INSERT INTO public.directed_edge VALUES ('5748b652-bc3e-4705-8e98-56f0b51f9073', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '36531ec5-477c-4d74-8d84-43276359aa14', 'f619a8fd-fff8-4981-8947-48ebaaad993c');
INSERT INTO public.directed_edge VALUES ('12750727-5cff-4f5a-9b25-d79dab056f89', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '36531ec5-477c-4d74-8d84-43276359aa14', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('91e5c757-e3a7-42e0-97de-bf3ec1ec1345', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '36531ec5-477c-4d74-8d84-43276359aa14', '60e3ca01-0b7a-4785-acd7-3dddad0eea8e');
INSERT INTO public.directed_edge VALUES ('d5f3943a-e0fb-411e-8278-ea1f95f2f9d6', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26', '36531ec5-477c-4d74-8d84-43276359aa14');
INSERT INTO public.directed_edge VALUES ('52bc67ad-cf74-460c-a14b-057168fc3dd1', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26', 'f619a8fd-fff8-4981-8947-48ebaaad993c');
INSERT INTO public.directed_edge VALUES ('75a746d0-3aea-43d8-8d27-e8f5a672b688', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26', 'c56361d3-4230-4653-942b-fc8ac7488bf9');
INSERT INTO public.directed_edge VALUES ('ba209aa6-6163-4d81-8459-329f0529161f', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('72fbe069-b4bf-488a-9add-9ef081361715', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26', '3953e924-30f6-4561-8e02-e761b417c1d4');
INSERT INTO public.directed_edge VALUES ('8ac818d0-5c68-4c6e-9fea-6cc1900cfd83', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26', '9bafcace-20a3-4726-963b-06d09437c677');
INSERT INTO public.directed_edge VALUES ('8ec9cd9d-9a67-4d46-a4a7-faede50249b7', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2');
INSERT INTO public.directed_edge VALUES ('cf157640-7e49-40e4-ad36-ef7af884660b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26', '60e3ca01-0b7a-4785-acd7-3dddad0eea8e');
INSERT INTO public.directed_edge VALUES ('1a4e9ed1-286c-46d1-9ce2-eb253481635a', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9fee292c-8c59-4a99-a3c2-467717a22c70', 'b5c458ea-3a4e-4211-afc9-82510c2cff46');
INSERT INTO public.directed_edge VALUES ('5b514a1c-7a05-4736-afdc-93ee127ddc40', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9fee292c-8c59-4a99-a3c2-467717a22c70', 'cf3a2b5f-9d7a-4f2c-ba39-ab2911d3a7d7');
INSERT INTO public.directed_edge VALUES ('f22999c3-5b02-4af5-afa6-b7de2fc6ca01', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9fee292c-8c59-4a99-a3c2-467717a22c70', '3e74edee-f076-45b3-8247-a5dd19cb24b2');
INSERT INTO public.directed_edge VALUES ('270a493f-0016-4100-9d8d-fa6d3f752baf', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9fee292c-8c59-4a99-a3c2-467717a22c70', 'ccb661e2-6c0d-4020-9eb2-abd290230b5b');
INSERT INTO public.directed_edge VALUES ('8d8ab79f-56d3-4895-9137-9d1a8b72d9e6', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9fee292c-8c59-4a99-a3c2-467717a22c70', '3953e924-30f6-4561-8e02-e761b417c1d4');
INSERT INTO public.directed_edge VALUES ('a68409ca-65f1-475c-9f72-163090ef5081', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9fee292c-8c59-4a99-a3c2-467717a22c70', '0ee54310-5f4d-4435-9c34-cf93f742e101');
INSERT INTO public.directed_edge VALUES ('f04295e7-b0c1-4981-bd38-cfd5fd66e35c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9fee292c-8c59-4a99-a3c2-467717a22c70', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('98be07f5-e2df-4c3b-866e-bf6f2f574ee6', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9fee292c-8c59-4a99-a3c2-467717a22c70', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.directed_edge VALUES ('61f67322-d918-4452-841d-aa4a62e76d51', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9fee292c-8c59-4a99-a3c2-467717a22c70', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('a480fb8e-fa07-4fa8-bc50-4671161931a0', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c56361d3-4230-4653-942b-fc8ac7488bf9', '98ccd4dc-86a8-4652-b2c1-5b83b6f078e1');
INSERT INTO public.directed_edge VALUES ('ffb5a455-b97a-4a36-9616-0ded53efbc03', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c56361d3-4230-4653-942b-fc8ac7488bf9', '19c5ed05-1a24-4971-9aac-390e1931f010');
INSERT INTO public.directed_edge VALUES ('54724df3-d445-4d5a-8ef3-ad878ae0378d', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c56361d3-4230-4653-942b-fc8ac7488bf9', 'b14e9775-09ad-4019-b5db-dd9670221679');
INSERT INTO public.directed_edge VALUES ('96ffe0f4-9339-431b-a445-2e2bc310e31e', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c56361d3-4230-4653-942b-fc8ac7488bf9', 'f3afc386-7c81-41d1-9b94-a06a49deb965');
INSERT INTO public.directed_edge VALUES ('ed759af2-d877-405a-b0a4-e980c8d506e1', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c56361d3-4230-4653-942b-fc8ac7488bf9', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('9d8f4e2d-62d4-42a2-9b24-56b8e0ff3fee', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c56361d3-4230-4653-942b-fc8ac7488bf9', 'c34d4c11-da4f-445d-8682-1c92dcfbb6be');
INSERT INTO public.directed_edge VALUES ('bb244cf8-b91f-4e25-b443-823e3d2be42b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c56361d3-4230-4653-942b-fc8ac7488bf9', 'acb053d6-b8be-4bce-b62d-3a8aa10b9a0d');
INSERT INTO public.directed_edge VALUES ('e188b39a-c194-4418-9c66-d4f232b219bd', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c56361d3-4230-4653-942b-fc8ac7488bf9', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('da71d0f9-ff54-4c0a-ad32-b1b3199cfc04', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c56361d3-4230-4653-942b-fc8ac7488bf9', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a');
INSERT INTO public.directed_edge VALUES ('f4e08542-a990-44f5-93f2-69ab39ea0233', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '1a1b9319-e303-431d-91c3-f4a3b6189982', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8');
INSERT INTO public.directed_edge VALUES ('8163f357-c2d9-453f-ab9a-6cf4b1928ea8', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '1a1b9319-e303-431d-91c3-f4a3b6189982', '26bc2583-1c9f-4d6e-9968-e5aa0e8ab82f');
INSERT INTO public.directed_edge VALUES ('1577f4a1-f497-4e49-a05f-064ad2340b4b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '1a1b9319-e303-431d-91c3-f4a3b6189982', '87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65');
INSERT INTO public.directed_edge VALUES ('1463ded0-0ac3-47f3-a974-1335dade3479', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '1a1b9319-e303-431d-91c3-f4a3b6189982', '9c49472d-47fc-417e-b75a-512d57e76870');
INSERT INTO public.directed_edge VALUES ('5f861032-6ddd-4349-b6c5-af8a4bc576b2', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '1a1b9319-e303-431d-91c3-f4a3b6189982', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('12b0bca5-dee8-4877-b118-09860bb627ec', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '1a1b9319-e303-431d-91c3-f4a3b6189982', '9bafcace-20a3-4726-963b-06d09437c677');
INSERT INTO public.directed_edge VALUES ('33809ff6-d500-4258-bd8f-924a09afe78c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '1a1b9319-e303-431d-91c3-f4a3b6189982', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('b1ea0171-f832-402e-9d1f-9cb1bd3ca534', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '1a1b9319-e303-431d-91c3-f4a3b6189982', '02fc1261-b7d6-4d85-89ef-c987ab92f3d4');
INSERT INTO public.directed_edge VALUES ('a9f02713-b90c-4d90-b035-3018e06f0c6d', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '1a1b9319-e303-431d-91c3-f4a3b6189982', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.directed_edge VALUES ('fd53b1a1-5e22-4b40-b798-01e049989cb6', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '1a1b9319-e303-431d-91c3-f4a3b6189982', '8c047398-63a1-4940-a5c5-c44834f48516');
INSERT INTO public.directed_edge VALUES ('f1dad4b9-ca8a-4b8f-964f-8597734eac60', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '1a1b9319-e303-431d-91c3-f4a3b6189982', '5778b4ba-4acd-4c94-9c10-d83d80f75d50');
INSERT INTO public.directed_edge VALUES ('9c469823-2cbe-43b3-b4f4-0b5a382849e9', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '1a1b9319-e303-431d-91c3-f4a3b6189982', 'a2b0eaca-aa24-4036-b730-265a97043b75');
INSERT INTO public.directed_edge VALUES ('0b542913-643e-4c0a-b95b-250e5a670e1c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9bafcace-20a3-4726-963b-06d09437c677', 'b5c458ea-3a4e-4211-afc9-82510c2cff46');
INSERT INTO public.directed_edge VALUES ('062acabd-fb95-45a7-a623-3a400563f3d9', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9bafcace-20a3-4726-963b-06d09437c677', 'd89d5a40-b864-4d97-9b44-211ed25c4f98');
INSERT INTO public.directed_edge VALUES ('12dfa380-5e40-442a-b518-9954217b22f5', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9bafcace-20a3-4726-963b-06d09437c677', '712b29e2-411b-4ef8-8f81-6cae15222c07');
INSERT INTO public.directed_edge VALUES ('ce7272ef-1d37-4053-b1a9-6f5db079f26b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9bafcace-20a3-4726-963b-06d09437c677', 'cf3a2b5f-9d7a-4f2c-ba39-ab2911d3a7d7');
INSERT INTO public.directed_edge VALUES ('6bca1072-df14-481e-a23a-65479be61d09', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9bafcace-20a3-4726-963b-06d09437c677', 'be9c4245-79db-40cd-a0d4-c750c3a822b6');
INSERT INTO public.directed_edge VALUES ('048e025b-5578-49ba-8640-e9e404cff49c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9bafcace-20a3-4726-963b-06d09437c677', '9c49472d-47fc-417e-b75a-512d57e76870');
INSERT INTO public.directed_edge VALUES ('b7b90e9a-e82d-4f95-a8b6-4448a50c7417', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9bafcace-20a3-4726-963b-06d09437c677', 'c56361d3-4230-4653-942b-fc8ac7488bf9');
INSERT INTO public.directed_edge VALUES ('208b6db4-c8a0-48b7-8451-07154a6cee32', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9bafcace-20a3-4726-963b-06d09437c677', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('87812fe1-fb02-41d7-8d11-f63085e3d5b2', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9bafcace-20a3-4726-963b-06d09437c677', '84c81b22-765b-4edb-a6e7-c626151e0af8');
INSERT INTO public.directed_edge VALUES ('4f61344b-6dd4-410e-83ac-8a380b74dd1b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9bafcace-20a3-4726-963b-06d09437c677', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2');
INSERT INTO public.directed_edge VALUES ('d5b3460c-6855-4d92-a318-ab8038099197', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9bafcace-20a3-4726-963b-06d09437c677', '1a1b9319-e303-431d-91c3-f4a3b6189982');
INSERT INTO public.directed_edge VALUES ('77c0eaf9-b4e8-42d3-80f8-bcf0c0d3f306', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9bafcace-20a3-4726-963b-06d09437c677', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('e759dbcc-64df-4ad2-b054-e86479e09684', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9bafcace-20a3-4726-963b-06d09437c677', 'a2b0eaca-aa24-4036-b730-265a97043b75');
INSERT INTO public.directed_edge VALUES ('031dae7c-bf02-4bdf-b5e4-00397ef33bc4', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2', '98ccd4dc-86a8-4652-b2c1-5b83b6f078e1');
INSERT INTO public.directed_edge VALUES ('ad02e0b7-94f1-4541-a942-f6692f12bb08', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2', 'b5c458ea-3a4e-4211-afc9-82510c2cff46');
INSERT INTO public.directed_edge VALUES ('b1054500-0d1b-4424-9a25-8a48d7232389', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2', '26bc2583-1c9f-4d6e-9968-e5aa0e8ab82f');
INSERT INTO public.directed_edge VALUES ('f2156a12-2892-4c13-b41e-6de422b88eb1', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2', 'b3418862-26a6-4bbb-b546-c12f48c45b16');
INSERT INTO public.directed_edge VALUES ('bc8eabaf-3e4f-4185-8366-49671dd0ac8c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('5c192ee8-8c0e-4534-a232-72180c68ba80', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2', '3953e924-30f6-4561-8e02-e761b417c1d4');
INSERT INTO public.directed_edge VALUES ('06d79bf4-21a2-4b95-9f08-ee51344bd5ff', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2', '9bafcace-20a3-4726-963b-06d09437c677');
INSERT INTO public.directed_edge VALUES ('feb722a0-9943-40a1-8e1a-7025c069088c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2');
INSERT INTO public.directed_edge VALUES ('0a143b73-8e5f-41fc-b4ac-5128fd6714e4', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2', 'adcaac7d-a028-4d33-9111-ef3e711637e7');
INSERT INTO public.directed_edge VALUES ('3a8972a1-f838-4c0f-ae30-c0814d59a893', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2', '89dd6672-dd42-470b-8e84-129e4ec7540c');
INSERT INTO public.directed_edge VALUES ('e7c08909-f9d8-4329-b296-6a6773f6f424', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2', '1a1b9319-e303-431d-91c3-f4a3b6189982');
INSERT INTO public.directed_edge VALUES ('909a8277-7d07-45a0-abe7-530ff30e5b9a', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3953e924-30f6-4561-8e02-e761b417c1d4', 'b5c458ea-3a4e-4211-afc9-82510c2cff46');
INSERT INTO public.directed_edge VALUES ('20f5b523-6a2c-4c9c-8386-ecf29541ce4e', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3953e924-30f6-4561-8e02-e761b417c1d4', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('a42b0d4f-409f-4203-b709-eb567a04d9a0', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3953e924-30f6-4561-8e02-e761b417c1d4', '7c775873-1ebf-4574-8cb1-29b0c661b8f3');
INSERT INTO public.directed_edge VALUES ('7c245f60-ffa3-4bcf-a00b-8cc01cba8e5a', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3953e924-30f6-4561-8e02-e761b417c1d4', '0ee54310-5f4d-4435-9c34-cf93f742e101');
INSERT INTO public.directed_edge VALUES ('f4cdd365-f06c-448b-a834-4f4f40578b08', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3953e924-30f6-4561-8e02-e761b417c1d4', '9167d0da-69ec-40a5-b7f8-5eab25833d70');
INSERT INTO public.directed_edge VALUES ('4ceb7f5e-d48a-42de-8bd8-f68e9150ba13', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3953e924-30f6-4561-8e02-e761b417c1d4', '02fc1261-b7d6-4d85-89ef-c987ab92f3d4');
INSERT INTO public.directed_edge VALUES ('b2af6184-3d1c-4e10-b5bf-76cedd797ce0', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2', '60e3ca01-0b7a-4785-acd7-3dddad0eea8e');
INSERT INTO public.directed_edge VALUES ('b813ea54-df99-4af4-9bb9-b59499772704', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2', '6c3f4121-65c2-444e-9d5a-f16f47fd2ed5');
INSERT INTO public.directed_edge VALUES ('4f3af752-43b9-4978-b849-a96df5d3a910', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3953e924-30f6-4561-8e02-e761b417c1d4', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8');
INSERT INTO public.directed_edge VALUES ('075a2137-73eb-4ff8-a76b-b800f1f8c616', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3953e924-30f6-4561-8e02-e761b417c1d4', 'ca07715c-696e-4a62-af10-74145ff818f5');
INSERT INTO public.directed_edge VALUES ('08802442-ef21-4eb5-b640-f0683da56d9d', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3953e924-30f6-4561-8e02-e761b417c1d4', '87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65');
INSERT INTO public.directed_edge VALUES ('3e046ee3-d639-4798-b1cb-eaf12532b60e', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3953e924-30f6-4561-8e02-e761b417c1d4', '06c5d5cc-5c29-4a74-be75-dfba20cc4f80');
INSERT INTO public.directed_edge VALUES ('9762f56d-d120-4254-b117-bdf8af9f4382', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3953e924-30f6-4561-8e02-e761b417c1d4', 'c56361d3-4230-4653-942b-fc8ac7488bf9');
INSERT INTO public.directed_edge VALUES ('ded3a386-c69c-4ae9-b6a7-ac8dca70a1d7', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3953e924-30f6-4561-8e02-e761b417c1d4', '29acda13-a41f-4270-9248-375814889f20');
INSERT INTO public.directed_edge VALUES ('55db5b81-9b8a-4bdc-94ae-ff49c5fa02ea', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3953e924-30f6-4561-8e02-e761b417c1d4', '78b58f38-9075-44a1-8eb4-5ab0ba4b801d');
INSERT INTO public.directed_edge VALUES ('c690ac44-4a9a-42ce-9976-e189b5966260', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3953e924-30f6-4561-8e02-e761b417c1d4', 'a2b0eaca-aa24-4036-b730-265a97043b75');
INSERT INTO public.directed_edge VALUES ('2c6d5252-5b4c-4086-8d9f-a6182c964e73', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7', '19c5ed05-1a24-4971-9aac-390e1931f010');
INSERT INTO public.directed_edge VALUES ('485abde8-0d9c-4d52-ae6d-d1ce0499935c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8');
INSERT INTO public.directed_edge VALUES ('944cb2b1-f6ac-4d85-83f0-b873689b9e8c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7', 'b14e9775-09ad-4019-b5db-dd9670221679');
INSERT INTO public.directed_edge VALUES ('e4ca8a1e-1b58-430e-a9b7-b30b13b68c48', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7', 'c56361d3-4230-4653-942b-fc8ac7488bf9');
INSERT INTO public.directed_edge VALUES ('468c7d7a-7a93-44f1-9837-00f8af6b8b80', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('0f424906-a25c-4854-91dc-19c3a8f67c3d', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('95356799-0b0c-4c70-b874-259560649466', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('b0d6f39e-1547-479f-b0f3-a74cb32358b0', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a');
INSERT INTO public.directed_edge VALUES ('67beca79-2f67-4383-a080-19dff22e3ead', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '28343b10-ce82-4c1f-aef2-f7d95316b48e', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8');
INSERT INTO public.directed_edge VALUES ('024398cc-2d0b-41ab-bea3-efef33369851', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '28343b10-ce82-4c1f-aef2-f7d95316b48e', 'ca07715c-696e-4a62-af10-74145ff818f5');
INSERT INTO public.directed_edge VALUES ('45488177-e578-4380-b530-9afb3cb61909', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '28343b10-ce82-4c1f-aef2-f7d95316b48e', 'f3afc386-7c81-41d1-9b94-a06a49deb965');
INSERT INTO public.directed_edge VALUES ('67f442dd-b1e9-40b1-a247-d7f2052e71ff', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '28343b10-ce82-4c1f-aef2-f7d95316b48e', 'c56361d3-4230-4653-942b-fc8ac7488bf9');
INSERT INTO public.directed_edge VALUES ('eee01ae4-a4a0-49ee-a85c-c6935bc6a1db', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '28343b10-ce82-4c1f-aef2-f7d95316b48e', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('76e8bafa-ef9b-460b-aef9-f504e5161557', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '28343b10-ce82-4c1f-aef2-f7d95316b48e', '26c8f1cb-a592-415e-846e-22f2ee761c8f');
INSERT INTO public.directed_edge VALUES ('dcdfbb91-4103-4919-aa84-b5c1f429afd4', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '28343b10-ce82-4c1f-aef2-f7d95316b48e', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('3359857b-da33-4c83-964c-3005686fa5ce', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '28343b10-ce82-4c1f-aef2-f7d95316b48e', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.directed_edge VALUES ('af03242d-3dfc-4dcf-86fa-375ec79adf20', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '28343b10-ce82-4c1f-aef2-f7d95316b48e', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a');
INSERT INTO public.directed_edge VALUES ('0074dbed-836c-476d-bf49-c24a04575af5', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'cf3a2b5f-9d7a-4f2c-ba39-ab2911d3a7d7', '98ccd4dc-86a8-4652-b2c1-5b83b6f078e1');
INSERT INTO public.directed_edge VALUES ('ee43e604-a142-486d-ae10-db3599e02a9c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'cf3a2b5f-9d7a-4f2c-ba39-ab2911d3a7d7', '19c5ed05-1a24-4971-9aac-390e1931f010');
INSERT INTO public.directed_edge VALUES ('dccd618a-ac9f-4f2e-8050-a0115dce8169', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'cf3a2b5f-9d7a-4f2c-ba39-ab2911d3a7d7', '01d63259-109f-4136-878d-77e503ac8a11');
INSERT INTO public.directed_edge VALUES ('f2e86c91-9d6d-47c9-9ca8-a47130d261d5', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'cf3a2b5f-9d7a-4f2c-ba39-ab2911d3a7d7', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('d4649492-84b0-4625-a872-bfcc7f3e5f7e', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'cf3a2b5f-9d7a-4f2c-ba39-ab2911d3a7d7', '7c775873-1ebf-4574-8cb1-29b0c661b8f3');
INSERT INTO public.directed_edge VALUES ('5ba41ca0-704d-4779-9d95-b991148723ad', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'cf3a2b5f-9d7a-4f2c-ba39-ab2911d3a7d7', '0ee54310-5f4d-4435-9c34-cf93f742e101');
INSERT INTO public.directed_edge VALUES ('760b5fe8-a464-43f3-9cac-c15398ca722f', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'cf3a2b5f-9d7a-4f2c-ba39-ab2911d3a7d7', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('5a7a0dac-0a4d-4389-bdb1-ac6bbe998426', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3e74edee-f076-45b3-8247-a5dd19cb24b2', '19c5ed05-1a24-4971-9aac-390e1931f010');
INSERT INTO public.directed_edge VALUES ('3ec33b7a-03ba-4a96-99a5-57a58991db75', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3e74edee-f076-45b3-8247-a5dd19cb24b2', '330ba4a6-411d-4d44-913a-2805a9f21cf7');
INSERT INTO public.directed_edge VALUES ('68dc8139-97f2-4f25-b501-801104d92c0f', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3e74edee-f076-45b3-8247-a5dd19cb24b2', 'cf3a2b5f-9d7a-4f2c-ba39-ab2911d3a7d7');
INSERT INTO public.directed_edge VALUES ('9639a0d5-6670-4dad-896b-7488cdba76fc', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3e74edee-f076-45b3-8247-a5dd19cb24b2', '78185c7d-f353-49ee-b1e2-c2a0bcfc4ed2');
INSERT INTO public.directed_edge VALUES ('69a303d0-e373-4449-ba73-f7c5968c72d8', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3e74edee-f076-45b3-8247-a5dd19cb24b2', 'c56361d3-4230-4653-942b-fc8ac7488bf9');
INSERT INTO public.directed_edge VALUES ('22934057-246b-49e1-aa98-7fe87204a95b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3e74edee-f076-45b3-8247-a5dd19cb24b2', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('c7f36611-22ac-4d15-bcb6-67dbf34799db', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3e74edee-f076-45b3-8247-a5dd19cb24b2', 'acb053d6-b8be-4bce-b62d-3a8aa10b9a0d');
INSERT INTO public.directed_edge VALUES ('7af7d3d8-b3dc-4228-86d3-3d7f4b3ebb7a', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3e74edee-f076-45b3-8247-a5dd19cb24b2', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('5eaf77e8-4f15-44bf-9e36-147443aed258', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3e74edee-f076-45b3-8247-a5dd19cb24b2', '9167d0da-69ec-40a5-b7f8-5eab25833d70');
INSERT INTO public.directed_edge VALUES ('5ed7a426-8406-4d86-a1a3-4cf70c59a5d3', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3e74edee-f076-45b3-8247-a5dd19cb24b2', '02fc1261-b7d6-4d85-89ef-c987ab92f3d4');
INSERT INTO public.directed_edge VALUES ('4ddb8cbf-b101-4f8f-81e5-66b53786e126', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '3e74edee-f076-45b3-8247-a5dd19cb24b2', 'ea7c0692-6545-40e3-8cf8-f4c828c5fce8');
INSERT INTO public.directed_edge VALUES ('8abd94ed-0921-47ca-9fc5-f03573644e7e', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '78185c7d-f353-49ee-b1e2-c2a0bcfc4ed2', '3e74edee-f076-45b3-8247-a5dd19cb24b2');
INSERT INTO public.directed_edge VALUES ('66e432a1-ef36-4bd3-a195-712c54055c47', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '78185c7d-f353-49ee-b1e2-c2a0bcfc4ed2', 'c34d4c11-da4f-445d-8682-1c92dcfbb6be');
INSERT INTO public.directed_edge VALUES ('120e156c-a355-4b8d-8655-d38b92437764', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '78185c7d-f353-49ee-b1e2-c2a0bcfc4ed2', '0ee54310-5f4d-4435-9c34-cf93f742e101');
INSERT INTO public.directed_edge VALUES ('a891b852-9f13-4ac1-8d95-01b6b43e5350', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '78185c7d-f353-49ee-b1e2-c2a0bcfc4ed2', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('567cc248-6cc2-4dca-afc2-da44c9e6520f', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '96ec8c86-c024-4d03-a283-49375e43e086', 'ca07715c-696e-4a62-af10-74145ff818f5');
INSERT INTO public.directed_edge VALUES ('7d35085e-e9d5-4551-b5bb-39d85ff867d0', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '96ec8c86-c024-4d03-a283-49375e43e086', 'f3afc386-7c81-41d1-9b94-a06a49deb965');
INSERT INTO public.directed_edge VALUES ('c8cbebc0-5251-4a19-9bbd-90242d3456d5', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '96ec8c86-c024-4d03-a283-49375e43e086', 'c34d4c11-da4f-445d-8682-1c92dcfbb6be');
INSERT INTO public.directed_edge VALUES ('5282fbe9-dcd3-4817-b644-8419e0a36579', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '96ec8c86-c024-4d03-a283-49375e43e086', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('8d36e9ce-0fca-4265-b575-a2990d7a8c65', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '96ec8c86-c024-4d03-a283-49375e43e086', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.directed_edge VALUES ('ef28111d-54b6-4db7-95a6-b18c5c6e6b34', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '96ec8c86-c024-4d03-a283-49375e43e086', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('6369cab9-e042-44e5-80ad-e47f864010bc', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '96ec8c86-c024-4d03-a283-49375e43e086', 'a2b0eaca-aa24-4036-b730-265a97043b75');
INSERT INTO public.directed_edge VALUES ('6e469e63-e595-4088-be37-34a2d09324cf', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b5c458ea-3a4e-4211-afc9-82510c2cff46', '98ccd4dc-86a8-4652-b2c1-5b83b6f078e1');
INSERT INTO public.directed_edge VALUES ('1f6b0aa7-5266-40fd-8ba6-da940a1a05a4', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b5c458ea-3a4e-4211-afc9-82510c2cff46', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('29342815-7d4f-4550-a051-821957b80ce4', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b5c458ea-3a4e-4211-afc9-82510c2cff46', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2');
INSERT INTO public.directed_edge VALUES ('7b4036d2-84ad-42ef-9ec8-ed6ba563c39f', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b5c458ea-3a4e-4211-afc9-82510c2cff46', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('912ea9c5-db2a-49cb-a861-cf4cd7a1d61c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b5c458ea-3a4e-4211-afc9-82510c2cff46', 'adcaac7d-a028-4d33-9111-ef3e711637e7');
INSERT INTO public.directed_edge VALUES ('818f313d-e913-41b3-a983-aa3b5fcf8102', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b5c458ea-3a4e-4211-afc9-82510c2cff46', 'a2b0eaca-aa24-4036-b730-265a97043b75');
INSERT INTO public.directed_edge VALUES ('09ae16e4-c810-4634-a61c-d343836cecbb', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'adcaac7d-a028-4d33-9111-ef3e711637e7', 'b5c458ea-3a4e-4211-afc9-82510c2cff46');
INSERT INTO public.directed_edge VALUES ('3a5b7ba2-2956-4768-9f2e-69fd28548cd7', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'adcaac7d-a028-4d33-9111-ef3e711637e7', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('c272cfb5-d1dd-4d8c-8aff-f420650f4a60', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'adcaac7d-a028-4d33-9111-ef3e711637e7', '3953e924-30f6-4561-8e02-e761b417c1d4');
INSERT INTO public.directed_edge VALUES ('64c04a48-51b1-4d15-8b40-e72c2c66458b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'adcaac7d-a028-4d33-9111-ef3e711637e7', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('a687544c-f44f-4174-9550-d0d179728e69', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ccb661e2-6c0d-4020-9eb2-abd290230b5b', '98ccd4dc-86a8-4652-b2c1-5b83b6f078e1');
INSERT INTO public.directed_edge VALUES ('d0578489-5fd7-46b8-bee4-b8cc0f53690f', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ccb661e2-6c0d-4020-9eb2-abd290230b5b', 'b5c458ea-3a4e-4211-afc9-82510c2cff46');
INSERT INTO public.directed_edge VALUES ('b0bba87c-261c-4122-9d29-34bb1fe7cac8', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ccb661e2-6c0d-4020-9eb2-abd290230b5b', '19c5ed05-1a24-4971-9aac-390e1931f010');
INSERT INTO public.directed_edge VALUES ('8b6d201c-17df-43e4-8e00-c9cccfe0d6f2', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '19c5ed05-1a24-4971-9aac-390e1931f010', '36531ec5-477c-4d74-8d84-43276359aa14');
INSERT INTO public.directed_edge VALUES ('90dc3acf-d655-4e5e-9715-0eb5398a177e', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '19c5ed05-1a24-4971-9aac-390e1931f010', 'c56361d3-4230-4653-942b-fc8ac7488bf9');
INSERT INTO public.directed_edge VALUES ('648b1a03-b142-4c62-9222-99d0ab5d3d8e', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '19c5ed05-1a24-4971-9aac-390e1931f010', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('fce69552-504f-47e2-90e6-07dd5a8bf477', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '19c5ed05-1a24-4971-9aac-390e1931f010', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('3dad1fee-848e-4e7d-8584-f2f5142d95a7', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '19c5ed05-1a24-4971-9aac-390e1931f010', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.directed_edge VALUES ('8d423e00-ebbf-4911-9b98-c27c4659616c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b14e9775-09ad-4019-b5db-dd9670221679', '19c5ed05-1a24-4971-9aac-390e1931f010');
INSERT INTO public.directed_edge VALUES ('f9f09db5-7191-437d-84f0-5b3a604a0c11', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b14e9775-09ad-4019-b5db-dd9670221679', '36531ec5-477c-4d74-8d84-43276359aa14');
INSERT INTO public.directed_edge VALUES ('6aa0b062-7259-4b67-9ba5-a5fe2e2280f3', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b14e9775-09ad-4019-b5db-dd9670221679', 'f3afc386-7c81-41d1-9b94-a06a49deb965');
INSERT INTO public.directed_edge VALUES ('46dc2258-1376-40b8-a413-86a11cf35e03', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b14e9775-09ad-4019-b5db-dd9670221679', 'f619a8fd-fff8-4981-8947-48ebaaad993c');
INSERT INTO public.directed_edge VALUES ('e74000b5-faee-492f-b11b-6657c26a6e4d', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b14e9775-09ad-4019-b5db-dd9670221679', '96ec8c86-c024-4d03-a283-49375e43e086');
INSERT INTO public.directed_edge VALUES ('a35e206e-155c-4947-85bf-60288f9cf231', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b14e9775-09ad-4019-b5db-dd9670221679', 'c56361d3-4230-4653-942b-fc8ac7488bf9');
INSERT INTO public.directed_edge VALUES ('4f2ab629-4175-4469-a6f2-39ad5b00d1fe', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b14e9775-09ad-4019-b5db-dd9670221679', 'c34d4c11-da4f-445d-8682-1c92dcfbb6be');
INSERT INTO public.directed_edge VALUES ('40b3511c-32d2-497e-adf3-51048d8abb35', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b14e9775-09ad-4019-b5db-dd9670221679', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('43ffdd2e-0255-4ab7-9ef9-8c6a53882317', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b14e9775-09ad-4019-b5db-dd9670221679', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.directed_edge VALUES ('3cb52012-871a-4f4f-bbe8-185bcb5dd43d', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b14e9775-09ad-4019-b5db-dd9670221679', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('18be7f02-98a3-4bd4-9a7c-8025c4a7e77b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b14e9775-09ad-4019-b5db-dd9670221679', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a');
INSERT INTO public.directed_edge VALUES ('3d676477-e98b-450d-8b98-a936b892a307', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b14e9775-09ad-4019-b5db-dd9670221679', '60e3ca01-0b7a-4785-acd7-3dddad0eea8e');
INSERT INTO public.directed_edge VALUES ('026f7673-c012-4688-9a90-0db35e966cff', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'f3afc386-7c81-41d1-9b94-a06a49deb965', '19c5ed05-1a24-4971-9aac-390e1931f010');
INSERT INTO public.directed_edge VALUES ('5cc1c9d4-c97a-4df9-bc10-e534fd6603cb', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'f3afc386-7c81-41d1-9b94-a06a49deb965', 'b14e9775-09ad-4019-b5db-dd9670221679');
INSERT INTO public.directed_edge VALUES ('87369965-ada4-49a3-bc07-00d8de9912b9', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'f3afc386-7c81-41d1-9b94-a06a49deb965', 'ca07715c-696e-4a62-af10-74145ff818f5');
INSERT INTO public.directed_edge VALUES ('bd954bdf-e69b-4fec-a3b3-9e320b76b8a7', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'f3afc386-7c81-41d1-9b94-a06a49deb965', '36531ec5-477c-4d74-8d84-43276359aa14');
INSERT INTO public.directed_edge VALUES ('e2ec377c-9ec0-4fb6-b0fe-309e1cb8c054', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'f3afc386-7c81-41d1-9b94-a06a49deb965', '96ec8c86-c024-4d03-a283-49375e43e086');
INSERT INTO public.directed_edge VALUES ('2247d967-32fa-43e7-b493-109f86e4a50d', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'f3afc386-7c81-41d1-9b94-a06a49deb965', 'c56361d3-4230-4653-942b-fc8ac7488bf9');
INSERT INTO public.directed_edge VALUES ('146a8f5f-48eb-4d75-9d35-1306ede91d9f', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'f3afc386-7c81-41d1-9b94-a06a49deb965', 'c34d4c11-da4f-445d-8682-1c92dcfbb6be');
INSERT INTO public.directed_edge VALUES ('952a3233-018f-40a6-8d0e-b0a6556a23e9', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'f3afc386-7c81-41d1-9b94-a06a49deb965', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('5704a16e-f514-4d71-b261-8948ee085a5c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'f3afc386-7c81-41d1-9b94-a06a49deb965', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.directed_edge VALUES ('90fb15f7-f194-476d-85ec-42cffdb26ec7', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'f3afc386-7c81-41d1-9b94-a06a49deb965', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('5260c21f-026c-4040-beba-36ca7e16e437', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a', '19c5ed05-1a24-4971-9aac-390e1931f010');
INSERT INTO public.directed_edge VALUES ('bc6560a6-4450-4a95-a140-9da12216d966', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a', '330ba4a6-411d-4d44-913a-2805a9f21cf7');
INSERT INTO public.directed_edge VALUES ('e74eb56d-7d3b-406e-a380-9803f6b4bf5b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a', 'b14e9775-09ad-4019-b5db-dd9670221679');
INSERT INTO public.directed_edge VALUES ('f5baca3c-18da-48c0-9762-bbb3d028e3ef', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a', '36531ec5-477c-4d74-8d84-43276359aa14');
INSERT INTO public.directed_edge VALUES ('3411fc07-5f7a-42d0-afd8-006264265fc7', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a', 'f3afc386-7c81-41d1-9b94-a06a49deb965');
INSERT INTO public.directed_edge VALUES ('0c5a5de8-42c8-4ccf-95f4-f4737f6ba113', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a', '96ec8c86-c024-4d03-a283-49375e43e086');
INSERT INTO public.directed_edge VALUES ('d3d9d2b1-2bc6-4a1a-b4fd-623cac224b10', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a', 'c56361d3-4230-4653-942b-fc8ac7488bf9');
INSERT INTO public.directed_edge VALUES ('1957f88d-0f2e-4853-8279-30681cfac813', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('70335bc1-040b-481d-8d2c-48b4084c6e33', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a', 'acb053d6-b8be-4bce-b62d-3a8aa10b9a0d');
INSERT INTO public.directed_edge VALUES ('bdb2bb7a-7bbe-4394-9058-c8259543cf8a', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('a661b434-4125-4d2b-89d6-51327d375906', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.directed_edge VALUES ('780c57d6-a073-4302-b207-1dd9bf0e99f4', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a', '78b58f38-9075-44a1-8eb4-5ab0ba4b801d');
INSERT INTO public.directed_edge VALUES ('d8695eae-12d6-4067-b7b1-aa7746129157', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('f00304eb-37bd-49c3-9416-51219d11b19a', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a', 'ea7c0692-6545-40e3-8cf8-f4c828c5fce8');
INSERT INTO public.directed_edge VALUES ('f3e4c027-4902-4ef4-9cbc-e2ff0f233b25', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ea7c0692-6545-40e3-8cf8-f4c828c5fce8', '330ba4a6-411d-4d44-913a-2805a9f21cf7');
INSERT INTO public.directed_edge VALUES ('a2987284-53b6-40a4-b3cf-fe7de19833ad', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ea7c0692-6545-40e3-8cf8-f4c828c5fce8', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('d4919be7-ab1b-4ef7-905b-46c8fc9a7465', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ea7c0692-6545-40e3-8cf8-f4c828c5fce8', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('6f2f2536-835a-46e5-a7e1-2093a0f5fd8b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ea7c0692-6545-40e3-8cf8-f4c828c5fce8', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a');
INSERT INTO public.directed_edge VALUES ('6e0e83d3-c9b9-44a0-8fa0-4c1e1c677398', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '330ba4a6-411d-4d44-913a-2805a9f21cf7', '36531ec5-477c-4d74-8d84-43276359aa14');
INSERT INTO public.directed_edge VALUES ('1aa0a3aa-f0b4-484b-b541-479ceef69633', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '330ba4a6-411d-4d44-913a-2805a9f21cf7', 'c56361d3-4230-4653-942b-fc8ac7488bf9');
INSERT INTO public.directed_edge VALUES ('7344724a-0301-4b4b-930f-397f1134fb25', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '330ba4a6-411d-4d44-913a-2805a9f21cf7', '0ee54310-5f4d-4435-9c34-cf93f742e101');
INSERT INTO public.directed_edge VALUES ('f74757fa-45e3-45a5-836b-a728a57309a9', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '330ba4a6-411d-4d44-913a-2805a9f21cf7', 'acb053d6-b8be-4bce-b62d-3a8aa10b9a0d');
INSERT INTO public.directed_edge VALUES ('92ccaa04-a8f9-41bf-a6c9-4ce3e86cbff1', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '330ba4a6-411d-4d44-913a-2805a9f21cf7', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('c8127250-078c-4833-bd0d-dffc45ad9ba8', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '330ba4a6-411d-4d44-913a-2805a9f21cf7', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a');
INSERT INTO public.directed_edge VALUES ('bf1f677f-3229-42c0-8ea0-a1e171117eb1', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '330ba4a6-411d-4d44-913a-2805a9f21cf7', 'ea7c0692-6545-40e3-8cf8-f4c828c5fce8');
INSERT INTO public.directed_edge VALUES ('6990c3d2-289c-41da-b0a5-b277bfaa1541', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'acb053d6-b8be-4bce-b62d-3a8aa10b9a0d', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8');
INSERT INTO public.directed_edge VALUES ('d5cd451a-0dcc-48cf-9b92-c3c170d8199b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'acb053d6-b8be-4bce-b62d-3a8aa10b9a0d', '330ba4a6-411d-4d44-913a-2805a9f21cf7');
INSERT INTO public.directed_edge VALUES ('76657ac1-4df6-44ad-b7ea-34b869b2eb9a', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'acb053d6-b8be-4bce-b62d-3a8aa10b9a0d', '3e74edee-f076-45b3-8247-a5dd19cb24b2');
INSERT INTO public.directed_edge VALUES ('b73db569-bc1a-40d9-8171-58a4f8273c0f', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'acb053d6-b8be-4bce-b62d-3a8aa10b9a0d', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('08cd8aa3-4167-4799-8b35-65a4f3787d1c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'acb053d6-b8be-4bce-b62d-3a8aa10b9a0d', '7c775873-1ebf-4574-8cb1-29b0c661b8f3');
INSERT INTO public.directed_edge VALUES ('49034194-acd1-4538-b888-3949745d2718', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'acb053d6-b8be-4bce-b62d-3a8aa10b9a0d', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a');
INSERT INTO public.directed_edge VALUES ('6d1cc1e2-d54b-4cf0-834a-2605da78af11', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'acb053d6-b8be-4bce-b62d-3a8aa10b9a0d', '6c3f4121-65c2-444e-9d5a-f16f47fd2ed5');
INSERT INTO public.directed_edge VALUES ('37d3c42a-d518-43f7-9d98-9d21da5e5744', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'acb053d6-b8be-4bce-b62d-3a8aa10b9a0d', 'a2b0eaca-aa24-4036-b730-265a97043b75');
INSERT INTO public.directed_edge VALUES ('efa28827-e5c7-4eab-bf6c-c97ea4e33d5e', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c34d4c11-da4f-445d-8682-1c92dcfbb6be', '78185c7d-f353-49ee-b1e2-c2a0bcfc4ed2');
INSERT INTO public.directed_edge VALUES ('f4341bec-208e-488a-b488-c87b7402b383', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c34d4c11-da4f-445d-8682-1c92dcfbb6be', '96ec8c86-c024-4d03-a283-49375e43e086');
INSERT INTO public.directed_edge VALUES ('ce9f84fc-d004-4887-bfba-9c5fd59eb46b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c34d4c11-da4f-445d-8682-1c92dcfbb6be', 'c56361d3-4230-4653-942b-fc8ac7488bf9');
INSERT INTO public.directed_edge VALUES ('90a107fd-82e3-4cec-b5fe-c918cbaf1822', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c34d4c11-da4f-445d-8682-1c92dcfbb6be', '3e74edee-f076-45b3-8247-a5dd19cb24b2');
INSERT INTO public.directed_edge VALUES ('3d43e6f9-7bdb-4e11-ab93-a782fa32dd5f', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c34d4c11-da4f-445d-8682-1c92dcfbb6be', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('fecd632f-eb16-4a63-bc49-33054b425b9b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c34d4c11-da4f-445d-8682-1c92dcfbb6be', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('209b1ae4-e883-42cf-8c2e-e9c6d53f92cb', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c34d4c11-da4f-445d-8682-1c92dcfbb6be', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a');
INSERT INTO public.directed_edge VALUES ('504f447d-8223-41c5-8b43-ed0261467787', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'd89d5a40-b864-4d97-9b44-211ed25c4f98', 'be9c4245-79db-40cd-a0d4-c750c3a822b6');
INSERT INTO public.directed_edge VALUES ('b697529d-ce46-4881-96b2-f4b510005dc8', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'd89d5a40-b864-4d97-9b44-211ed25c4f98', '9c49472d-47fc-417e-b75a-512d57e76870');
INSERT INTO public.directed_edge VALUES ('cbbb1555-9210-4976-a351-12d18c7275db', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'd89d5a40-b864-4d97-9b44-211ed25c4f98', '3e74edee-f076-45b3-8247-a5dd19cb24b2');
INSERT INTO public.directed_edge VALUES ('6e35d1a5-fab9-4e0c-98f1-5442de9e005a', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'd89d5a40-b864-4d97-9b44-211ed25c4f98', '9bafcace-20a3-4726-963b-06d09437c677');
INSERT INTO public.directed_edge VALUES ('15842490-c3d6-470c-b9df-ae5df2595d68', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'd89d5a40-b864-4d97-9b44-211ed25c4f98', '1a1b9319-e303-431d-91c3-f4a3b6189982');
INSERT INTO public.directed_edge VALUES ('cbc9ba51-a827-458b-bfb0-d261653c1a6a', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'd89d5a40-b864-4d97-9b44-211ed25c4f98', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('3af3ff14-befb-4da9-a420-7b1e37d22673', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'd89d5a40-b864-4d97-9b44-211ed25c4f98', 'c7e15bdd-a5f3-486d-8e3d-f3117f39eb1a');
INSERT INTO public.directed_edge VALUES ('e97276ef-84db-49b0-9b9c-db53299300dd', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'd89d5a40-b864-4d97-9b44-211ed25c4f98', 'a2b0eaca-aa24-4036-b730-265a97043b75');
INSERT INTO public.directed_edge VALUES ('bf6bc344-60e0-42d0-aeed-1259d94eed41', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9c49472d-47fc-417e-b75a-512d57e76870', 'd89d5a40-b864-4d97-9b44-211ed25c4f98');
INSERT INTO public.directed_edge VALUES ('3af5ffb4-07c4-4fb2-9e2a-42425459278f', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9c49472d-47fc-417e-b75a-512d57e76870', '87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65');
INSERT INTO public.directed_edge VALUES ('b919e317-01d9-4df8-9776-49e63ae2ae98', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9c49472d-47fc-417e-b75a-512d57e76870', '9bafcace-20a3-4726-963b-06d09437c677');
INSERT INTO public.directed_edge VALUES ('d2924cad-1e75-40a8-9791-d578347d14bd', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9c49472d-47fc-417e-b75a-512d57e76870', '0ee54310-5f4d-4435-9c34-cf93f742e101');
INSERT INTO public.directed_edge VALUES ('2193dfa5-69de-4fef-96af-abf8d7c06bc1', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9c49472d-47fc-417e-b75a-512d57e76870', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('92de371a-1633-49bb-8795-e6dbe4bf60be', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9c49472d-47fc-417e-b75a-512d57e76870', '0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf');
INSERT INTO public.directed_edge VALUES ('91c81fdc-d9c4-46d3-a626-bc1e9cfcb890', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'be9c4245-79db-40cd-a0d4-c750c3a822b6', 'd89d5a40-b864-4d97-9b44-211ed25c4f98');
INSERT INTO public.directed_edge VALUES ('eaa4c5bf-bb4e-4f35-8c6a-d6336baf9b2b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'be9c4245-79db-40cd-a0d4-c750c3a822b6', '9c49472d-47fc-417e-b75a-512d57e76870');
INSERT INTO public.directed_edge VALUES ('1ce2b220-57f0-419c-90ba-e4f0c00ea542', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'be9c4245-79db-40cd-a0d4-c750c3a822b6', '9bafcace-20a3-4726-963b-06d09437c677');
INSERT INTO public.directed_edge VALUES ('cc86283e-b182-4be7-bff9-339bacef2734', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'be9c4245-79db-40cd-a0d4-c750c3a822b6', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('c3eaa427-6f4e-4168-86df-1b7eb4c4e1a6', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'be9c4245-79db-40cd-a0d4-c750c3a822b6', '0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf');
INSERT INTO public.directed_edge VALUES ('8f268fda-4716-4f22-88b0-82e3d72a28ad', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'be9c4245-79db-40cd-a0d4-c750c3a822b6', 'c7e15bdd-a5f3-486d-8e3d-f3117f39eb1a');
INSERT INTO public.directed_edge VALUES ('54f4c18c-dc8c-4457-8147-6779f89b25cc', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf', 'db5033cf-c13f-47b1-a617-aea77a0d5864');
INSERT INTO public.directed_edge VALUES ('8ce96f0d-31b9-4184-8c16-c2fe354b2461', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf', 'ba3aaa33-9010-459f-acb5-5452788e9abc');
INSERT INTO public.directed_edge VALUES ('66abee2a-f063-4e19-a8d9-45ca17e8b724', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf', 'd89d5a40-b864-4d97-9b44-211ed25c4f98');
INSERT INTO public.directed_edge VALUES ('1c5fed87-7652-4760-a54e-8a5ebf063bcd', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf', 'be9c4245-79db-40cd-a0d4-c750c3a822b6');
INSERT INTO public.directed_edge VALUES ('a6d86733-67a1-40bb-b31e-12e09806bf11', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf', '9c49472d-47fc-417e-b75a-512d57e76870');
INSERT INTO public.directed_edge VALUES ('f10b9152-8a5e-410d-b99e-76277b969fd5', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf', '06c5d5cc-5c29-4a74-be75-dfba20cc4f80');
INSERT INTO public.directed_edge VALUES ('0a5ad874-29bf-49ed-9ef7-90357d01f5b2', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf', '9bafcace-20a3-4726-963b-06d09437c677');
INSERT INTO public.directed_edge VALUES ('9f790478-523c-4c3c-8c31-a6900a5250f1', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf', '0ee54310-5f4d-4435-9c34-cf93f742e101');
INSERT INTO public.directed_edge VALUES ('41e6ad1e-e974-4575-b0f8-f8a4cce2eaef', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.directed_edge VALUES ('73fe3316-0028-4ed7-8747-cb072ef12586', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('e0449262-2146-471f-9ab6-32dc326c3c28', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '7d28fe21-466a-4e22-9851-374e9cb93cd9', 'db5033cf-c13f-47b1-a617-aea77a0d5864');
INSERT INTO public.directed_edge VALUES ('edcdfce3-ec19-4421-84bf-f8ee5eb5c2b3', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '7d28fe21-466a-4e22-9851-374e9cb93cd9', 'd89d5a40-b864-4d97-9b44-211ed25c4f98');
INSERT INTO public.directed_edge VALUES ('05494c4d-c129-4bd8-88a1-9deb65e89d5f', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '7d28fe21-466a-4e22-9851-374e9cb93cd9', '26bc2583-1c9f-4d6e-9968-e5aa0e8ab82f');
INSERT INTO public.directed_edge VALUES ('d2f27d37-c81b-4102-bb59-dffe843aa1d6', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '7d28fe21-466a-4e22-9851-374e9cb93cd9', '330ba4a6-411d-4d44-913a-2805a9f21cf7');
INSERT INTO public.directed_edge VALUES ('4898c84e-e1c2-4db3-8616-89b3efa13408', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '7d28fe21-466a-4e22-9851-374e9cb93cd9', '658b6fce-40b0-4f05-a2da-2fd3e33684fb');
INSERT INTO public.directed_edge VALUES ('38510455-2d8f-41a2-8256-41df5e9b707d', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '7d28fe21-466a-4e22-9851-374e9cb93cd9', '87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65');
INSERT INTO public.directed_edge VALUES ('8bfa44c6-d61b-4a0a-9f4d-938753c6af5b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '7d28fe21-466a-4e22-9851-374e9cb93cd9', '1a1b9319-e303-431d-91c3-f4a3b6189982');
INSERT INTO public.directed_edge VALUES ('c753d1c9-3af1-401f-9cc8-1160b0ef1dd4', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '7d28fe21-466a-4e22-9851-374e9cb93cd9', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('a89270bb-dfe4-4534-b270-bb7263355f83', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'db5033cf-c13f-47b1-a617-aea77a0d5864', 'ba3aaa33-9010-459f-acb5-5452788e9abc');
INSERT INTO public.directed_edge VALUES ('9aa28f75-f71a-48f2-ac0d-508d2d1e1ac3', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'db5033cf-c13f-47b1-a617-aea77a0d5864', 'd89d5a40-b864-4d97-9b44-211ed25c4f98');
INSERT INTO public.directed_edge VALUES ('7531a287-b88f-40c9-9327-7d1e0c1b665e', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'db5033cf-c13f-47b1-a617-aea77a0d5864', '712b29e2-411b-4ef8-8f81-6cae15222c07');
INSERT INTO public.directed_edge VALUES ('9f7e41df-8f3d-4ea8-9b97-909337180af0', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'db5033cf-c13f-47b1-a617-aea77a0d5864', '330ba4a6-411d-4d44-913a-2805a9f21cf7');
INSERT INTO public.directed_edge VALUES ('092e2190-dd71-462e-ba3d-be7e9a556687', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'db5033cf-c13f-47b1-a617-aea77a0d5864', '885ade35-d310-421a-98b8-877e27e51531');
INSERT INTO public.directed_edge VALUES ('a0d458bd-b5ac-49f1-9651-b731a70c0db5', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'db5033cf-c13f-47b1-a617-aea77a0d5864', '87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65');
INSERT INTO public.directed_edge VALUES ('744e02ba-e9b5-42ff-88be-ebf954563195', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'db5033cf-c13f-47b1-a617-aea77a0d5864', 'f3afc386-7c81-41d1-9b94-a06a49deb965');
INSERT INTO public.directed_edge VALUES ('e3025314-a3f2-4426-86b2-0de31f76efc9', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'db5033cf-c13f-47b1-a617-aea77a0d5864', '96ec8c86-c024-4d03-a283-49375e43e086');
INSERT INTO public.directed_edge VALUES ('208e219b-2c81-4438-ba59-5ade9bfed9a9', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'db5033cf-c13f-47b1-a617-aea77a0d5864', 'c34d4c11-da4f-445d-8682-1c92dcfbb6be');
INSERT INTO public.directed_edge VALUES ('4c02d435-eecd-4935-88bd-a07904bac583', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'db5033cf-c13f-47b1-a617-aea77a0d5864', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.directed_edge VALUES ('a248a05b-e902-46b8-82b0-0557f2362060', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'db5033cf-c13f-47b1-a617-aea77a0d5864', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('d10e64f6-759d-4dd9-aa87-d208e9352903', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'db5033cf-c13f-47b1-a617-aea77a0d5864', '0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf');
INSERT INTO public.directed_edge VALUES ('9fad415b-4841-45aa-87d4-eb110f4bcbd8', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'db5033cf-c13f-47b1-a617-aea77a0d5864', '8c047398-63a1-4940-a5c5-c44834f48516');
INSERT INTO public.directed_edge VALUES ('dc8a14ad-73f1-4b2b-b6af-a3a0907e8608', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'db5033cf-c13f-47b1-a617-aea77a0d5864', '7d28fe21-466a-4e22-9851-374e9cb93cd9');
INSERT INTO public.directed_edge VALUES ('b6572ef7-f1c4-40a1-ada3-9e4a1c206da1', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'db5033cf-c13f-47b1-a617-aea77a0d5864', 'a2b0eaca-aa24-4036-b730-265a97043b75');
INSERT INTO public.directed_edge VALUES ('08f2e497-2f38-4382-98bc-0ad985819450', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '8c047398-63a1-4940-a5c5-c44834f48516', 'db5033cf-c13f-47b1-a617-aea77a0d5864');
INSERT INTO public.directed_edge VALUES ('9ec9941b-e898-4152-953f-a08df44be298', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '8c047398-63a1-4940-a5c5-c44834f48516', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8');
INSERT INTO public.directed_edge VALUES ('58968827-547e-429e-b15a-c77e767ffb47', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '8c047398-63a1-4940-a5c5-c44834f48516', '9bafcace-20a3-4726-963b-06d09437c677');
INSERT INTO public.directed_edge VALUES ('cf6acf2e-cbfa-4cc9-9f82-7f88581659ad', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '8c047398-63a1-4940-a5c5-c44834f48516', 'acb053d6-b8be-4bce-b62d-3a8aa10b9a0d');
INSERT INTO public.directed_edge VALUES ('d68359db-6f06-4090-aa12-b57225d3564e', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '8c047398-63a1-4940-a5c5-c44834f48516', '1a1b9319-e303-431d-91c3-f4a3b6189982');
INSERT INTO public.directed_edge VALUES ('da68cfa2-04e9-4aed-a35b-c54d3bb3e859', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '8c047398-63a1-4940-a5c5-c44834f48516', '7d28fe21-466a-4e22-9851-374e9cb93cd9');
INSERT INTO public.directed_edge VALUES ('ecbd4ce3-eb43-4aea-998f-f90038aa6960', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '8c047398-63a1-4940-a5c5-c44834f48516', '5778b4ba-4acd-4c94-9c10-d83d80f75d50');
INSERT INTO public.directed_edge VALUES ('67acaf7a-bec1-44cf-94fa-50de721b3496', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '885ade35-d310-421a-98b8-877e27e51531', 'db5033cf-c13f-47b1-a617-aea77a0d5864');
INSERT INTO public.directed_edge VALUES ('fce9c34d-2e83-45aa-a6ef-cda22573b34e', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '885ade35-d310-421a-98b8-877e27e51531', 'd89d5a40-b864-4d97-9b44-211ed25c4f98');
INSERT INTO public.directed_edge VALUES ('9da0cdfd-f5cc-4937-aaa4-4a05c592ea5a', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '885ade35-d310-421a-98b8-877e27e51531', '1a1b9319-e303-431d-91c3-f4a3b6189982');
INSERT INTO public.directed_edge VALUES ('d4ba2c97-5184-42c2-8603-ba2125fa47cc', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '885ade35-d310-421a-98b8-877e27e51531', '7d28fe21-466a-4e22-9851-374e9cb93cd9');
INSERT INTO public.directed_edge VALUES ('f623bb97-1e8a-4e04-9813-5535c490dec5', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ba3aaa33-9010-459f-acb5-5452788e9abc', 'db5033cf-c13f-47b1-a617-aea77a0d5864');
INSERT INTO public.directed_edge VALUES ('88917588-95e2-4304-b546-e5d441530a97', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ba3aaa33-9010-459f-acb5-5452788e9abc', '885ade35-d310-421a-98b8-877e27e51531');
INSERT INTO public.directed_edge VALUES ('69874756-d169-4019-a14e-4c3c5ec2e395', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ba3aaa33-9010-459f-acb5-5452788e9abc', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('e15ffae7-aa71-49bc-90f7-69962dc8664b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ba3aaa33-9010-459f-acb5-5452788e9abc', '0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf');
INSERT INTO public.directed_edge VALUES ('28c3af68-1de8-4f19-806d-bd1f45eaed89', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ba3aaa33-9010-459f-acb5-5452788e9abc', 'ea7c0692-6545-40e3-8cf8-f4c828c5fce8');
INSERT INTO public.directed_edge VALUES ('79a1d3de-a4e7-476d-8923-c78e7d43c135', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ba3aaa33-9010-459f-acb5-5452788e9abc', '7d28fe21-466a-4e22-9851-374e9cb93cd9');
INSERT INTO public.directed_edge VALUES ('8424b095-038c-4b3c-a815-c010f6ca3945', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c7e15bdd-a5f3-486d-8e3d-f3117f39eb1a', 'd89d5a40-b864-4d97-9b44-211ed25c4f98');
INSERT INTO public.directed_edge VALUES ('465047a6-1681-495a-9edf-e7fc94e9b9f0', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c7e15bdd-a5f3-486d-8e3d-f3117f39eb1a', '9c49472d-47fc-417e-b75a-512d57e76870');
INSERT INTO public.directed_edge VALUES ('a24e3b6b-64cf-40ee-ac6a-38f337a2a257', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c7e15bdd-a5f3-486d-8e3d-f3117f39eb1a', '9bafcace-20a3-4726-963b-06d09437c677');
INSERT INTO public.directed_edge VALUES ('bb304993-acc1-4704-9f6b-102665780e3d', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c7e15bdd-a5f3-486d-8e3d-f3117f39eb1a', '1a1b9319-e303-431d-91c3-f4a3b6189982');
INSERT INTO public.directed_edge VALUES ('63ccd85b-80d9-4509-808d-9b13dab1ba2c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c7e15bdd-a5f3-486d-8e3d-f3117f39eb1a', '53adbbff-f4d6-4bd7-8b90-475f57913c1a');
INSERT INTO public.directed_edge VALUES ('c67582b5-de6c-42b7-be89-7e1c7a12a0d9', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c7e15bdd-a5f3-486d-8e3d-f3117f39eb1a', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('1bb23c8c-e2b0-417e-9ec7-e6e7f3d6aa04', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c7e15bdd-a5f3-486d-8e3d-f3117f39eb1a', 'ea7c0692-6545-40e3-8cf8-f4c828c5fce8');
INSERT INTO public.directed_edge VALUES ('8328428b-c32f-4f3a-baa2-3702927028a0', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '53adbbff-f4d6-4bd7-8b90-475f57913c1a', 'db5033cf-c13f-47b1-a617-aea77a0d5864');
INSERT INTO public.directed_edge VALUES ('59b80ee4-a7a1-41e2-9f12-54ae3e2a407a', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '53adbbff-f4d6-4bd7-8b90-475f57913c1a', 'd89d5a40-b864-4d97-9b44-211ed25c4f98');
INSERT INTO public.directed_edge VALUES ('85147bc1-c79a-4dc5-ba2d-59251a3e46b7', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '53adbbff-f4d6-4bd7-8b90-475f57913c1a', '330ba4a6-411d-4d44-913a-2805a9f21cf7');
INSERT INTO public.directed_edge VALUES ('e67a03b6-f017-4efc-bb08-31db01f437cf', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '53adbbff-f4d6-4bd7-8b90-475f57913c1a', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('af563e67-edf0-4ac3-b35a-d636138cfcd9', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '53adbbff-f4d6-4bd7-8b90-475f57913c1a', '84c81b22-765b-4edb-a6e7-c626151e0af8');
INSERT INTO public.directed_edge VALUES ('1a5fc6ea-e946-411c-a739-97d67e172353', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '53adbbff-f4d6-4bd7-8b90-475f57913c1a', '26c8f1cb-a592-415e-846e-22f2ee761c8f');
INSERT INTO public.directed_edge VALUES ('1464b30f-6225-44c2-be3c-03b771dde2ac', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '53adbbff-f4d6-4bd7-8b90-475f57913c1a', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2');
INSERT INTO public.directed_edge VALUES ('39ab96af-105e-4d88-999f-46f65fdcd2b9', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '53adbbff-f4d6-4bd7-8b90-475f57913c1a', '1a1b9319-e303-431d-91c3-f4a3b6189982');
INSERT INTO public.directed_edge VALUES ('2251c652-d095-45fc-b3a1-cc62c264bac5', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '53adbbff-f4d6-4bd7-8b90-475f57913c1a', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('747c1420-a636-4291-9578-a4d0068f9c98', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '53adbbff-f4d6-4bd7-8b90-475f57913c1a', 'c7e15bdd-a5f3-486d-8e3d-f3117f39eb1a');
INSERT INTO public.directed_edge VALUES ('e13e9b66-9e47-42f7-a3d8-690eeedd0879', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '53adbbff-f4d6-4bd7-8b90-475f57913c1a', '6c3f4121-65c2-444e-9d5a-f16f47fd2ed5');
INSERT INTO public.directed_edge VALUES ('ec12c3a6-40c2-48c3-b31c-e8ac1cf6768b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '329b49fc-de79-4d63-97ca-87a8f83ef1e2', '98ccd4dc-86a8-4652-b2c1-5b83b6f078e1');
INSERT INTO public.directed_edge VALUES ('62524da4-05eb-40a0-8064-c96e5e81054f', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '329b49fc-de79-4d63-97ca-87a8f83ef1e2', '87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65');
INSERT INTO public.directed_edge VALUES ('421040d5-9ef9-4634-afd1-bed79448c8a2', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '329b49fc-de79-4d63-97ca-87a8f83ef1e2', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('bba35e16-2f06-41cf-b55b-0e06bfb1f3db', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '329b49fc-de79-4d63-97ca-87a8f83ef1e2', '3953e924-30f6-4561-8e02-e761b417c1d4');
INSERT INTO public.directed_edge VALUES ('a88f5662-eb27-4a6c-85ff-03f57a33b353', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '329b49fc-de79-4d63-97ca-87a8f83ef1e2', '9bafcace-20a3-4726-963b-06d09437c677');
INSERT INTO public.directed_edge VALUES ('f734666f-b8b9-4963-b515-b7aec210ace0', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '329b49fc-de79-4d63-97ca-87a8f83ef1e2', '1a1b9319-e303-431d-91c3-f4a3b6189982');
INSERT INTO public.directed_edge VALUES ('3b455383-fd80-4233-9164-f202d4a8c726', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '329b49fc-de79-4d63-97ca-87a8f83ef1e2', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.directed_edge VALUES ('1d1cbe55-20ef-4ac8-8d6d-20f199cce250', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '329b49fc-de79-4d63-97ca-87a8f83ef1e2', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('a83db02b-ae5b-439e-853a-0d488975b098', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '329b49fc-de79-4d63-97ca-87a8f83ef1e2', '0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf');
INSERT INTO public.directed_edge VALUES ('5ad1103d-35a6-445c-b421-40bea9407470', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '658b6fce-40b0-4f05-a2da-2fd3e33684fb', 'd89d5a40-b864-4d97-9b44-211ed25c4f98');
INSERT INTO public.directed_edge VALUES ('d7481431-aed1-4630-b128-19cf66dc9328', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '658b6fce-40b0-4f05-a2da-2fd3e33684fb', 'b3418862-26a6-4bbb-b546-c12f48c45b16');
INSERT INTO public.directed_edge VALUES ('20baba2c-ee45-4496-9d9c-67f53da181f0', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '658b6fce-40b0-4f05-a2da-2fd3e33684fb', 'adcaac7d-a028-4d33-9111-ef3e711637e7');
INSERT INTO public.directed_edge VALUES ('d51d6e40-cd9c-4682-9222-7b3f9dd47acd', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '658b6fce-40b0-4f05-a2da-2fd3e33684fb', '1a1b9319-e303-431d-91c3-f4a3b6189982');
INSERT INTO public.directed_edge VALUES ('200b715f-15e5-44dd-8e4e-f5f1a1cb6a31', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b3418862-26a6-4bbb-b546-c12f48c45b16', '26bc2583-1c9f-4d6e-9968-e5aa0e8ab82f');
INSERT INTO public.directed_edge VALUES ('7040f8d1-5307-4979-90b1-a8c9a1211d7a', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b3418862-26a6-4bbb-b546-c12f48c45b16', 'f3afc386-7c81-41d1-9b94-a06a49deb965');
INSERT INTO public.directed_edge VALUES ('e2f0ac0b-535a-4e2c-9a7d-209a080f5653', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b3418862-26a6-4bbb-b546-c12f48c45b16', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('6bf3d361-f08f-4af2-bdd8-b38d8b356f0f', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b3418862-26a6-4bbb-b546-c12f48c45b16', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2');
INSERT INTO public.directed_edge VALUES ('0cf8142a-4b79-4ace-b468-d5aed3451dff', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b3418862-26a6-4bbb-b546-c12f48c45b16', '6c3f4121-65c2-444e-9d5a-f16f47fd2ed5');
INSERT INTO public.directed_edge VALUES ('7e2c280d-30fd-4937-9e1a-61e9cf399edc', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '26bc2583-1c9f-4d6e-9968-e5aa0e8ab82f', 'b5c458ea-3a4e-4211-afc9-82510c2cff46');
INSERT INTO public.directed_edge VALUES ('5e30cf56-ae43-4c6f-9c43-4b7249905a7d', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '26bc2583-1c9f-4d6e-9968-e5aa0e8ab82f', 'b3418862-26a6-4bbb-b546-c12f48c45b16');
INSERT INTO public.directed_edge VALUES ('96edc548-2011-4261-9932-81cf8159440f', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '26bc2583-1c9f-4d6e-9968-e5aa0e8ab82f', '7d28fe21-466a-4e22-9851-374e9cb93cd9');
INSERT INTO public.directed_edge VALUES ('e402934f-1b44-4b48-a015-e521c22b56b3', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '6c3f4121-65c2-444e-9d5a-f16f47fd2ed5', '26bc2583-1c9f-4d6e-9968-e5aa0e8ab82f');
INSERT INTO public.directed_edge VALUES ('06c28dd5-f150-4ca4-8fe2-bc7ed3154aec', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '6c3f4121-65c2-444e-9d5a-f16f47fd2ed5', 'b3418862-26a6-4bbb-b546-c12f48c45b16');
INSERT INTO public.directed_edge VALUES ('98d55c9c-7dff-40f8-8b56-464f4e247452', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '6c3f4121-65c2-444e-9d5a-f16f47fd2ed5', '53adbbff-f4d6-4bd7-8b90-475f57913c1a');
INSERT INTO public.directed_edge VALUES ('d1add9c5-65a8-4439-8c6a-e3e4b769d716', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '89dd6672-dd42-470b-8e84-129e4ec7540c', 'cf3a2b5f-9d7a-4f2c-ba39-ab2911d3a7d7');
INSERT INTO public.directed_edge VALUES ('25a7ee31-4b5e-4ee1-8911-4529857fe727', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '89dd6672-dd42-470b-8e84-129e4ec7540c', '9bafcace-20a3-4726-963b-06d09437c677');
INSERT INTO public.directed_edge VALUES ('b8aedfb7-9f7d-43a1-90ec-634c1bd3483d', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '89dd6672-dd42-470b-8e84-129e4ec7540c', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2');
INSERT INTO public.directed_edge VALUES ('81de6d61-3c61-4d1d-9d31-6933ad616c89', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '89dd6672-dd42-470b-8e84-129e4ec7540c', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2');
INSERT INTO public.directed_edge VALUES ('d601b15f-387b-48ed-aac3-98c3d26fdb98', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '98ccd4dc-86a8-4652-b2c1-5b83b6f078e1', '01d63259-109f-4136-878d-77e503ac8a11');
INSERT INTO public.directed_edge VALUES ('d8faed73-080e-4542-8ed0-f67bcad10b68', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '98ccd4dc-86a8-4652-b2c1-5b83b6f078e1', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('03837b1c-a1d1-4d77-9485-70adad11045c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '98ccd4dc-86a8-4652-b2c1-5b83b6f078e1', '9bafcace-20a3-4726-963b-06d09437c677');
INSERT INTO public.directed_edge VALUES ('9f13b035-f9a9-4560-98f5-5c98bb42bd09', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '98ccd4dc-86a8-4652-b2c1-5b83b6f078e1', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2');
INSERT INTO public.directed_edge VALUES ('9d5f5b91-79f9-46de-9766-17cdd0672462', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '98ccd4dc-86a8-4652-b2c1-5b83b6f078e1', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('96bb3c3c-7acf-447b-9531-fbbbba70c6dd', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '98ccd4dc-86a8-4652-b2c1-5b83b6f078e1', '29acda13-a41f-4270-9248-375814889f20');
INSERT INTO public.directed_edge VALUES ('fd35905f-32f8-4423-8bdb-a4756ba00bb5', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '98ccd4dc-86a8-4652-b2c1-5b83b6f078e1', '60e3ca01-0b7a-4785-acd7-3dddad0eea8e');
INSERT INTO public.directed_edge VALUES ('93a94b06-5515-4f3c-a0b0-788f2bfbd119', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '02fc1261-b7d6-4d85-89ef-c987ab92f3d4', 'ba3aaa33-9010-459f-acb5-5452788e9abc');
INSERT INTO public.directed_edge VALUES ('af76cee3-11e0-4d00-8b08-ddbdfbe871d6', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '02fc1261-b7d6-4d85-89ef-c987ab92f3d4', '330ba4a6-411d-4d44-913a-2805a9f21cf7');
INSERT INTO public.directed_edge VALUES ('3a6f14f6-1650-45af-801b-643df9f0b3b9', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '02fc1261-b7d6-4d85-89ef-c987ab92f3d4', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('94371ff9-9ad1-4746-a7d0-f525da9333e8', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '02fc1261-b7d6-4d85-89ef-c987ab92f3d4', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a');
INSERT INTO public.directed_edge VALUES ('ce3e72a0-4fe5-42b4-af25-84ac2fcec388', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '29acda13-a41f-4270-9248-375814889f20', 'db5033cf-c13f-47b1-a617-aea77a0d5864');
INSERT INTO public.directed_edge VALUES ('4ca1a81d-2fc6-463d-bd07-97723e35610d', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '29acda13-a41f-4270-9248-375814889f20', '98ccd4dc-86a8-4652-b2c1-5b83b6f078e1');
INSERT INTO public.directed_edge VALUES ('eb5ba498-39ad-4864-b8c7-e3e4da7cf0bb', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '29acda13-a41f-4270-9248-375814889f20', '19c5ed05-1a24-4971-9aac-390e1931f010');
INSERT INTO public.directed_edge VALUES ('a24c7048-9082-45a2-b520-23a8a7457c88', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '29acda13-a41f-4270-9248-375814889f20', 'b14e9775-09ad-4019-b5db-dd9670221679');
INSERT INTO public.directed_edge VALUES ('28a68163-b06a-41af-a2f9-1784aa73a473', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '29acda13-a41f-4270-9248-375814889f20', '9bafcace-20a3-4726-963b-06d09437c677');
INSERT INTO public.directed_edge VALUES ('15c1e25b-4bc0-4227-a170-9a39afad337f', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '29acda13-a41f-4270-9248-375814889f20', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2');
INSERT INTO public.directed_edge VALUES ('62276071-4e77-4a31-a97f-64235bc5605b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a2b0eaca-aa24-4036-b730-265a97043b75', 'b5c458ea-3a4e-4211-afc9-82510c2cff46');
INSERT INTO public.directed_edge VALUES ('d7d757a4-3cc9-468c-bc81-58604adc3bfe', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a2b0eaca-aa24-4036-b730-265a97043b75', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8');
INSERT INTO public.directed_edge VALUES ('188b75e9-cb80-41cd-982a-9cc0c458b523', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a2b0eaca-aa24-4036-b730-265a97043b75', 'b14e9775-09ad-4019-b5db-dd9670221679');
INSERT INTO public.directed_edge VALUES ('490cbe77-f1fb-48ea-9eda-efa7b644ad36', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a2b0eaca-aa24-4036-b730-265a97043b75', '87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65');
INSERT INTO public.directed_edge VALUES ('e9d5e09a-a7e0-41d3-8351-20dd8ccd1d43', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a2b0eaca-aa24-4036-b730-265a97043b75', 'f3afc386-7c81-41d1-9b94-a06a49deb965');
INSERT INTO public.directed_edge VALUES ('1794b3e6-f387-4e12-a958-83631a3bc162', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a2b0eaca-aa24-4036-b730-265a97043b75', '96ec8c86-c024-4d03-a283-49375e43e086');
INSERT INTO public.directed_edge VALUES ('058edefd-5268-4a8d-b0de-d86a5036909b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a2b0eaca-aa24-4036-b730-265a97043b75', 'c56361d3-4230-4653-942b-fc8ac7488bf9');
INSERT INTO public.directed_edge VALUES ('5c0c1b8f-afa5-4fd1-b017-5563260f1563', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a2b0eaca-aa24-4036-b730-265a97043b75', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('581e6dec-9108-4fd8-933c-e813b43a9b71', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a2b0eaca-aa24-4036-b730-265a97043b75', '7c775873-1ebf-4574-8cb1-29b0c661b8f3');
INSERT INTO public.directed_edge VALUES ('5a4d0fc7-ad53-4b49-ac71-2f32e322d409', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a2b0eaca-aa24-4036-b730-265a97043b75', '3953e924-30f6-4561-8e02-e761b417c1d4');
INSERT INTO public.directed_edge VALUES ('6e660be0-f823-4591-9e91-8e43fae193cc', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a2b0eaca-aa24-4036-b730-265a97043b75', '9bafcace-20a3-4726-963b-06d09437c677');
INSERT INTO public.directed_edge VALUES ('bf17b4c5-4edb-44a0-848d-895a67b44a63', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a2b0eaca-aa24-4036-b730-265a97043b75', 'acb053d6-b8be-4bce-b62d-3a8aa10b9a0d');
INSERT INTO public.directed_edge VALUES ('7a07596b-5eb0-4058-913a-3389fec3795c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a2b0eaca-aa24-4036-b730-265a97043b75', '29f4224d-6b91-4218-aed6-0db3e5fa9dc2');
INSERT INTO public.directed_edge VALUES ('7559ac62-26ab-4a35-bf58-65df9451bbf6', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a2b0eaca-aa24-4036-b730-265a97043b75', 'adcaac7d-a028-4d33-9111-ef3e711637e7');
INSERT INTO public.directed_edge VALUES ('c7e87c0d-57c4-477e-ab94-28b0bd303ce3', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a2b0eaca-aa24-4036-b730-265a97043b75', '1a1b9319-e303-431d-91c3-f4a3b6189982');
INSERT INTO public.directed_edge VALUES ('f982daab-0b41-4e88-8f76-3f71179a5001', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a2b0eaca-aa24-4036-b730-265a97043b75', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.directed_edge VALUES ('7024aa81-64a7-411e-9964-48ded9968616', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a2b0eaca-aa24-4036-b730-265a97043b75', '78b58f38-9075-44a1-8eb4-5ab0ba4b801d');
INSERT INTO public.directed_edge VALUES ('6d71c9e0-2375-4f58-aa85-5466078a8bfd', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a2b0eaca-aa24-4036-b730-265a97043b75', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('8a839d91-0c1b-4253-87a8-a9bcc2cba1d3', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a2b0eaca-aa24-4036-b730-265a97043b75', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a');
INSERT INTO public.directed_edge VALUES ('eb3ffc6a-4b91-4e73-9ed2-1db45480d7a6', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'a2b0eaca-aa24-4036-b730-265a97043b75', '8c047398-63a1-4940-a5c5-c44834f48516');
INSERT INTO public.directed_edge VALUES ('dd4d9a65-7516-429e-8192-0cb1183c9e19', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '78b58f38-9075-44a1-8eb4-5ab0ba4b801d', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8');
INSERT INTO public.directed_edge VALUES ('b6fab5fe-02ed-43a3-9f6d-9187f224387c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '78b58f38-9075-44a1-8eb4-5ab0ba4b801d', 'ca07715c-696e-4a62-af10-74145ff818f5');
INSERT INTO public.directed_edge VALUES ('954fee7f-4dac-4fff-b74c-825b638fc6cd', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '78b58f38-9075-44a1-8eb4-5ab0ba4b801d', '87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65');
INSERT INTO public.directed_edge VALUES ('5ff042d5-d53a-4c28-a52e-9c85ec9b5198', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '78b58f38-9075-44a1-8eb4-5ab0ba4b801d', 'c56361d3-4230-4653-942b-fc8ac7488bf9');
INSERT INTO public.directed_edge VALUES ('1720da03-f8bf-401f-b803-70a5fa91fb4e', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '78b58f38-9075-44a1-8eb4-5ab0ba4b801d', '7c775873-1ebf-4574-8cb1-29b0c661b8f3');
INSERT INTO public.directed_edge VALUES ('5512274a-f439-497c-90a6-2bdaea3c2ac5', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '78b58f38-9075-44a1-8eb4-5ab0ba4b801d', '0ee54310-5f4d-4435-9c34-cf93f742e101');
INSERT INTO public.directed_edge VALUES ('6b780c84-510e-496e-81eb-7df453a30321', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '78b58f38-9075-44a1-8eb4-5ab0ba4b801d', 'a2b0eaca-aa24-4036-b730-265a97043b75');
INSERT INTO public.directed_edge VALUES ('3ab63dea-9141-4c04-83a4-1fb25c649db5', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8');
INSERT INTO public.directed_edge VALUES ('56d0d440-0a39-4590-ac90-cf1e276a8cc5', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65', 'ca07715c-696e-4a62-af10-74145ff818f5');
INSERT INTO public.directed_edge VALUES ('d830646b-b706-48a2-9323-8b5d871a29ea', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65', 'c56361d3-4230-4653-942b-fc8ac7488bf9');
INSERT INTO public.directed_edge VALUES ('ad5db44a-20a1-45ea-bf4b-47f3a2316c96', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('606fb34b-7b8e-4163-b44a-ef7276a66b62', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65', '7c775873-1ebf-4574-8cb1-29b0c661b8f3');
INSERT INTO public.directed_edge VALUES ('2b3c2969-84fb-45ad-aa35-53ff151fc288', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65', '0ee54310-5f4d-4435-9c34-cf93f742e101');
INSERT INTO public.directed_edge VALUES ('ed306c89-e179-4627-8f4b-20b624153812', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65', '78b58f38-9075-44a1-8eb4-5ab0ba4b801d');
INSERT INTO public.directed_edge VALUES ('41342ca0-add8-452e-8194-96fc8c9fa0a7', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65', 'a2b0eaca-aa24-4036-b730-265a97043b75');
INSERT INTO public.directed_edge VALUES ('07996026-e829-41a1-84b9-c960dee54236', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8', '87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65');
INSERT INTO public.directed_edge VALUES ('8ad6791e-e4e4-4fe4-b4e7-44610022185d', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8', 'c56361d3-4230-4653-942b-fc8ac7488bf9');
INSERT INTO public.directed_edge VALUES ('3323ffc6-7b3b-4ccb-96e4-d0821f781690', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('5d10ece3-d98d-4c65-8a93-2b602d7f6ed1', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8', '7c775873-1ebf-4574-8cb1-29b0c661b8f3');
INSERT INTO public.directed_edge VALUES ('ba8a047d-289f-478e-aabe-dafab615d118', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8', '9bafcace-20a3-4726-963b-06d09437c677');
INSERT INTO public.directed_edge VALUES ('a9a0638c-2ea7-41bb-ac7c-f0d4f4b8b2a7', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('04dbf1fa-9dc1-4a9e-aa2d-bad2f04cf5c9', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.directed_edge VALUES ('b51562d1-e65d-40d4-81c8-c29e46397f02', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8', '78b58f38-9075-44a1-8eb4-5ab0ba4b801d');
INSERT INTO public.directed_edge VALUES ('a63f7d96-1fc8-4a36-a6a1-08a5b282e882', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('9d39920e-2e63-4a36-8f3f-e22285cf84f5', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8', 'a2b0eaca-aa24-4036-b730-265a97043b75');
INSERT INTO public.directed_edge VALUES ('0f25f66e-50d9-4b1d-ab4f-342f4dad954c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '7c775873-1ebf-4574-8cb1-29b0c661b8f3', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8');
INSERT INTO public.directed_edge VALUES ('7dc7b576-fbdd-4d5d-9e64-5b7bae19cce7', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '7c775873-1ebf-4574-8cb1-29b0c661b8f3', 'cf3a2b5f-9d7a-4f2c-ba39-ab2911d3a7d7');
INSERT INTO public.directed_edge VALUES ('68bd044f-25dc-4302-92a1-837124003468', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '7c775873-1ebf-4574-8cb1-29b0c661b8f3', '36531ec5-477c-4d74-8d84-43276359aa14');
INSERT INTO public.directed_edge VALUES ('398d8762-ca8b-44d9-9b05-f6240c395945', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '7c775873-1ebf-4574-8cb1-29b0c661b8f3', '87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65');
INSERT INTO public.directed_edge VALUES ('34a960d3-efe1-4e96-ae32-953c5b6eaaa5', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '7c775873-1ebf-4574-8cb1-29b0c661b8f3', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('43d5355b-3a3d-4531-8e39-978da75896d3', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '7c775873-1ebf-4574-8cb1-29b0c661b8f3', '0ee54310-5f4d-4435-9c34-cf93f742e101');
INSERT INTO public.directed_edge VALUES ('13971164-0a74-48ce-97e1-822b1943047d', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '7c775873-1ebf-4574-8cb1-29b0c661b8f3', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('06d32cfb-cb2a-4043-b260-e8847193faf1', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '7c775873-1ebf-4574-8cb1-29b0c661b8f3', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.directed_edge VALUES ('cb422bd5-4a9f-4460-90bd-436d512f7d91', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '7c775873-1ebf-4574-8cb1-29b0c661b8f3', '78b58f38-9075-44a1-8eb4-5ab0ba4b801d');
INSERT INTO public.directed_edge VALUES ('4f204155-a96b-49e9-93d8-59ed6ce76aa0', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '7c775873-1ebf-4574-8cb1-29b0c661b8f3', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('006bbe64-b31e-4c24-ad61-1f4d8e6af0b4', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '7c775873-1ebf-4574-8cb1-29b0c661b8f3', '6c3f4121-65c2-444e-9d5a-f16f47fd2ed5');
INSERT INTO public.directed_edge VALUES ('05fa292d-fc36-46cd-af8d-f15a400b3c96', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '7c775873-1ebf-4574-8cb1-29b0c661b8f3', 'a2b0eaca-aa24-4036-b730-265a97043b75');
INSERT INTO public.directed_edge VALUES ('0258e4d0-8563-4f09-9700-0ad67438f134', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0ee54310-5f4d-4435-9c34-cf93f742e101', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8');
INSERT INTO public.directed_edge VALUES ('141bf404-0f4a-470e-be8a-82d28be28489', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0ee54310-5f4d-4435-9c34-cf93f742e101', 'd89d5a40-b864-4d97-9b44-211ed25c4f98');
INSERT INTO public.directed_edge VALUES ('dbd9f740-ec2a-451f-9518-9338157bd02c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0ee54310-5f4d-4435-9c34-cf93f742e101', '330ba4a6-411d-4d44-913a-2805a9f21cf7');
INSERT INTO public.directed_edge VALUES ('dbee89c5-3301-46e2-a041-289b1628605f', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0ee54310-5f4d-4435-9c34-cf93f742e101', 'cf3a2b5f-9d7a-4f2c-ba39-ab2911d3a7d7');
INSERT INTO public.directed_edge VALUES ('d02825b2-4e49-4208-8115-9e8e2ad95509', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0ee54310-5f4d-4435-9c34-cf93f742e101', 'ca07715c-696e-4a62-af10-74145ff818f5');
INSERT INTO public.directed_edge VALUES ('6c919d68-b1df-4c71-a370-0bd220ec4ad9', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0ee54310-5f4d-4435-9c34-cf93f742e101', '87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65');
INSERT INTO public.directed_edge VALUES ('5f4d73ec-eca2-4b42-863d-3e1d1918044e', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0ee54310-5f4d-4435-9c34-cf93f742e101', '9c49472d-47fc-417e-b75a-512d57e76870');
INSERT INTO public.directed_edge VALUES ('c4b585d3-ac5c-44c2-833e-f9da88704de0', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0ee54310-5f4d-4435-9c34-cf93f742e101', '96ec8c86-c024-4d03-a283-49375e43e086');
INSERT INTO public.directed_edge VALUES ('1329e1ad-92cb-4238-ac76-fcc32ed9cf09', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0ee54310-5f4d-4435-9c34-cf93f742e101', '3e74edee-f076-45b3-8247-a5dd19cb24b2');
INSERT INTO public.directed_edge VALUES ('921a50be-4472-45ec-a210-b067c5b72fa0', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0ee54310-5f4d-4435-9c34-cf93f742e101', 'c56361d3-4230-4653-942b-fc8ac7488bf9');
INSERT INTO public.directed_edge VALUES ('97ebf24a-8b0e-4422-9c76-2526a8c49bd9', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0ee54310-5f4d-4435-9c34-cf93f742e101', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('9a934222-0ca4-4021-8da6-891f1bc6921d', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0ee54310-5f4d-4435-9c34-cf93f742e101', '7c775873-1ebf-4574-8cb1-29b0c661b8f3');
INSERT INTO public.directed_edge VALUES ('7c068bb6-83ee-4d47-b83d-39423a521810', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0ee54310-5f4d-4435-9c34-cf93f742e101', 'c34d4c11-da4f-445d-8682-1c92dcfbb6be');
INSERT INTO public.directed_edge VALUES ('025420c0-f608-43c9-9198-3749fd8d8a46', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0ee54310-5f4d-4435-9c34-cf93f742e101', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('17f174e9-0b81-4422-abd5-df8620ca9aff', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0ee54310-5f4d-4435-9c34-cf93f742e101', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.directed_edge VALUES ('e020421f-f3d6-4508-9958-f91382d0fa11', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0ee54310-5f4d-4435-9c34-cf93f742e101', '78b58f38-9075-44a1-8eb4-5ab0ba4b801d');
INSERT INTO public.directed_edge VALUES ('fdf65bd4-554d-4f71-becc-f5d3f818f4bc', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0ee54310-5f4d-4435-9c34-cf93f742e101', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('feb706d4-f0fb-46dd-8026-5c532a48f8c3', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0ee54310-5f4d-4435-9c34-cf93f742e101', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a');
INSERT INTO public.directed_edge VALUES ('e209b1e5-d359-4a54-90cb-ccf606af1c81', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '0ee54310-5f4d-4435-9c34-cf93f742e101', 'a2b0eaca-aa24-4036-b730-265a97043b75');
INSERT INTO public.directed_edge VALUES ('48567f43-3a30-4e82-ad87-8792258e5dcf', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ca07715c-696e-4a62-af10-74145ff818f5', '96ec8c86-c024-4d03-a283-49375e43e086');
INSERT INTO public.directed_edge VALUES ('17082fad-23a6-433d-829e-91cd17b686bf', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ca07715c-696e-4a62-af10-74145ff818f5', 'c34d4c11-da4f-445d-8682-1c92dcfbb6be');
INSERT INTO public.directed_edge VALUES ('f83600e5-c6df-4a98-b091-e3599aa195a7', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ca07715c-696e-4a62-af10-74145ff818f5', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.directed_edge VALUES ('8c756f06-d21b-4041-bfea-329fb27f7dad', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'ca07715c-696e-4a62-af10-74145ff818f5', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('67002ca1-dd9b-4a77-8cc5-24de016f0833', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '06c5d5cc-5c29-4a74-be75-dfba20cc4f80', '19c5ed05-1a24-4971-9aac-390e1931f010');
INSERT INTO public.directed_edge VALUES ('48e64bb3-0a55-4e9e-bee1-a8a252ca0d9b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '06c5d5cc-5c29-4a74-be75-dfba20cc4f80', '96ec8c86-c024-4d03-a283-49375e43e086');
INSERT INTO public.directed_edge VALUES ('85385468-2251-4d4e-87f1-bdbba1a248e5', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '06c5d5cc-5c29-4a74-be75-dfba20cc4f80', 'a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.directed_edge VALUES ('5febfb4e-9224-4194-bb76-45ddf36b547b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '06c5d5cc-5c29-4a74-be75-dfba20cc4f80', '8c047398-63a1-4940-a5c5-c44834f48516');
INSERT INTO public.directed_edge VALUES ('debec8ee-1793-4165-959e-6beaa4373d2c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9167d0da-69ec-40a5-b7f8-5eab25833d70', '19c5ed05-1a24-4971-9aac-390e1931f010');
INSERT INTO public.directed_edge VALUES ('3ff6f836-3307-4f40-893e-3651c87ae47e', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9167d0da-69ec-40a5-b7f8-5eab25833d70', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8');
INSERT INTO public.directed_edge VALUES ('85dff0d0-c40e-4de9-9c7a-8def2da81d91', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9167d0da-69ec-40a5-b7f8-5eab25833d70', '87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65');
INSERT INTO public.directed_edge VALUES ('3f0060b7-2fb9-4195-a9a9-7c6f804a0356', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9167d0da-69ec-40a5-b7f8-5eab25833d70', '3e74edee-f076-45b3-8247-a5dd19cb24b2');
INSERT INTO public.directed_edge VALUES ('d9c7cc54-7c12-48e9-8a23-a45f08ce91c1', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9167d0da-69ec-40a5-b7f8-5eab25833d70', '7c775873-1ebf-4574-8cb1-29b0c661b8f3');
INSERT INTO public.directed_edge VALUES ('ecd2d1f2-9b59-4370-94ed-7f086c137928', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9167d0da-69ec-40a5-b7f8-5eab25833d70', '3953e924-30f6-4561-8e02-e761b417c1d4');
INSERT INTO public.directed_edge VALUES ('2a29a273-6fca-47a2-9984-d43676f35dbb', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9167d0da-69ec-40a5-b7f8-5eab25833d70', '02fc1261-b7d6-4d85-89ef-c987ab92f3d4');
INSERT INTO public.directed_edge VALUES ('6397931e-5753-405a-a520-ffa43a0ac196', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9167d0da-69ec-40a5-b7f8-5eab25833d70', '78b58f38-9075-44a1-8eb4-5ab0ba4b801d');
INSERT INTO public.directed_edge VALUES ('50be1efa-d001-458d-8acc-be1e6126cf11', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9167d0da-69ec-40a5-b7f8-5eab25833d70', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a');
INSERT INTO public.directed_edge VALUES ('d5e8f426-3595-4c8e-ae48-047a2583819d', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '9167d0da-69ec-40a5-b7f8-5eab25833d70', 'a2b0eaca-aa24-4036-b730-265a97043b75');
INSERT INTO public.directed_edge VALUES ('c3fb2cad-f8d6-438d-89a1-068a8c726f8d', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '712b29e2-411b-4ef8-8f81-6cae15222c07', '5778b4ba-4acd-4c94-9c10-d83d80f75d50');
INSERT INTO public.directed_edge VALUES ('b0bbaa04-bd91-4fbd-ae3b-60f3b3bcfb2f', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '712b29e2-411b-4ef8-8f81-6cae15222c07', 'd89d5a40-b864-4d97-9b44-211ed25c4f98');
INSERT INTO public.directed_edge VALUES ('52c757cd-1ae9-4571-a6b0-d0773dbfc427', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '662ffad9-7dd3-490f-93d2-efb92f74c5ae', '712b29e2-411b-4ef8-8f81-6cae15222c07');
INSERT INTO public.directed_edge VALUES ('9fc69cfd-8b1b-4e3e-975d-6c60751500d6', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '662ffad9-7dd3-490f-93d2-efb92f74c5ae', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('7abde64a-adc6-4421-bb99-12ffd4495bd9', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '662ffad9-7dd3-490f-93d2-efb92f74c5ae', 'b244a2fb-1f27-4e6d-8f43-7e512798f299');
INSERT INTO public.directed_edge VALUES ('3baf8c4d-1eaf-4940-9f77-f6fb35c0e866', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b244a2fb-1f27-4e6d-8f43-7e512798f299', '662ffad9-7dd3-490f-93d2-efb92f74c5ae');
INSERT INTO public.directed_edge VALUES ('5b2941a1-7403-4ab2-9879-859f568b7ae1', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b244a2fb-1f27-4e6d-8f43-7e512798f299', '712b29e2-411b-4ef8-8f81-6cae15222c07');
INSERT INTO public.directed_edge VALUES ('b42de810-478c-4288-b0a9-066e4b34385f', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b244a2fb-1f27-4e6d-8f43-7e512798f299', 'd9bd086d-030c-4ca4-b6d2-29c2fbf517c8');
INSERT INTO public.directed_edge VALUES ('8c800d65-473a-4fd5-a51e-07a22804ef3b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b244a2fb-1f27-4e6d-8f43-7e512798f299', 'b14e9775-09ad-4019-b5db-dd9670221679');
INSERT INTO public.directed_edge VALUES ('28f0a7c9-af63-4e97-8e7c-cb04e614701c', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b244a2fb-1f27-4e6d-8f43-7e512798f299', '329b49fc-de79-4d63-97ca-87a8f83ef1e2');
INSERT INTO public.directed_edge VALUES ('f8d97af8-5a6b-40b3-b93d-13613c946b35', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b244a2fb-1f27-4e6d-8f43-7e512798f299', '26c8f1cb-a592-415e-846e-22f2ee761c8f');
INSERT INTO public.directed_edge VALUES ('87de71fe-8e84-473b-a852-3827ce61e93a', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b244a2fb-1f27-4e6d-8f43-7e512798f299', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.directed_edge VALUES ('c72f28ca-2259-4f5f-9440-7d05971ec737', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b244a2fb-1f27-4e6d-8f43-7e512798f299', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('54ab6958-82d9-4ca4-a8fd-6eba7e6a7d02', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'b244a2fb-1f27-4e6d-8f43-7e512798f299', '0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf');
INSERT INTO public.directed_edge VALUES ('e2d6ac32-1775-4891-a2c8-4d31f5f12467', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '84c81b22-765b-4edb-a6e7-c626151e0af8', 'db5033cf-c13f-47b1-a617-aea77a0d5864');
INSERT INTO public.directed_edge VALUES ('c18aa978-b892-4d91-87e9-0b708aef4e85', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '84c81b22-765b-4edb-a6e7-c626151e0af8', '712b29e2-411b-4ef8-8f81-6cae15222c07');
INSERT INTO public.directed_edge VALUES ('519a995d-73b0-431b-a611-c61c46d73c42', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '84c81b22-765b-4edb-a6e7-c626151e0af8', '9bafcace-20a3-4726-963b-06d09437c677');
INSERT INTO public.directed_edge VALUES ('ea832e71-c0b3-4266-9043-6f0342409f07', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '84c81b22-765b-4edb-a6e7-c626151e0af8', '26c8f1cb-a592-415e-846e-22f2ee761c8f');
INSERT INTO public.directed_edge VALUES ('ddc6e207-a9de-47fe-ba50-7283c74f783b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '84c81b22-765b-4edb-a6e7-c626151e0af8', '53adbbff-f4d6-4bd7-8b90-475f57913c1a');
INSERT INTO public.directed_edge VALUES ('8f7f013b-f51f-41b8-ba9c-c56553f8b63b', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '84c81b22-765b-4edb-a6e7-c626151e0af8', '28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.directed_edge VALUES ('b97dca67-69a0-47ab-9437-d8cb78b72e38', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '84c81b22-765b-4edb-a6e7-c626151e0af8', '0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf');
INSERT INTO public.directed_edge VALUES ('68f42a27-20dc-472b-b96e-a9b5bb627e41', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c699fdf0-f31e-45c0-9d0d-cee2388e1544', '330ba4a6-411d-4d44-913a-2805a9f21cf7');
INSERT INTO public.directed_edge VALUES ('b10dd47b-e302-45d4-8ddf-67969c01bca3', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c699fdf0-f31e-45c0-9d0d-cee2388e1544', '9bafcace-20a3-4726-963b-06d09437c677');
INSERT INTO public.directed_edge VALUES ('1a6c0778-3fe4-4f1b-8716-fdc965b44209', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c699fdf0-f31e-45c0-9d0d-cee2388e1544', 'ef45bb4d-7f1a-4840-9783-aa22ed40032a');
INSERT INTO public.directed_edge VALUES ('372c8c40-fbb2-421d-bd8f-196ac1f28339', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c699fdf0-f31e-45c0-9d0d-cee2388e1544', 'ea7c0692-6545-40e3-8cf8-f4c828c5fce8');
INSERT INTO public.directed_edge VALUES ('7363fff5-9fe6-4505-a0ba-9f010a93f63d', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', 'c699fdf0-f31e-45c0-9d0d-cee2388e1544', 'b244a2fb-1f27-4e6d-8f43-7e512798f299');
INSERT INTO public.directed_edge VALUES ('28bd8e18-2c3a-4643-bd75-2b42c53e3e4e', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '5778b4ba-4acd-4c94-9c10-d83d80f75d50', 'd89d5a40-b864-4d97-9b44-211ed25c4f98');
INSERT INTO public.directed_edge VALUES ('87de42af-27bb-420d-a67d-86e3e132a657', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '5778b4ba-4acd-4c94-9c10-d83d80f75d50', '712b29e2-411b-4ef8-8f81-6cae15222c07');
INSERT INTO public.directed_edge VALUES ('141d2e68-fbb5-49a9-8140-9934f3b54bf3', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '5778b4ba-4acd-4c94-9c10-d83d80f75d50', 'ea7c0692-6545-40e3-8cf8-f4c828c5fce8');
INSERT INTO public.directed_edge VALUES ('d686479b-fcbe-4776-9507-ca1709a26c61', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '5778b4ba-4acd-4c94-9c10-d83d80f75d50', '330ba4a6-411d-4d44-913a-2805a9f21cf7');
INSERT INTO public.directed_edge VALUES ('35a1664f-5168-4bd3-828d-6a46e5202259', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '5778b4ba-4acd-4c94-9c10-d83d80f75d50', '3e74edee-f076-45b3-8247-a5dd19cb24b2');
INSERT INTO public.directed_edge VALUES ('25c2bc26-68b6-4e6a-b051-00e9f82051c7', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '5778b4ba-4acd-4c94-9c10-d83d80f75d50', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('0e9e5106-b1a1-45f8-96a1-dc3e0256dab2', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '5778b4ba-4acd-4c94-9c10-d83d80f75d50', '26c8f1cb-a592-415e-846e-22f2ee761c8f');
INSERT INTO public.directed_edge VALUES ('294e7693-e244-4d7f-8b7f-85fbe20d4adc', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '5778b4ba-4acd-4c94-9c10-d83d80f75d50', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.directed_edge VALUES ('750bb76d-dd7b-4152-b0ce-2882b546cb11', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '38b1dd17-c3ff-46c4-b300-2e1c7d542abe', '330ba4a6-411d-4d44-913a-2805a9f21cf7');
INSERT INTO public.directed_edge VALUES ('37b138d6-0c51-43f1-ad9a-0fbc57858872', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '38b1dd17-c3ff-46c4-b300-2e1c7d542abe', '3e74edee-f076-45b3-8247-a5dd19cb24b2');
INSERT INTO public.directed_edge VALUES ('097d1f8d-d3ad-4a76-9337-3652fee7ac65', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '38b1dd17-c3ff-46c4-b300-2e1c7d542abe', '9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.directed_edge VALUES ('53ceca29-6234-4dfa-8279-84ece0dcfaad', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '38b1dd17-c3ff-46c4-b300-2e1c7d542abe', '26c8f1cb-a592-415e-846e-22f2ee761c8f');
INSERT INTO public.directed_edge VALUES ('b7a9c4a9-74bd-43f4-a770-059c2d08236f', 'null', 'isRelatedTo', 'f6b807aa-5905-4435-aec6-324355a0483f', '38b1dd17-c3ff-46c4-b300-2e1c7d542abe', '3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.directed_edge VALUES ('327ee238-9e58-48c1-af6d-e59a51b8ae36', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '7116be12-b724-456f-ac3d-0a1ab6e85b9a', '358bf776-378f-465e-a9e6-e8a1c7716825');
INSERT INTO public.directed_edge VALUES ('21c379d3-5481-4d7e-98a3-65bbc95f9d94', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '7116be12-b724-456f-ac3d-0a1ab6e85b9a', 'b8e826e0-dc07-4515-ae10-87b402e3d52c');
INSERT INTO public.directed_edge VALUES ('0079b0fb-7991-48e3-9dd4-cd96ef13c5d0', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '7116be12-b724-456f-ac3d-0a1ab6e85b9a', '61130a8b-68ad-4281-80ad-a62d44bc4090');
INSERT INTO public.directed_edge VALUES ('7c3bfe89-7a0a-42a8-9988-c55e0b981440', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '7116be12-b724-456f-ac3d-0a1ab6e85b9a', 'b6436fe2-9e3f-49ac-9e09-5cce86e480e1');
INSERT INTO public.directed_edge VALUES ('e69f0c4a-9559-48f0-975d-2883f5fb2037', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '7116be12-b724-456f-ac3d-0a1ab6e85b9a', 'ce95634f-69e0-4f97-a9b6-10bc8364849f');
INSERT INTO public.directed_edge VALUES ('a9993ec4-7352-4445-af71-9cc635a17922', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '7116be12-b724-456f-ac3d-0a1ab6e85b9a', '3b090377-8703-4cf7-9ce8-a432dce76335');
INSERT INTO public.directed_edge VALUES ('c519040a-2160-45eb-9471-9ff4e7b01d58', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '7116be12-b724-456f-ac3d-0a1ab6e85b9a', '155933df-9d41-4b2d-bdf8-11291fb7084c');
INSERT INTO public.directed_edge VALUES ('5ff87ab7-03e0-4c96-9784-27b83e376f66', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '7f488cff-525f-4e50-a6c6-219b4ab4854d', 'b8e826e0-dc07-4515-ae10-87b402e3d52c');
INSERT INTO public.directed_edge VALUES ('a8968a7e-1dbc-47c2-b9b2-448ae1289f0a', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '7f488cff-525f-4e50-a6c6-219b4ab4854d', '4710c428-a004-4da1-98a8-58205e051ec2');
INSERT INTO public.directed_edge VALUES ('2572c09e-b85a-46c7-b38e-fc444ef782fa', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '9b50b4bf-4b5c-4d52-a7d3-1b0e6a0f53f9', '358bf776-378f-465e-a9e6-e8a1c7716825');
INSERT INTO public.directed_edge VALUES ('93ee235d-91c9-4678-8d03-b3a3debd2d62', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '3baad63c-42d2-46cb-b7a5-ab394b4e012c', 'e6106e4d-46a4-4557-8c2d-009ff7159464');
INSERT INTO public.directed_edge VALUES ('352220bc-1b15-4c6a-94f3-d4e0fecae5bc', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '3baad63c-42d2-46cb-b7a5-ab394b4e012c', '386a4d90-1a3d-427c-96a6-6f1a433daae6');
INSERT INTO public.directed_edge VALUES ('af61ecf7-42e6-4d10-a2f8-f734fa42636e', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd285eda8-41ee-4ba2-879d-52acec6a1416', '2ee3eb24-165d-46d5-976c-9eb052a1912b');
INSERT INTO public.directed_edge VALUES ('7d82c80c-f8f7-40a4-af09-c1d8f8281be1', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd285eda8-41ee-4ba2-879d-52acec6a1416', 'c12b3086-5fa4-4140-915b-330fbffdfc43');
INSERT INTO public.directed_edge VALUES ('68f375b6-0580-434c-8b56-d0e0eb3f31a8', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '68a4bbc9-2535-4cfc-a4f4-b149adfb674a', 'b86f6da4-3c9e-4146-8161-9c806b50b923');
INSERT INTO public.directed_edge VALUES ('8e05aad2-db84-427e-92f9-7d62f1938bfb', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '68a4bbc9-2535-4cfc-a4f4-b149adfb674a', '45fdc628-1914-4b2c-92c4-38f7be3c622a');
INSERT INTO public.directed_edge VALUES ('e074c996-10c5-40b9-afe1-3e913bcd0410', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '68a4bbc9-2535-4cfc-a4f4-b149adfb674a', '5190eb38-48a2-41ee-b85e-dbb3c609ed30');
INSERT INTO public.directed_edge VALUES ('23093c8c-629b-48ad-92b0-ee7cc2b66af3', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '68a4bbc9-2535-4cfc-a4f4-b149adfb674a', 'da3a0878-df45-4eb1-857e-82e5ae055683');
INSERT INTO public.directed_edge VALUES ('d75a9e10-cad1-4c81-9b9a-76ff694f490c', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '358bf776-378f-465e-a9e6-e8a1c7716825', '3baad63c-42d2-46cb-b7a5-ab394b4e012c');
INSERT INTO public.directed_edge VALUES ('2922b0c2-ec44-4309-b319-5043c3574b3c', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '358bf776-378f-465e-a9e6-e8a1c7716825', 'd285eda8-41ee-4ba2-879d-52acec6a1416');
INSERT INTO public.directed_edge VALUES ('5ed3050e-9cd3-4c73-afe3-ecb61a25d1b5', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'b8e826e0-dc07-4515-ae10-87b402e3d52c', '3baad63c-42d2-46cb-b7a5-ab394b4e012c');
INSERT INTO public.directed_edge VALUES ('8814f956-dd01-4541-8284-508f7680f613', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'b8e826e0-dc07-4515-ae10-87b402e3d52c', 'd285eda8-41ee-4ba2-879d-52acec6a1416');
INSERT INTO public.directed_edge VALUES ('7374e68f-fb37-4b40-ac05-8f5c6413a6b5', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'b6436fe2-9e3f-49ac-9e09-5cce86e480e1', '3baad63c-42d2-46cb-b7a5-ab394b4e012c');
INSERT INTO public.directed_edge VALUES ('d0da906c-1571-4b00-b5d6-18c8ea03df56', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'b6436fe2-9e3f-49ac-9e09-5cce86e480e1', 'd285eda8-41ee-4ba2-879d-52acec6a1416');
INSERT INTO public.directed_edge VALUES ('e3ebf6c1-681d-447e-b503-9321c5a6cf23', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'b6436fe2-9e3f-49ac-9e09-5cce86e480e1', '68a4bbc9-2535-4cfc-a4f4-b149adfb674a');
INSERT INTO public.directed_edge VALUES ('d5b289b2-ba6b-4c55-a1e8-b02749dee0d9', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'b6436fe2-9e3f-49ac-9e09-5cce86e480e1', 'd8c99d65-8950-4b83-aa1d-549a88e28339');
INSERT INTO public.directed_edge VALUES ('75f8989b-c4e8-48f9-a3ab-71553e3d3a92', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '61130a8b-68ad-4281-80ad-a62d44bc4090', '358bf776-378f-465e-a9e6-e8a1c7716825');
INSERT INTO public.directed_edge VALUES ('b0fa9b75-a241-4165-8809-38d275a00b24', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '61130a8b-68ad-4281-80ad-a62d44bc4090', 'b6436fe2-9e3f-49ac-9e09-5cce86e480e1');
INSERT INTO public.directed_edge VALUES ('2c207f9d-f77a-4b72-83c9-be53d22806e1', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '61130a8b-68ad-4281-80ad-a62d44bc4090', '3baad63c-42d2-46cb-b7a5-ab394b4e012c');
INSERT INTO public.directed_edge VALUES ('6596eef0-e89b-4b6c-94cb-a02c9f9b1884', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '61130a8b-68ad-4281-80ad-a62d44bc4090', 'd285eda8-41ee-4ba2-879d-52acec6a1416');
INSERT INTO public.directed_edge VALUES ('3517076f-fc9a-4d70-85bb-b638af93db49', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'ce95634f-69e0-4f97-a9b6-10bc8364849f', '407ae0d5-e5be-4151-900b-041ed5dfcdbe');
INSERT INTO public.directed_edge VALUES ('3087280f-3ba1-4d62-ba4f-99c6b1a44052', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'ce95634f-69e0-4f97-a9b6-10bc8364849f', '7c8849ee-26ad-4910-b798-902367e617d6');
INSERT INTO public.directed_edge VALUES ('758f2896-19c3-4195-9fb7-c16142265c39', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'ce95634f-69e0-4f97-a9b6-10bc8364849f', '10a46ac6-1420-41ad-9d3a-ab244d959062');
INSERT INTO public.directed_edge VALUES ('80562857-a891-44d1-a0ef-48016f8a0d9d', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'a81eb2c5-84ce-4a14-8242-e9ce19532423', 'c12b3086-5fa4-4140-915b-330fbffdfc43');
INSERT INTO public.directed_edge VALUES ('1b54de48-9bab-425e-bb37-0cdf78aeaa47', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '9b50b4bf-4b5c-4d52-a7d3-1b0e6a0f53f9', 'b8e826e0-dc07-4515-ae10-87b402e3d52c');
INSERT INTO public.directed_edge VALUES ('bae5ad33-cdd1-4aae-9e90-5013f945b462', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '9b50b4bf-4b5c-4d52-a7d3-1b0e6a0f53f9', 'ce95634f-69e0-4f97-a9b6-10bc8364849f');
INSERT INTO public.directed_edge VALUES ('185a4ef6-dd9c-4ae3-aced-84a6601d9fbc', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '35de7456-fced-4c23-bca5-8777984bf731', 'b8e826e0-dc07-4515-ae10-87b402e3d52c');
INSERT INTO public.directed_edge VALUES ('50bd7404-fbc7-4c52-b81e-e59350fc4d8c', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '35de7456-fced-4c23-bca5-8777984bf731', '358bf776-378f-465e-a9e6-e8a1c7716825');
INSERT INTO public.directed_edge VALUES ('f4424ca7-9235-40eb-b460-69644e610ac9', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '35de7456-fced-4c23-bca5-8777984bf731', 'ce95634f-69e0-4f97-a9b6-10bc8364849f');
INSERT INTO public.directed_edge VALUES ('e0be69a1-7e34-48e9-8831-a008e4f542ff', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '35de7456-fced-4c23-bca5-8777984bf731', '4710c428-a004-4da1-98a8-58205e051ec2');
INSERT INTO public.directed_edge VALUES ('1f4a9f20-4d88-40ab-9628-ef5a39dde857', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '35de7456-fced-4c23-bca5-8777984bf731', 'f675060d-34cd-4af7-abb7-864a8b9adef6');
INSERT INTO public.directed_edge VALUES ('526fb699-7d47-4062-92fe-d0d12e5f18b2', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'b7602673-7825-48e2-829e-b9df269071fc', '358bf776-378f-465e-a9e6-e8a1c7716825');
INSERT INTO public.directed_edge VALUES ('a063086c-8def-46c2-aaf2-3b9c97e858a0', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'b7602673-7825-48e2-829e-b9df269071fc', 'ce95634f-69e0-4f97-a9b6-10bc8364849f');
INSERT INTO public.directed_edge VALUES ('840f9cae-d4c7-4183-a457-487cdf1ef0ae', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'b7602673-7825-48e2-829e-b9df269071fc', '4710c428-a004-4da1-98a8-58205e051ec2');
INSERT INTO public.directed_edge VALUES ('c041c590-b430-4f3a-9049-af1a1e482f64', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '3baad63c-42d2-46cb-b7a5-ab394b4e012c', 'ce95634f-69e0-4f97-a9b6-10bc8364849f');
INSERT INTO public.directed_edge VALUES ('de4479db-be37-46c4-9227-1757326d570c', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '3baad63c-42d2-46cb-b7a5-ab394b4e012c', 'e6e239af-3d3a-4dfb-8c84-cbe268ca90d4');
INSERT INTO public.directed_edge VALUES ('017d541c-9b96-4a18-8973-f4545e30d4aa', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd285eda8-41ee-4ba2-879d-52acec6a1416', 'a81eb2c5-84ce-4a14-8242-e9ce19532423');
INSERT INTO public.directed_edge VALUES ('c337a9c4-1a67-4841-be95-46482a30caa3', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd285eda8-41ee-4ba2-879d-52acec6a1416', '407ae0d5-e5be-4151-900b-041ed5dfcdbe');
INSERT INTO public.directed_edge VALUES ('3f95026d-e0cc-4e07-abbf-1f3bc51a6d17', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '68a4bbc9-2535-4cfc-a4f4-b149adfb674a', '467cae27-d8be-4509-af26-64ed0a809028');
INSERT INTO public.directed_edge VALUES ('042e6b8b-7112-49f4-be31-b097ced2f253', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '68a4bbc9-2535-4cfc-a4f4-b149adfb674a', 'b228d692-009d-4122-b617-1a3799a68766');
INSERT INTO public.directed_edge VALUES ('aa9646ad-e2bf-4b7e-a4f3-931ad80644d7', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '358bf776-378f-465e-a9e6-e8a1c7716825', '68a4bbc9-2535-4cfc-a4f4-b149adfb674a');
INSERT INTO public.directed_edge VALUES ('3a13b90f-e29b-422a-ad8e-3799af398599', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'b8e826e0-dc07-4515-ae10-87b402e3d52c', '358bf776-378f-465e-a9e6-e8a1c7716825');
INSERT INTO public.directed_edge VALUES ('bf324d87-9726-4b77-b02d-5ee2dddaf976', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '61130a8b-68ad-4281-80ad-a62d44bc4090', 'b8e826e0-dc07-4515-ae10-87b402e3d52c');
INSERT INTO public.directed_edge VALUES ('c3e4360d-d8b2-4786-8b41-9479e3883de4', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'ce95634f-69e0-4f97-a9b6-10bc8364849f', 'e6106e4d-46a4-4557-8c2d-009ff7159464');
INSERT INTO public.directed_edge VALUES ('7053c3d2-b35a-43b1-9d56-d366c6d8afbc', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'ce95634f-69e0-4f97-a9b6-10bc8364849f', '3b090377-8703-4cf7-9ce8-a432dce76335');
INSERT INTO public.directed_edge VALUES ('16cee180-d61b-4f24-9037-28c14739341a', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'ce95634f-69e0-4f97-a9b6-10bc8364849f', '4710c428-a004-4da1-98a8-58205e051ec2');
INSERT INTO public.directed_edge VALUES ('722ba0c8-04ee-4069-a3ed-e2054f55e0ea', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'a81eb2c5-84ce-4a14-8242-e9ce19532423', '407ae0d5-e5be-4151-900b-041ed5dfcdbe');
INSERT INTO public.directed_edge VALUES ('53aa6fbe-1fec-4249-bde5-60f87d8d9eca', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'a81eb2c5-84ce-4a14-8242-e9ce19532423', 'ecb7d0a0-72d0-44c3-90dd-5b9af536ebca');
INSERT INTO public.directed_edge VALUES ('390b1370-e3eb-41ed-a562-66e0ee380eae', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'a81eb2c5-84ce-4a14-8242-e9ce19532423', '0a4ffca5-3b28-4897-9842-295f9bb6bea8');
INSERT INTO public.directed_edge VALUES ('9c6469f9-befe-4a87-b6ee-3992e9994a82', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'a81eb2c5-84ce-4a14-8242-e9ce19532423', '467cae27-d8be-4509-af26-64ed0a809028');
INSERT INTO public.directed_edge VALUES ('df69d44c-d289-4001-a88a-207cbde9f28d', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'a81eb2c5-84ce-4a14-8242-e9ce19532423', '7d2e969e-c266-4a83-85a5-5a07d528c6ef');
INSERT INTO public.directed_edge VALUES ('4338f8e8-8fb5-4905-b4be-f43f5fc27532', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'a81eb2c5-84ce-4a14-8242-e9ce19532423', '5d7a8af7-94fb-4c63-958c-403d845d4107');
INSERT INTO public.directed_edge VALUES ('72f35b91-8c45-47d6-80b4-ee757c8f1977', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'a81eb2c5-84ce-4a14-8242-e9ce19532423', '7c8849ee-26ad-4910-b798-902367e617d6');
INSERT INTO public.directed_edge VALUES ('8ac5c79f-ba3d-4107-a04b-9350d18665ae', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'a81eb2c5-84ce-4a14-8242-e9ce19532423', '10a46ac6-1420-41ad-9d3a-ab244d959062');
INSERT INTO public.directed_edge VALUES ('aded138a-dd4a-4769-a443-71a21f9679ec', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'a81eb2c5-84ce-4a14-8242-e9ce19532423', 'cbc6fe12-4a7d-4de5-b709-b20dd0cacbbf');
INSERT INTO public.directed_edge VALUES ('db85a6ae-b5fa-435b-adfa-fa4f3ed2a95f', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '7c8849ee-26ad-4910-b798-902367e617d6', '3b090377-8703-4cf7-9ce8-a432dce76335');
INSERT INTO public.directed_edge VALUES ('6a701a0d-2a1f-4948-9a25-8974a588fbf0', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '7c8849ee-26ad-4910-b798-902367e617d6', '3d6ef3c9-28dd-4d2f-b006-e3427e24c0b0');
INSERT INTO public.directed_edge VALUES ('e88e4592-9cca-43dd-8c09-838e82666ecc', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '10a46ac6-1420-41ad-9d3a-ab244d959062', '358bf776-378f-465e-a9e6-e8a1c7716825');
INSERT INTO public.directed_edge VALUES ('44afb89a-33d2-48dc-b910-8f25b330461d', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '10a46ac6-1420-41ad-9d3a-ab244d959062', '3b090377-8703-4cf7-9ce8-a432dce76335');
INSERT INTO public.directed_edge VALUES ('7e39a218-6077-4b2f-b87c-3bf60d32e0b1', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '10a46ac6-1420-41ad-9d3a-ab244d959062', '3d6ef3c9-28dd-4d2f-b006-e3427e24c0b0');
INSERT INTO public.directed_edge VALUES ('702c7aee-466e-453e-a9b3-239683ce7335', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '2ee3eb24-165d-46d5-976c-9eb052a1912b', 'e6e239af-3d3a-4dfb-8c84-cbe268ca90d4');
INSERT INTO public.directed_edge VALUES ('12b5af32-c3e8-4f8e-b555-50fdd5d3dc63', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'cbc6fe12-4a7d-4de5-b709-b20dd0cacbbf', 'c12b3086-5fa4-4140-915b-330fbffdfc43');
INSERT INTO public.directed_edge VALUES ('942c48fe-8477-40b2-a2ac-c22d88a7dbe9', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'cbc6fe12-4a7d-4de5-b709-b20dd0cacbbf', 'b9484449-18bd-4667-a9e5-1f6bf66d442d');
INSERT INTO public.directed_edge VALUES ('e7789dc0-1488-487d-bb5a-0ab5b2fa3fbb', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'e6106e4d-46a4-4557-8c2d-009ff7159464', '10a46ac6-1420-41ad-9d3a-ab244d959062');
INSERT INTO public.directed_edge VALUES ('97311343-490b-4ea8-862d-5812b5fe1ce2', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '407ae0d5-e5be-4151-900b-041ed5dfcdbe', '7d2e969e-c266-4a83-85a5-5a07d528c6ef');
INSERT INTO public.directed_edge VALUES ('391c6262-5c8d-4be8-8c0c-c00234917132', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'ecb7d0a0-72d0-44c3-90dd-5b9af536ebca', 'cbc6fe12-4a7d-4de5-b709-b20dd0cacbbf');
INSERT INTO public.directed_edge VALUES ('15d53b14-f627-4fc0-906c-8a6cfb17b422', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'ecb7d0a0-72d0-44c3-90dd-5b9af536ebca', 'b228d692-009d-4122-b617-1a3799a68766');
INSERT INTO public.directed_edge VALUES ('c347658e-0967-48a2-b0a2-28faedea0fad', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '386a4d90-1a3d-427c-96a6-6f1a433daae6', 'e6e239af-3d3a-4dfb-8c84-cbe268ca90d4');
INSERT INTO public.directed_edge VALUES ('4455edd9-6f59-4735-ab42-cd89bf727206', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'c12b3086-5fa4-4140-915b-330fbffdfc43', 'd53673f0-fc52-48c8-8893-f8f244cf6ee3');
INSERT INTO public.directed_edge VALUES ('b9501b4f-e6c1-46c1-91a2-d96f554cc257', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'c12b3086-5fa4-4140-915b-330fbffdfc43', '3a1fb1cd-1078-4616-b603-a22c8f9449b2');
INSERT INTO public.directed_edge VALUES ('24876409-b056-46d4-b88d-d5dd3647c873', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd53673f0-fc52-48c8-8893-f8f244cf6ee3', '5d7a8af7-94fb-4c63-958c-403d845d4107');
INSERT INTO public.directed_edge VALUES ('4c8e0532-3d68-4c10-8811-c7a09cd6a35e', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd53673f0-fc52-48c8-8893-f8f244cf6ee3', '80d829b6-d1ed-40a3-95ea-7e0b34de8eba');
INSERT INTO public.directed_edge VALUES ('afe44ffc-4aad-4d37-a35c-694a0e74278e', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'b9484449-18bd-4667-a9e5-1f6bf66d442d', '0a4ffca5-3b28-4897-9842-295f9bb6bea8');
INSERT INTO public.directed_edge VALUES ('406a286c-3cc6-4709-995c-d737722ae605', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'da2bd135-4ba2-4b98-bb77-c60607402094', '4710c428-a004-4da1-98a8-58205e051ec2');
INSERT INTO public.directed_edge VALUES ('9c488436-b059-4d97-ab1f-e2dd4b4879a8', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'da2bd135-4ba2-4b98-bb77-c60607402094', '3d6ef3c9-28dd-4d2f-b006-e3427e24c0b0');
INSERT INTO public.directed_edge VALUES ('52a38030-00ef-4068-bb76-8d9fddabb86c', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '1dafcbc7-f048-4867-ad7f-2d0b40e096e1', '9bcced52-edb3-44a2-a86d-43499ea61289');
INSERT INTO public.directed_edge VALUES ('69e0555c-4d6b-4ac8-88eb-2bbfacd05859', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '1dafcbc7-f048-4867-ad7f-2d0b40e096e1', '0145a85e-3b00-4e64-9e20-bdaf77d2fc86');
INSERT INTO public.directed_edge VALUES ('804118c1-5211-47a7-8be4-68116a0f5b32', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'a6e349c7-d5c0-42a7-bd78-21e4b2738fa7', 'b8e826e0-dc07-4515-ae10-87b402e3d52c');
INSERT INTO public.directed_edge VALUES ('c255f9f7-09c1-450e-ae5f-46a7227c28f7', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'a6e349c7-d5c0-42a7-bd78-21e4b2738fa7', '358bf776-378f-465e-a9e6-e8a1c7716825');
INSERT INTO public.directed_edge VALUES ('0f3d9d8f-9cc9-4c3c-9bdd-1e9a7a11a735', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'a6e349c7-d5c0-42a7-bd78-21e4b2738fa7', '61130a8b-68ad-4281-80ad-a62d44bc4090');
INSERT INTO public.directed_edge VALUES ('10b40973-2676-4446-ad01-94963a2067f9', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'a6e349c7-d5c0-42a7-bd78-21e4b2738fa7', 'b6436fe2-9e3f-49ac-9e09-5cce86e480e1');
INSERT INTO public.directed_edge VALUES ('16c7a497-4c6f-4136-910f-c69baf84bc81', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'a6e349c7-d5c0-42a7-bd78-21e4b2738fa7', '3b090377-8703-4cf7-9ce8-a432dce76335');
INSERT INTO public.directed_edge VALUES ('4d572895-10ad-40ba-8abe-0107977cc7ef', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'a6e349c7-d5c0-42a7-bd78-21e4b2738fa7', '155933df-9d41-4b2d-bdf8-11291fb7084c');
INSERT INTO public.directed_edge VALUES ('c539706e-ff8f-4b7d-9c3c-8ec3eda5b59b', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '0145a85e-3b00-4e64-9e20-bdaf77d2fc86', 'a6e349c7-d5c0-42a7-bd78-21e4b2738fa7');
INSERT INTO public.directed_edge VALUES ('572d4754-ed4a-4c43-bdcb-43fe5974af12', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '0145a85e-3b00-4e64-9e20-bdaf77d2fc86', '467cae27-d8be-4509-af26-64ed0a809028');
INSERT INTO public.directed_edge VALUES ('5f353153-4092-48a8-bc0e-af39370393bb', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '0145a85e-3b00-4e64-9e20-bdaf77d2fc86', '61130a8b-68ad-4281-80ad-a62d44bc4090');
INSERT INTO public.directed_edge VALUES ('c2357ad9-4210-4aa3-a931-4b2e4823eee2', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'e35d735c-f724-4946-aad9-7fa520d5a843', 'd53673f0-fc52-48c8-8893-f8f244cf6ee3');
INSERT INTO public.directed_edge VALUES ('1905161d-7e93-4ffd-a98c-7e56c8c1eaf4', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'e22b33bc-b5cf-4a61-a8e9-dd204c48857b', 'a7bc398e-972a-481f-8c63-b4c5a1b946d9');
INSERT INTO public.directed_edge VALUES ('d4d7e73e-67bc-4e79-b247-7aa96e680dbe', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'e35d735c-f724-4946-aad9-7fa520d5a843', '81dba31f-e19a-4a8b-a07f-e1561fc2ce06');
INSERT INTO public.directed_edge VALUES ('4f879ca8-3096-46f0-8685-8740c522beb0', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'e35d735c-f724-4946-aad9-7fa520d5a843', '4d153210-05d9-43f0-8560-3c3bd722d8bd');
INSERT INTO public.directed_edge VALUES ('5064fc99-6165-4440-92ff-cf1fc133f1dd', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'e22b33bc-b5cf-4a61-a8e9-dd204c48857b', '678a2e5a-697f-4416-afe6-fd18bc935bdc');
INSERT INTO public.directed_edge VALUES ('8ee01a26-937c-47bd-96cd-02ba622c4b11', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '50d0b397-d2df-4797-8975-d2526c8cdd63', 'da2bd135-4ba2-4b98-bb77-c60607402094');
INSERT INTO public.directed_edge VALUES ('e4ba66ef-c0f0-48c9-96f0-76b995ae30f7', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '50d0b397-d2df-4797-8975-d2526c8cdd63', '3b090377-8703-4cf7-9ce8-a432dce76335');
INSERT INTO public.directed_edge VALUES ('5bb5625b-9883-4689-abd2-393100bdfd77', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '9bcced52-edb3-44a2-a86d-43499ea61289', '0a4ffca5-3b28-4897-9842-295f9bb6bea8');
INSERT INTO public.directed_edge VALUES ('3fcd33e6-da8b-4dde-bce3-3870645d4d02', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '9bcced52-edb3-44a2-a86d-43499ea61289', 'ecb7d0a0-72d0-44c3-90dd-5b9af536ebca');
INSERT INTO public.directed_edge VALUES ('ed474a73-d290-436d-901f-f7814af7cf51', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '9bcced52-edb3-44a2-a86d-43499ea61289', 'c12b3086-5fa4-4140-915b-330fbffdfc43');
INSERT INTO public.directed_edge VALUES ('4efe5651-aeba-4c1d-b6fd-8dadc006806d', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '9bcced52-edb3-44a2-a86d-43499ea61289', 'bace6e02-1e3f-4ddc-9e9a-eb04933fa226');
INSERT INTO public.directed_edge VALUES ('5022a1b6-6c37-4b05-b31c-c718f357a38a', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '9bcced52-edb3-44a2-a86d-43499ea61289', '801d44ab-fc18-4cc0-8e10-49f2e73b229a');
INSERT INTO public.directed_edge VALUES ('aa1222ac-65a3-4a66-af76-8bc421160433', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '9bcced52-edb3-44a2-a86d-43499ea61289', '3b090377-8703-4cf7-9ce8-a432dce76335');
INSERT INTO public.directed_edge VALUES ('332ca78f-c90b-4e54-a489-5fc566abe98f', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '9bcced52-edb3-44a2-a86d-43499ea61289', '4710c428-a004-4da1-98a8-58205e051ec2');
INSERT INTO public.directed_edge VALUES ('6f93f26e-5f3c-4655-96e9-730785a12f51', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '4710c428-a004-4da1-98a8-58205e051ec2', 'bace6e02-1e3f-4ddc-9e9a-eb04933fa226');
INSERT INTO public.directed_edge VALUES ('b6203f27-40a1-4f89-b3f4-037acdb9aa34', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '4710c428-a004-4da1-98a8-58205e051ec2', '801d44ab-fc18-4cc0-8e10-49f2e73b229a');
INSERT INTO public.directed_edge VALUES ('a6027478-7db7-4206-a8bf-3c35df937e84', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '4710c428-a004-4da1-98a8-58205e051ec2', '15da23b4-5ad5-44ff-8936-140dd98935df');
INSERT INTO public.directed_edge VALUES ('20379bdd-58ba-4661-8980-1681c93e14c8', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '4710c428-a004-4da1-98a8-58205e051ec2', '7d2e969e-c266-4a83-85a5-5a07d528c6ef');
INSERT INTO public.directed_edge VALUES ('9c38d039-7a68-40e0-b48b-c54a82067796', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '4710c428-a004-4da1-98a8-58205e051ec2', 'b9484449-18bd-4667-a9e5-1f6bf66d442d');
INSERT INTO public.directed_edge VALUES ('97734a6c-d120-47c0-8ad9-1408596e32c2', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '4710c428-a004-4da1-98a8-58205e051ec2', 'cd686d46-c77f-4c35-8016-f9819282f8a5');
INSERT INTO public.directed_edge VALUES ('1677e424-89f7-4ef0-803c-06cc81bca232', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'bace6e02-1e3f-4ddc-9e9a-eb04933fa226', '15da23b4-5ad5-44ff-8936-140dd98935df');
INSERT INTO public.directed_edge VALUES ('918524d5-88c8-4091-bbfb-95dcea288e7e', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'bace6e02-1e3f-4ddc-9e9a-eb04933fa226', '7d2e969e-c266-4a83-85a5-5a07d528c6ef');
INSERT INTO public.directed_edge VALUES ('e1509fe8-6ed3-4f31-af46-fdc0e17676ab', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '801d44ab-fc18-4cc0-8e10-49f2e73b229a', '7d2e969e-c266-4a83-85a5-5a07d528c6ef');
INSERT INTO public.directed_edge VALUES ('c9db4513-b524-47c3-9170-461a7402ef68', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '801d44ab-fc18-4cc0-8e10-49f2e73b229a', '3b090377-8703-4cf7-9ce8-a432dce76335');
INSERT INTO public.directed_edge VALUES ('24a7897b-8f3a-4b8d-9e76-b005864a08d0', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '3b090377-8703-4cf7-9ce8-a432dce76335', '3d6ef3c9-28dd-4d2f-b006-e3427e24c0b0');
INSERT INTO public.directed_edge VALUES ('dce0c73e-1778-4429-b3ef-f6c927bb5762', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '3b090377-8703-4cf7-9ce8-a432dce76335', '4710c428-a004-4da1-98a8-58205e051ec2');
INSERT INTO public.directed_edge VALUES ('aebe63f0-2d02-432e-bae0-a91faedd3533', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '3b090377-8703-4cf7-9ce8-a432dce76335', '5d7a8af7-94fb-4c63-958c-403d845d4107');
INSERT INTO public.directed_edge VALUES ('9879d836-010c-46a8-b6ce-68103c663737', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '15da23b4-5ad5-44ff-8936-140dd98935df', '599e5d49-ede8-489b-bb72-3e41c288ae89');
INSERT INTO public.directed_edge VALUES ('461c6220-e280-4d06-8ff6-13491aa90da7', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '15da23b4-5ad5-44ff-8936-140dd98935df', 'f675060d-34cd-4af7-abb7-864a8b9adef6');
INSERT INTO public.directed_edge VALUES ('51fc08c0-e9d6-4c17-a3cc-885aba62c825', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '15da23b4-5ad5-44ff-8936-140dd98935df', '155933df-9d41-4b2d-bdf8-11291fb7084c');
INSERT INTO public.directed_edge VALUES ('9bb6707e-929c-4844-809f-3f0cb8aeea6b', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '15da23b4-5ad5-44ff-8936-140dd98935df', 'ce95634f-69e0-4f97-a9b6-10bc8364849f');
INSERT INTO public.directed_edge VALUES ('22b2d00c-ee40-4dc1-a653-717e1d9e8e6e', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '15da23b4-5ad5-44ff-8936-140dd98935df', 'a81eb2c5-84ce-4a14-8242-e9ce19532423');
INSERT INTO public.directed_edge VALUES ('ba076f37-d716-4350-92ec-c0266c241864', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '15da23b4-5ad5-44ff-8936-140dd98935df', '7d2e969e-c266-4a83-85a5-5a07d528c6ef');
INSERT INTO public.directed_edge VALUES ('add2e991-36b7-4066-bb16-a08fd4af8a96', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'f675060d-34cd-4af7-abb7-864a8b9adef6', '9bcced52-edb3-44a2-a86d-43499ea61289');
INSERT INTO public.directed_edge VALUES ('bd3b32fa-5809-4caf-83b0-18471ce33563', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '155933df-9d41-4b2d-bdf8-11291fb7084c', '7d2e969e-c266-4a83-85a5-5a07d528c6ef');
INSERT INTO public.directed_edge VALUES ('003ab855-b9d4-4f3d-9763-be90af960cf9', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '155933df-9d41-4b2d-bdf8-11291fb7084c', '55f886b3-4fe0-4bc8-8bde-d0b7004a70ee');
INSERT INTO public.directed_edge VALUES ('ff627251-50cc-41a6-b377-1ba67338ae23', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '155933df-9d41-4b2d-bdf8-11291fb7084c', '9bcced52-edb3-44a2-a86d-43499ea61289');
INSERT INTO public.directed_edge VALUES ('dbb88960-0088-4a87-96fe-38e1c6e1efa9', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '3d6ef3c9-28dd-4d2f-b006-e3427e24c0b0', '7d2e969e-c266-4a83-85a5-5a07d528c6ef');
INSERT INTO public.directed_edge VALUES ('097d4c68-248b-444f-956a-4033dcc01cd8', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'f53f1daa-1eda-4fd9-966f-3f14c107930a', '2fb586fd-9982-4f4e-987b-17909069e10e');
INSERT INTO public.directed_edge VALUES ('90595f84-30ef-4fde-ade6-f278b1759a27', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'f53f1daa-1eda-4fd9-966f-3f14c107930a', 'e4e0fe4d-8757-4253-95de-a6f13ea66f30');
INSERT INTO public.directed_edge VALUES ('7a19af22-6f6d-4248-b817-0a939ce07695', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'f53f1daa-1eda-4fd9-966f-3f14c107930a', '34b02438-ceaf-4177-9a3e-74f907cfd63d');
INSERT INTO public.directed_edge VALUES ('e3b01cad-2df1-472e-b927-3e2b50421773', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'f53f1daa-1eda-4fd9-966f-3f14c107930a', '10edf46a-113f-4688-9af6-75494b950fbf');
INSERT INTO public.directed_edge VALUES ('b5699520-c12f-4c2a-be77-6c39006f66d8', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '47e05a38-2201-49f2-80e6-17d618ed260f', 'e4e0fe4d-8757-4253-95de-a6f13ea66f30');
INSERT INTO public.directed_edge VALUES ('a8554113-1606-400b-b769-aaae5a06f896', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '000904c1-aa91-498b-88da-d6cb014931df', 'a7bc398e-972a-481f-8c63-b4c5a1b946d9');
INSERT INTO public.directed_edge VALUES ('16df7700-d228-4927-a8e4-113c5183336e', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '000904c1-aa91-498b-88da-d6cb014931df', '47e05a38-2201-49f2-80e6-17d618ed260f');
INSERT INTO public.directed_edge VALUES ('b9222f88-de63-4bc1-a782-85b9debed750', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'e6e239af-3d3a-4dfb-8c84-cbe268ca90d4', 'a81eb2c5-84ce-4a14-8242-e9ce19532423');
INSERT INTO public.directed_edge VALUES ('f277d52a-c115-4fcc-8b75-1ee3d400e4d0', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'b8e826e0-dc07-4515-ae10-87b402e3d52c', '68a4bbc9-2535-4cfc-a4f4-b149adfb674a');
INSERT INTO public.directed_edge VALUES ('b66c77fe-e071-4f1f-bce9-f345b800b51e', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'b8e826e0-dc07-4515-ae10-87b402e3d52c', 'd8c99d65-8950-4b83-aa1d-549a88e28339');
INSERT INTO public.directed_edge VALUES ('51f8d013-a99a-444c-a45a-e46f49aa7ceb', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '7f488cff-525f-4e50-a6c6-219b4ab4854d', '358bf776-378f-465e-a9e6-e8a1c7716825');
INSERT INTO public.directed_edge VALUES ('16ff179b-8a8b-4d7a-80c8-5196c6c560e9', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'cbc6fe12-4a7d-4de5-b709-b20dd0cacbbf', '3b090377-8703-4cf7-9ce8-a432dce76335');
INSERT INTO public.directed_edge VALUES ('07fb7b6b-1ea9-401c-bd97-2ef6897c3f59', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'c12b3086-5fa4-4140-915b-330fbffdfc43', '80d829b6-d1ed-40a3-95ea-7e0b34de8eba');
INSERT INTO public.directed_edge VALUES ('6712a17d-ad13-42a5-a062-b9e9165e770b', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '55f886b3-4fe0-4bc8-8bde-d0b7004a70ee', '467cae27-d8be-4509-af26-64ed0a809028');
INSERT INTO public.directed_edge VALUES ('3d21bd90-58f0-4be4-82e4-4e6ee29b6b63', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '55f886b3-4fe0-4bc8-8bde-d0b7004a70ee', 'f53f1daa-1eda-4fd9-966f-3f14c107930a');
INSERT INTO public.directed_edge VALUES ('545bc329-9e44-45f4-a6d2-00f85048104f', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '55f886b3-4fe0-4bc8-8bde-d0b7004a70ee', 'e6e239af-3d3a-4dfb-8c84-cbe268ca90d4');
INSERT INTO public.directed_edge VALUES ('8d384048-ebe7-45f8-9578-2335ecd70700', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '55f886b3-4fe0-4bc8-8bde-d0b7004a70ee', '81dba31f-e19a-4a8b-a07f-e1561fc2ce06');
INSERT INTO public.directed_edge VALUES ('115bdc13-e083-4d03-84dc-e53a0ab2155d', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '55f886b3-4fe0-4bc8-8bde-d0b7004a70ee', 'c12b3086-5fa4-4140-915b-330fbffdfc43');
INSERT INTO public.directed_edge VALUES ('b61c6ce3-7d4e-44ef-aa39-4d2e1f5e7aa7', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '55f886b3-4fe0-4bc8-8bde-d0b7004a70ee', '3b090377-8703-4cf7-9ce8-a432dce76335');
INSERT INTO public.directed_edge VALUES ('e97fe313-6764-4088-afd9-f9dbc19e6f4a', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '467cae27-d8be-4509-af26-64ed0a809028', '358bf776-378f-465e-a9e6-e8a1c7716825');
INSERT INTO public.directed_edge VALUES ('c1b0433f-f1cc-4a6a-a319-c528d2218b33', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '467cae27-d8be-4509-af26-64ed0a809028', 'b8e826e0-dc07-4515-ae10-87b402e3d52c');
INSERT INTO public.directed_edge VALUES ('11867493-1025-4b26-aa9a-77b6dc63ea67', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '467cae27-d8be-4509-af26-64ed0a809028', '61130a8b-68ad-4281-80ad-a62d44bc4090');
INSERT INTO public.directed_edge VALUES ('6dfcb025-c063-4ba3-bc7e-7ea8f727dfae', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '467cae27-d8be-4509-af26-64ed0a809028', 'b6436fe2-9e3f-49ac-9e09-5cce86e480e1');
INSERT INTO public.directed_edge VALUES ('8e58dcdd-b74b-46d2-9db6-b5e0c4367bc8', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '467cae27-d8be-4509-af26-64ed0a809028', 'ce95634f-69e0-4f97-a9b6-10bc8364849f');
INSERT INTO public.directed_edge VALUES ('f7480043-247e-40ab-b646-aed700a267b4', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '467cae27-d8be-4509-af26-64ed0a809028', '3b090377-8703-4cf7-9ce8-a432dce76335');
INSERT INTO public.directed_edge VALUES ('4456da36-d0b1-4d96-ac08-7cf2cf486958', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '467cae27-d8be-4509-af26-64ed0a809028', '155933df-9d41-4b2d-bdf8-11291fb7084c');
INSERT INTO public.directed_edge VALUES ('678fbd31-8605-41b0-9592-bd34fb2fa88b', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'b86f6da4-3c9e-4146-8161-9c806b50b923', '9bcced52-edb3-44a2-a86d-43499ea61289');
INSERT INTO public.directed_edge VALUES ('f10d0972-0951-4932-99b6-cdd5f3c84c3c', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'b86f6da4-3c9e-4146-8161-9c806b50b923', 'f69638dc-6844-415c-a679-d3982c691f38');
INSERT INTO public.directed_edge VALUES ('1bd7a661-bd31-43ed-888f-bb492b07a314', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'b86f6da4-3c9e-4146-8161-9c806b50b923', '81dba31f-e19a-4a8b-a07f-e1561fc2ce06');
INSERT INTO public.directed_edge VALUES ('4ef47ebd-7090-4df5-aacc-426c5212b464', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '7d2e969e-c266-4a83-85a5-5a07d528c6ef', 'ecb7d0a0-72d0-44c3-90dd-5b9af536ebca');
INSERT INTO public.directed_edge VALUES ('242b9b64-197e-434f-882c-06f62923fa04', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '7d2e969e-c266-4a83-85a5-5a07d528c6ef', 'c12b3086-5fa4-4140-915b-330fbffdfc43');
INSERT INTO public.directed_edge VALUES ('4727007e-c3ee-42e3-9bc3-ba5c6466b8f1', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '6d763f90-d7d4-4d58-a82c-09bb68ac6b82', 'bace6e02-1e3f-4ddc-9e9a-eb04933fa226');
INSERT INTO public.directed_edge VALUES ('135607aa-08d4-429c-b9d2-5ed5afba6a25', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '6d763f90-d7d4-4d58-a82c-09bb68ac6b82', '9bcced52-edb3-44a2-a86d-43499ea61289');
INSERT INTO public.directed_edge VALUES ('1a173f72-ac5b-48fb-ad73-2c4d9c7b0bf0', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '6d763f90-d7d4-4d58-a82c-09bb68ac6b82', '94331ad5-4f67-4183-8fbe-55fe9c542789');
INSERT INTO public.directed_edge VALUES ('68d64494-4e3f-4923-8b1b-a769fb5f5b70', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '6d763f90-d7d4-4d58-a82c-09bb68ac6b82', 'da2bd135-4ba2-4b98-bb77-c60607402094');
INSERT INTO public.directed_edge VALUES ('018c157b-7f1a-4804-af23-9447f174f25f', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '6d763f90-d7d4-4d58-a82c-09bb68ac6b82', '5d7a8af7-94fb-4c63-958c-403d845d4107');
INSERT INTO public.directed_edge VALUES ('93367959-99c2-42ac-897b-63665b3e05ef', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '6d763f90-d7d4-4d58-a82c-09bb68ac6b82', 'b9484449-18bd-4667-a9e5-1f6bf66d442d');
INSERT INTO public.directed_edge VALUES ('31e8b479-fb3a-4e12-ba70-bdb12f5bda98', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '6d763f90-d7d4-4d58-a82c-09bb68ac6b82', 'cd686d46-c77f-4c35-8016-f9819282f8a5');
INSERT INTO public.directed_edge VALUES ('2232ba03-b57e-40be-994d-aa58f8d88660', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '0b5ba218-dcb1-4841-a517-b6010b8a2951', '0a4ffca5-3b28-4897-9842-295f9bb6bea8');
INSERT INTO public.directed_edge VALUES ('6fce8697-25b8-46d6-ad45-846972662261', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '0b5ba218-dcb1-4841-a517-b6010b8a2951', 'ecb7d0a0-72d0-44c3-90dd-5b9af536ebca');
INSERT INTO public.directed_edge VALUES ('ddaf2f44-a28b-4f80-b2dd-3430c622a112', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '0b5ba218-dcb1-4841-a517-b6010b8a2951', 'b228d692-009d-4122-b617-1a3799a68766');
INSERT INTO public.directed_edge VALUES ('5d489c9f-7c78-4880-bacd-c7d79181b1c8', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '0b5ba218-dcb1-4841-a517-b6010b8a2951', '9bcced52-edb3-44a2-a86d-43499ea61289');
INSERT INTO public.directed_edge VALUES ('01c4554f-ed6a-44cc-a5e5-fb72da83aa6c', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '0b5ba218-dcb1-4841-a517-b6010b8a2951', 'd8c99d65-8950-4b83-aa1d-549a88e28339');
INSERT INTO public.directed_edge VALUES ('1b2216f0-b945-4fec-b5a9-8413f2aaa185', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '0b5ba218-dcb1-4841-a517-b6010b8a2951', 'da2bd135-4ba2-4b98-bb77-c60607402094');
INSERT INTO public.directed_edge VALUES ('2b8faa47-e41d-432a-8191-838e4b7a9b00', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '0b5ba218-dcb1-4841-a517-b6010b8a2951', '5d7a8af7-94fb-4c63-958c-403d845d4107');
INSERT INTO public.directed_edge VALUES ('9c259098-390e-43a6-a36c-a5956ba2f85a', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '0b5ba218-dcb1-4841-a517-b6010b8a2951', 'b9484449-18bd-4667-a9e5-1f6bf66d442d');
INSERT INTO public.directed_edge VALUES ('e85e16df-0e6a-4f10-8bf2-b10ccb365a6c', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '0b5ba218-dcb1-4841-a517-b6010b8a2951', 'cd686d46-c77f-4c35-8016-f9819282f8a5');
INSERT INTO public.directed_edge VALUES ('3baf103d-5885-4afe-a5d6-0b63fb0ecf27', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd8c99d65-8950-4b83-aa1d-549a88e28339', 'c12b3086-5fa4-4140-915b-330fbffdfc43');
INSERT INTO public.directed_edge VALUES ('f27e3a9b-073e-4a0c-a0f1-cdb07b477d44', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd8c99d65-8950-4b83-aa1d-549a88e28339', '801d44ab-fc18-4cc0-8e10-49f2e73b229a');
INSERT INTO public.directed_edge VALUES ('3b5761b4-6c0c-4d3a-945e-8750727da9d0', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd8c99d65-8950-4b83-aa1d-549a88e28339', 'da2bd135-4ba2-4b98-bb77-c60607402094');
INSERT INTO public.directed_edge VALUES ('63f4f1ad-6256-4a2c-a926-138427c3f3ca', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd8c99d65-8950-4b83-aa1d-549a88e28339', '5d7a8af7-94fb-4c63-958c-403d845d4107');
INSERT INTO public.directed_edge VALUES ('ed219c86-0e9e-4447-bb50-6248e78c42b3', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd8c99d65-8950-4b83-aa1d-549a88e28339', 'b9484449-18bd-4667-a9e5-1f6bf66d442d');
INSERT INTO public.directed_edge VALUES ('9d3ae39c-bd1a-4ffb-8724-a404a7a34e1f', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd8c99d65-8950-4b83-aa1d-549a88e28339', 'cd686d46-c77f-4c35-8016-f9819282f8a5');
INSERT INTO public.directed_edge VALUES ('243ba99c-d240-41f1-97ec-fccafb5b14fd', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '94331ad5-4f67-4183-8fbe-55fe9c542789', '55f886b3-4fe0-4bc8-8bde-d0b7004a70ee');
INSERT INTO public.directed_edge VALUES ('5b73a257-df52-42d3-bf2e-2d34f4a5ba12', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '94331ad5-4f67-4183-8fbe-55fe9c542789', '55f886b3-4fe0-4bc8-8bde-d0b7004a70ee');
INSERT INTO public.directed_edge VALUES ('d5729565-9e4d-4ff3-90e7-9476d054f7bf', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '94331ad5-4f67-4183-8fbe-55fe9c542789', 'b86f6da4-3c9e-4146-8161-9c806b50b923');
INSERT INTO public.directed_edge VALUES ('7fa44360-7c75-48b6-9eee-b6cc6af75ac7', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '94331ad5-4f67-4183-8fbe-55fe9c542789', '7d2e969e-c266-4a83-85a5-5a07d528c6ef');
INSERT INTO public.directed_edge VALUES ('5dd6e2eb-d47e-44bb-8a88-59a1cfe73306', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '5d7a8af7-94fb-4c63-958c-403d845d4107', '4d153210-05d9-43f0-8560-3c3bd722d8bd');
INSERT INTO public.directed_edge VALUES ('7871e270-69b7-495b-a14f-9bcc547499be', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '5d7a8af7-94fb-4c63-958c-403d845d4107', '80d829b6-d1ed-40a3-95ea-7e0b34de8eba');
INSERT INTO public.directed_edge VALUES ('8e265171-cb72-4313-a34f-7332056f54bb', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '5d7a8af7-94fb-4c63-958c-403d845d4107', '81dba31f-e19a-4a8b-a07f-e1561fc2ce06');
INSERT INTO public.directed_edge VALUES ('6c30a570-67f6-48c7-8d31-504b8f3e10dc', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '5d7a8af7-94fb-4c63-958c-403d845d4107', 'b228d692-009d-4122-b617-1a3799a68766');
INSERT INTO public.directed_edge VALUES ('1bea86a4-6644-492a-b6d1-58c0bf96d573', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'b9484449-18bd-4667-a9e5-1f6bf66d442d', '3a1fb1cd-1078-4616-b603-a22c8f9449b2');
INSERT INTO public.directed_edge VALUES ('9484679d-c597-4596-a321-533e96ae3f86', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'a6e349c7-d5c0-42a7-bd78-21e4b2738fa7', 'ce95634f-69e0-4f97-a9b6-10bc8364849f');
INSERT INTO public.directed_edge VALUES ('192c1003-6524-4984-8ac0-56978acb77eb', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'e22b33bc-b5cf-4a61-a8e9-dd204c48857b', '10edf46a-113f-4688-9af6-75494b950fbf');
INSERT INTO public.directed_edge VALUES ('431db850-475e-40b9-8ab5-4f89656456af', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'e22b33bc-b5cf-4a61-a8e9-dd204c48857b', '1dafcbc7-f048-4867-ad7f-2d0b40e096e1');
INSERT INTO public.directed_edge VALUES ('e368a405-6081-4386-bbed-445335a56fd3', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'e22b33bc-b5cf-4a61-a8e9-dd204c48857b', '0145a85e-3b00-4e64-9e20-bdaf77d2fc86');
INSERT INTO public.directed_edge VALUES ('c258b2b7-9892-440c-89e2-591667a9fc3f', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'e22b33bc-b5cf-4a61-a8e9-dd204c48857b', 'a6e349c7-d5c0-42a7-bd78-21e4b2738fa7');
INSERT INTO public.directed_edge VALUES ('2a76c1b3-a111-48ab-b6a1-921e4b7439dd', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'e22b33bc-b5cf-4a61-a8e9-dd204c48857b', 'e35d735c-f724-4946-aad9-7fa520d5a843');
INSERT INTO public.directed_edge VALUES ('9d9a52a9-a3fc-471d-be58-c040056364a1', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '9bcced52-edb3-44a2-a86d-43499ea61289', '407ae0d5-e5be-4151-900b-041ed5dfcdbe');
INSERT INTO public.directed_edge VALUES ('5bb78d07-fc0a-48ae-85b3-2892d2e33526', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '801d44ab-fc18-4cc0-8e10-49f2e73b229a', '15da23b4-5ad5-44ff-8936-140dd98935df');
INSERT INTO public.directed_edge VALUES ('d4a694fa-e2f4-4cf0-a094-8c781ddfad6c', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '3d6ef3c9-28dd-4d2f-b006-e3427e24c0b0', '15da23b4-5ad5-44ff-8936-140dd98935df');
INSERT INTO public.directed_edge VALUES ('e72e7a0c-dbb5-4928-bba2-418bd0970353', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '10edf46a-113f-4688-9af6-75494b950fbf', '678a2e5a-697f-4416-afe6-fd18bc935bdc');
INSERT INTO public.directed_edge VALUES ('9df6305d-bcbc-4fc3-9022-2506b14322dd', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '10edf46a-113f-4688-9af6-75494b950fbf', 'e4e0fe4d-8757-4253-95de-a6f13ea66f30');
INSERT INTO public.directed_edge VALUES ('d96b0fed-ab68-49f5-9ffe-fdac0286cac1', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '10edf46a-113f-4688-9af6-75494b950fbf', 'b228d692-009d-4122-b617-1a3799a68766');
INSERT INTO public.directed_edge VALUES ('0c523701-e839-46a9-a2a4-b91e1d4af557', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '10edf46a-113f-4688-9af6-75494b950fbf', 'd6d9a4e5-0944-4360-8af9-77d6f780716e');
INSERT INTO public.directed_edge VALUES ('deef0d73-c959-4319-9543-74c840dc2e7e', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'e4e0fe4d-8757-4253-95de-a6f13ea66f30', 'f69638dc-6844-415c-a679-d3982c691f38');
INSERT INTO public.directed_edge VALUES ('ff6d9165-0fcc-4f48-9a40-b5c40b1ff1ed', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'e4e0fe4d-8757-4253-95de-a6f13ea66f30', '81dba31f-e19a-4a8b-a07f-e1561fc2ce06');
INSERT INTO public.directed_edge VALUES ('8707ed6b-30ad-4c53-ad18-327900cf61cf', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '000904c1-aa91-498b-88da-d6cb014931df', '5d7a8af7-94fb-4c63-958c-403d845d4107');
INSERT INTO public.directed_edge VALUES ('6ae9b2d3-d0bd-4a57-a5dd-205dd6f95ac2', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '000904c1-aa91-498b-88da-d6cb014931df', '5d7a8af7-94fb-4c63-958c-403d845d4107');
INSERT INTO public.directed_edge VALUES ('1bca3823-0587-42c3-b9e1-a5af2739d34a', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '000904c1-aa91-498b-88da-d6cb014931df', 'a7bc398e-972a-481f-8c63-b4c5a1b946d9');
INSERT INTO public.directed_edge VALUES ('9ae13474-1d2e-4d90-a86b-469ba36fe691', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '000904c1-aa91-498b-88da-d6cb014931df', '678a2e5a-697f-4416-afe6-fd18bc935bdc');
INSERT INTO public.directed_edge VALUES ('49f5a7da-b810-4ae6-9e43-7fb882f54570', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '000904c1-aa91-498b-88da-d6cb014931df', '34b02438-ceaf-4177-9a3e-74f907cfd63d');
INSERT INTO public.directed_edge VALUES ('21e383a4-b8b1-4f94-bb11-e72085273655', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '000904c1-aa91-498b-88da-d6cb014931df', '7d2e969e-c266-4a83-85a5-5a07d528c6ef');
INSERT INTO public.directed_edge VALUES ('273d4da3-26e1-4d30-8440-ec51788dcb78', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '000904c1-aa91-498b-88da-d6cb014931df', '47e05a38-2201-49f2-80e6-17d618ed260f');
INSERT INTO public.directed_edge VALUES ('a7923874-5ddc-4e47-b6c3-7d8662d362a7', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'a7bc398e-972a-481f-8c63-b4c5a1b946d9', '5d7a8af7-94fb-4c63-958c-403d845d4107');
INSERT INTO public.directed_edge VALUES ('638dd3f7-3306-4077-9ba5-7100cf98920d', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'a7bc398e-972a-481f-8c63-b4c5a1b946d9', '47e05a38-2201-49f2-80e6-17d618ed260f');
INSERT INTO public.directed_edge VALUES ('a951454f-3ccd-4093-81e3-6d1469c3a307', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'a7bc398e-972a-481f-8c63-b4c5a1b946d9', '0b5ba218-dcb1-4841-a517-b6010b8a2951');
INSERT INTO public.directed_edge VALUES ('8cb4f965-47b7-48f0-b14f-75cf4756cf27', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '2fb586fd-9982-4f4e-987b-17909069e10e', 'e35d735c-f724-4946-aad9-7fa520d5a843');
INSERT INTO public.directed_edge VALUES ('5085b7e5-7354-49fd-96c9-db231e02414f', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '678a2e5a-697f-4416-afe6-fd18bc935bdc', 'd8c99d65-8950-4b83-aa1d-549a88e28339');
INSERT INTO public.directed_edge VALUES ('969e0d9b-bddc-463f-83eb-051d295721ee', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '678a2e5a-697f-4416-afe6-fd18bc935bdc', '47e05a38-2201-49f2-80e6-17d618ed260f');
INSERT INTO public.directed_edge VALUES ('73a5d431-3f62-4dc6-9684-2d19f9f387c3', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '678a2e5a-697f-4416-afe6-fd18bc935bdc', 'f53f1daa-1eda-4fd9-966f-3f14c107930a');
INSERT INTO public.directed_edge VALUES ('5c8d18ac-bdf8-4fea-a794-7b6ce409bb7c', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '34b02438-ceaf-4177-9a3e-74f907cfd63d', 'c12b3086-5fa4-4140-915b-330fbffdfc43');
INSERT INTO public.directed_edge VALUES ('61ca60ce-a427-405a-8d87-bf01bdaad952', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '34b02438-ceaf-4177-9a3e-74f907cfd63d', 'a7bc398e-972a-481f-8c63-b4c5a1b946d9');
INSERT INTO public.directed_edge VALUES ('0168fdfc-fe43-44df-8a62-9cad073da235', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '34b02438-ceaf-4177-9a3e-74f907cfd63d', '10edf46a-113f-4688-9af6-75494b950fbf');
INSERT INTO public.directed_edge VALUES ('be200c98-4491-4f32-b648-a93ea5b8baff', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '34b02438-ceaf-4177-9a3e-74f907cfd63d', 'e35d735c-f724-4946-aad9-7fa520d5a843');
INSERT INTO public.directed_edge VALUES ('c3cb7c5f-f6a5-4f61-9352-d0fa821a24d1', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '34b02438-ceaf-4177-9a3e-74f907cfd63d', '6d763f90-d7d4-4d58-a82c-09bb68ac6b82');
INSERT INTO public.directed_edge VALUES ('0ebed20b-519c-4db3-81bd-36257858b1f2', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '34b02438-ceaf-4177-9a3e-74f907cfd63d', '0b5ba218-dcb1-4841-a517-b6010b8a2951');
INSERT INTO public.directed_edge VALUES ('11da955a-3d93-49ea-b0df-809c7bfaa21b', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', '34b02438-ceaf-4177-9a3e-74f907cfd63d', 'b228d692-009d-4122-b617-1a3799a68766');
INSERT INTO public.directed_edge VALUES ('619f093d-20dc-4f04-b292-13c0fc648130', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd6d9a4e5-0944-4360-8af9-77d6f780716e', 'e4e0fe4d-8757-4253-95de-a6f13ea66f30');
INSERT INTO public.directed_edge VALUES ('69438eea-8972-4083-9472-065d3fba3e96', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd6d9a4e5-0944-4360-8af9-77d6f780716e', '34b02438-ceaf-4177-9a3e-74f907cfd63d');
INSERT INTO public.directed_edge VALUES ('b078bf14-b597-4500-9e89-ca933b95a826', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd6d9a4e5-0944-4360-8af9-77d6f780716e', '47e05a38-2201-49f2-80e6-17d618ed260f');
INSERT INTO public.directed_edge VALUES ('6fd1f16a-c2fd-4197-bec2-b09c1a62452e', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd6d9a4e5-0944-4360-8af9-77d6f780716e', 'f53f1daa-1eda-4fd9-966f-3f14c107930a');
INSERT INTO public.directed_edge VALUES ('b88eb04d-bcb4-485f-802d-da9d9ea05611', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd6db370c-42eb-414b-80b7-af50c14fb7e4', '47e05a38-2201-49f2-80e6-17d618ed260f');
INSERT INTO public.directed_edge VALUES ('ed4b3c2e-df0a-447b-9eac-023d4ba19915', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd6db370c-42eb-414b-80b7-af50c14fb7e4', '47e05a38-2201-49f2-80e6-17d618ed260f');
INSERT INTO public.directed_edge VALUES ('1ed76f36-c639-4b63-8e0d-14982e4daca3', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd6db370c-42eb-414b-80b7-af50c14fb7e4', 'e35d735c-f724-4946-aad9-7fa520d5a843');
INSERT INTO public.directed_edge VALUES ('26f45a04-8c3c-47e2-86d2-6f2d4d6f37a2', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd6db370c-42eb-414b-80b7-af50c14fb7e4', '47e05a38-2201-49f2-80e6-17d618ed260f');
INSERT INTO public.directed_edge VALUES ('5a579ef2-e198-4acc-9efa-24e1fa9d0151', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd6db370c-42eb-414b-80b7-af50c14fb7e4', '10edf46a-113f-4688-9af6-75494b950fbf');
INSERT INTO public.directed_edge VALUES ('fadbf3cc-e783-4e32-bb14-e7b65e3a232c', 'null', 'isRelatedTo', 'efdc1625-6445-4662-a37e-5f1fd37a542b', 'd6db370c-42eb-414b-80b7-af50c14fb7e4', '0145a85e-3b00-4e64-9e20-bdaf77d2fc86');
INSERT INTO public.directed_edge VALUES ('ac15ff2f-dddc-4434-ae0a-b9a85e2ef7cb', '"You can limit the blast radius of changes by dividing environments into separate stacks. One obvious way to do this is the copy-paste environment, where each environment is a separate stack project, although this is considered an antipattern."', 'isRelatedTo', '66540853-0299-4815-ac1b-6d2d1ba369d0', 'b4ea4a4a-e892-4780-80d9-40d6a20e8f6f', '1463b4df-ea4f-44c9-952c-a5612f2016b6');
INSERT INTO public.directed_edge VALUES ('02a41572-d1c0-448a-b805-b5bddfc1377c', '"The reusable stack is an improvement on the copy-paste environment antipattern, making it easier to keep multiple instances consistent."', 'isVariationOf', '66540853-0299-4815-ac1b-6d2d1ba369d0', 'a614b4ee-e8e3-4600-8324-c170e1b69ec0', '1463b4df-ea4f-44c9-952c-a5612f2016b6');
INSERT INTO public.directed_edge VALUES ('937320cb-1dc5-441b-a765-2390e24020fe', '"The scripted parameters pattern takes the command that you would type and puts it into a script."', 'isVariationOf', '66540853-0299-4815-ac1b-6d2d1ba369d0', '3339fd4b-158d-4a83-9591-a1dba018e238', '72e1d670-0d69-4f26-98b3-d216a2f00107');
INSERT INTO public.directed_edge VALUES ('d0501166-4fa5-4577-91c9-22d23ede6eca', '"You probably need to pass at least one parameter to the stack tool to indicate which stack instance''s parameters to use. You can use either the stack provisioning script or pipeline stack parameter pattern for this."', 'uses', '66540853-0299-4815-ac1b-6d2d1ba369d0', 'c0a25c90-aebe-4fbf-8579-358afa157d21', '3339fd4b-158d-4a83-9591-a1dba018e238');
INSERT INTO public.directed_edge VALUES ('202ffbcc-51ea-44bb-87a6-271de9643fa3', '"You probably need to pass at least one parameter to the stack tool to indicate which stack instance''s parameters to use. You can use either the stack provisioning script or pipeline stack parameter pattern for this."', 'uses', '66540853-0299-4815-ac1b-6d2d1ba369d0', 'c0a25c90-aebe-4fbf-8579-358afa157d21', '3cbcb60b-853f-46c0-beb7-f63fa6e9bc12');
INSERT INTO public.directed_edge VALUES ('329375ae-9384-4632-ac63-4cc897b49d46', '"This antipattern combines the persistent test stack pattern and the ephemeral test stack pattern."', 'consistsOf', '66540853-0299-4815-ac1b-6d2d1ba369d0', '2dec367b-fbf3-4e33-bf1b-1ab7581a9e51', '5afb64cd-694b-45f1-bf2c-c371373aaee3');
INSERT INTO public.directed_edge VALUES ('b0243901-aecc-4482-b338-a146e13d5df1', '"This antipattern combines the persistent test stack pattern and the ephemeral test stack pattern."', 'consistsOf', '66540853-0299-4815-ac1b-6d2d1ba369d0', '2dec367b-fbf3-4e33-bf1b-1ab7581a9e51', '91a39a34-5f79-477a-8bdb-b248ef79b4cc');
INSERT INTO public.directed_edge VALUES ('5dc3282e-c8c5-4aef-83c4-2e6febc15b84', '"An alternative to this antipattern is continuous synchronization."', 'isAlternativeTo', '66540853-0299-4815-ac1b-6d2d1ba369d0', 'eae90baf-ea92-4a7e-ae12-7f6119cfb376', '45559bb5-24ff-4432-9bb1-8802778180cd');
INSERT INTO public.directed_edge VALUES ('8f651a58-de48-4b0e-a4db-4a5acc160bfc', 'null', 'isAlternativeTo', '66540853-0299-4815-ac1b-6d2d1ba369d0', 'eae90baf-ea92-4a7e-ae12-7f6119cfb376', '45559bb5-24ff-4432-9bb1-8802778180cd');
INSERT INTO public.directed_edge VALUES ('5e71c362-8944-4c78-b626-2b6e1c497878', 'null', 'isAlternativeTo', '66540853-0299-4815-ac1b-6d2d1ba369d0', '2cd1fca5-139f-4159-a040-fd6b59449398', '45559bb5-24ff-4432-9bb1-8802778180cd');
INSERT INTO public.directed_edge VALUES ('b0c4ef0b-6499-431c-b828-803321530248', '"An unshared module may map closely to lower-level infrastructure elements, like a facade module, or to a higher-level entity, like an infrastructure domain entity."', 'isRelatedTo', '66540853-0299-4815-ac1b-6d2d1ba369d0', 'd5da5afa-d17d-4ab5-a56c-a399a0bf376a', 'df903950-138e-45ae-8fdd-787dcfdeb5f1');
INSERT INTO public.directed_edge VALUES ('a975e930-cfb8-489f-8792-6ea7c544a24d', '"The immutable server pattern is another example of build-time integration over delivery-time integration."', 'isRelatedTo', '66540853-0299-4815-ac1b-6d2d1ba369d0', 'de2064d4-c769-409f-92c5-665f6da84635', '2cd1fca5-139f-4159-a040-fd6b59449398');


--
-- TOC entry 3242 (class 0 OID 16433)
-- Dependencies: 213
-- Data for Name: directed_hyperedge; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3243 (class 0 OID 16439)
-- Dependencies: 214
-- Data for Name: directed_hyperedge_source_set; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3244 (class 0 OID 16442)
-- Dependencies: 215
-- Data for Name: directed_hyperedge_target_set; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3246 (class 0 OID 16448)
-- Dependencies: 217
-- Data for Name: discussion_topic; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3245 (class 0 OID 16445)
-- Dependencies: 216
-- Data for Name: discussion_comment; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3248 (class 0 OID 16456)
-- Dependencies: 219
-- Data for Name: image; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3249 (class 0 OID 16462)
-- Dependencies: 220
-- Data for Name: issue; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3250 (class 0 OID 16468)
-- Dependencies: 221
-- Data for Name: issue_comment; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3251 (class 0 OID 16471)
-- Dependencies: 222
-- Data for Name: issue_comment_rating; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3252 (class 0 OID 16474)
-- Dependencies: 223
-- Data for Name: issue_rating; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3255 (class 0 OID 16489)
-- Dependencies: 226
-- Data for Name: pattern_schema; Type: TABLE DATA; Schema: public; Owner: patternatlas
--

INSERT INTO public.pattern_schema VALUES ('efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.pattern_schema VALUES ('f6b807aa-5905-4435-aec6-324355a0483f');
INSERT INTO public.pattern_schema VALUES ('af7780d5-1f97-4536-8da7-4194b093ab1d');
INSERT INTO public.pattern_schema VALUES ('66540853-0299-4815-ac1b-6d2d1ba369d0');


--
-- TOC entry 3257 (class 0 OID 16498)
-- Dependencies: 228
-- Data for Name: pattern_section_schema; Type: TABLE DATA; Schema: public; Owner: patternatlas
--

INSERT INTO public.pattern_section_schema VALUES ('4dfd71ac-9829-46f7-b526-8a4b5939304f', 'Intend', 'Intend', 0, 'any', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.pattern_section_schema VALUES ('82b92200-13c3-4cec-a2cc-70a16d30ee83', 'Icon', 'Icon', 1, 'any', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.pattern_section_schema VALUES ('cedaaddc-54cf-40a6-b122-0a94f280bb28', 'Solution Sketch', 'Solution Sketch', 5, 'any', 'efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.pattern_section_schema VALUES ('3ce9b308-6bf8-44f0-9e82-b52a74b596bd', 'Icon', 'Icon', 0, 'any', 'f6b807aa-5905-4435-aec6-324355a0483f');
INSERT INTO public.pattern_section_schema VALUES ('4e16bd83-a1ee-45be-811e-9bdefe9a95e7', 'Driving Question', 'Driving Question', 1, 'any', 'f6b807aa-5905-4435-aec6-324355a0483f');
INSERT INTO public.pattern_section_schema VALUES ('04345c00-198a-4496-ae0c-a35a734042b9', 'Sketch', 'Sketch', 2, 'any', 'f6b807aa-5905-4435-aec6-324355a0483f');
INSERT INTO public.pattern_section_schema VALUES ('3ce9b308-6bf8-4445-9e82-b52a74b596bd', 'Solution', 'Solution', 3, 'any', 'f6b807aa-5905-4435-aec6-324355a0483f');
INSERT INTO public.pattern_section_schema VALUES ('7c72f432-6adc-4af5-a58d-b737de629ce7', 'Intent', 'Intent', 0, 'any', 'af7780d5-1f97-4536-8da7-4194b093ab1d');
INSERT INTO public.pattern_section_schema VALUES ('1956440b-e6c6-4f0b-ad86-75611de40f3e', 'Alias', 'Alias', 1, 'any', 'af7780d5-1f97-4536-8da7-4194b093ab1d');
INSERT INTO public.pattern_section_schema VALUES ('bfd946ae-be80-499b-862b-cf910fb35c5d', 'Context', 'Context', 2, 'any', 'af7780d5-1f97-4536-8da7-4194b093ab1d');
INSERT INTO public.pattern_section_schema VALUES ('6f28f031-36ef-415a-9854-b088093f419b', 'Solution', 'Solution', 3, 'any', 'af7780d5-1f97-4536-8da7-4194b093ab1d');
INSERT INTO public.pattern_section_schema VALUES ('2f2845d2-89d2-482d-81b9-8bd9e0074da3', 'Result', 'Result', 4, 'any', 'af7780d5-1f97-4536-8da7-4194b093ab1d');
INSERT INTO public.pattern_section_schema VALUES ('15392092-3e5b-4e90-8994-5924da1c42ff', 'Related Pattern', 'Related Pattern', 5, 'any', 'af7780d5-1f97-4536-8da7-4194b093ab1d');
INSERT INTO public.pattern_section_schema VALUES ('2545d861-de4f-495f-a1bc-89ccd8e311a0', 'Known Uses', 'Known Uses', 6, 'any', 'af7780d5-1f97-4536-8da7-4194b093ab1d');
INSERT INTO public.pattern_section_schema VALUES ('65d051c8-204a-46b5-bfc6-bcd2f04e8a5b', 'Icon', 'Icon', 0, 'any', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.pattern_section_schema VALUES ('1aab0d5e-44b4-4615-b456-1599e7225f0a', 'Type', 'Type', 1, 'any', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.pattern_section_schema VALUES ('8825af8e-ddb6-4e9d-bb4c-66825cd69fe9', 'Context', 'Context', 2, 'any', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.pattern_section_schema VALUES ('edbee997-e029-46cf-86b2-c5ae673640ed', 'Motivation', 'Motivation', 3, 'any', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.pattern_section_schema VALUES ('9e591f87-3953-44e8-92ff-0b54e0e06040', 'Applicability', 'Applicability', 4, 'any', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.pattern_section_schema VALUES ('ea8366b8-52e3-4f73-bb62-b40e00dae756', 'Consequences', 'Consequences', 5, 'any', '66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.pattern_section_schema VALUES ('8b81cb02-4220-47ac-b97d-4e17a3b3f2ea', 'Implementation', 'Implementation', 6, 'any', '66540853-0299-4815-ac1b-6d2d1ba369d0');


--
-- TOC entry 3256 (class 0 OID 16492)
-- Dependencies: 227
-- Data for Name: pattern_section; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3258 (class 0 OID 16504)
-- Dependencies: 229
-- Data for Name: pattern_section_schema_pattern_sections; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3259 (class 0 OID 16507)
-- Dependencies: 230
-- Data for Name: pattern_view; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3260 (class 0 OID 16513)
-- Dependencies: 231
-- Data for Name: pattern_view_directed_edge; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3261 (class 0 OID 16516)
-- Dependencies: 232
-- Data for Name: pattern_view_pattern; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3262 (class 0 OID 16519)
-- Dependencies: 233
-- Data for Name: pattern_view_undirected_edge; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3263 (class 0 OID 16522)
-- Dependencies: 234
-- Data for Name: privilege; Type: TABLE DATA; Schema: public; Owner: patternatlas
--

INSERT INTO public.privilege VALUES ('2dd99322-adeb-49f1-a88b-088829fdbad5', 'ISSUE_CREATE');
INSERT INTO public.privilege VALUES ('024eb53a-8e75-4109-b00e-e35aff24b2e5', 'ISSUE_READ_ALL');
INSERT INTO public.privilege VALUES ('b2403c34-3894-4a63-8628-ba8c96477cf3', 'ISSUE_EDIT_ALL');
INSERT INTO public.privilege VALUES ('5d574f21-5151-4ad6-93db-024452630ea5', 'ISSUE_DELETE_ALL');
INSERT INTO public.privilege VALUES ('7cd08260-e6d7-45f0-bea2-26b854a54f06', 'ISSUE_TO_PATTERN_CANDIDATE_ALL');
INSERT INTO public.privilege VALUES ('d0b0db3d-c368-42f5-9a05-cfe89d284636', 'PATTERN_CANDIDATE_CREATE');
INSERT INTO public.privilege VALUES ('5d164e4a-1130-4cc2-8070-a23680e245ae', 'PATTERN_CANDIDATE_READ_ALL');
INSERT INTO public.privilege VALUES ('5353ddd2-e720-460f-a887-b95a9f036091', 'PATTERN_CANDIDATE_EDIT_ALL');
INSERT INTO public.privilege VALUES ('99739159-5f6b-4031-8bdd-b570dcc9ca30', 'PATTERN_CANDIDATE_DELETE_ALL');
INSERT INTO public.privilege VALUES ('e125fbed-daa1-4a17-b4da-ab69758ff580', 'PATTERN_CANDIDATE_TO_PATTERN_ALL');
INSERT INTO public.privilege VALUES ('0a138873-1e76-411f-b792-3df50f76898a', 'APPROVED_PATTERN_CREATE');
INSERT INTO public.privilege VALUES ('2fe73819-7c3b-473c-bd75-80d7bd99a9cf', 'APPROVED_PATTERN_READ_ALL');
INSERT INTO public.privilege VALUES ('a7a4ef2b-5def-4daf-b844-5a553810ed8c', 'APPROVED_PATTERN_EDIT_ALL');
INSERT INTO public.privilege VALUES ('551f5827-6f07-4aef-83ee-80c9ea239718', 'APPROVED_PATTERN_DELETE_ALL');
INSERT INTO public.privilege VALUES ('903617a7-54c2-4d36-a9f0-4879f606a394', 'USER_READ');
INSERT INTO public.privilege VALUES ('958f608e-95d1-4c74-a324-c0b121106d72', 'USER_CREATE');
INSERT INTO public.privilege VALUES ('9e4658a6-17f9-4e74-9f3a-b9fc1d75d1d9', 'USER_EDIT');
INSERT INTO public.privilege VALUES ('6ffb7514-159c-4cdf-aa50-c0d5f536fa75', 'USER_DELETE');
INSERT INTO public.privilege VALUES ('f7f13e40-456a-4c3f-aaf7-6ff9733a0534', 'USER_READ_ALL');
INSERT INTO public.privilege VALUES ('b152095d-d21b-4c7a-bf16-68e990b298f8', 'USER_EDIT_ALL');
INSERT INTO public.privilege VALUES ('596995c3-286e-4eea-996d-830f4ce3b0c0', 'USER_DELETE_ALL');
INSERT INTO public.privilege VALUES ('bb6f4e60-08a2-48d2-b0da-69eab58d39e8', 'USER_ALL');
INSERT INTO public.privilege VALUES ('7727e4db-f892-440f-aeaf-86cf09275800', 'COMMENT');
INSERT INTO public.privilege VALUES ('3b9fd885-a4c9-4f6a-bcf3-e2d01daed51d', 'VOTE');
INSERT INTO public.privilege VALUES ('2fdfcb48-1ae2-4cd9-b8da-844b4da44373', 'EVIDENCE');
INSERT INTO public.privilege VALUES ('0dc48afa-c73e-4959-9e34-b010322d77ee', 'PATTERN_LANGUAGE_READ_efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.privilege VALUES ('2e061dec-b307-4eee-8057-7ea46cd4864f', 'PATTERN_LANGUAGE_READ_f6b807aa-5905-4435-aec6-324355a0483f');
INSERT INTO public.privilege VALUES ('da0e4b51-81c6-420b-be24-522e043b4fda', 'PATTERN_LANGUAGE_READ_af7780d5-1f97-4536-8da7-4194b093ab1d');
INSERT INTO public.privilege VALUES ('3c6b0122-bcd9-42d5-8f4a-5f2e3cf5f2d4', 'PATTERN_LANGUAGE_READ_66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.privilege VALUES ('710e3324-4b94-4c27-b9cd-c99b56ee4784', 'PATTERN_LANGUAGE_EDIT_efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.privilege VALUES ('84812ee3-98d3-4a2a-8d49-b0ff4f1360a7', 'PATTERN_LANGUAGE_EDIT_f6b807aa-5905-4435-aec6-324355a0483f');
INSERT INTO public.privilege VALUES ('3abb65f2-0200-4713-a5ed-4c5ada0f0092', 'PATTERN_LANGUAGE_EDIT_af7780d5-1f97-4536-8da7-4194b093ab1d');
INSERT INTO public.privilege VALUES ('294b3688-884f-4c88-9403-46bfd9f11abe', 'PATTERN_LANGUAGE_EDIT_66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.privilege VALUES ('65ce5320-332a-467b-8db3-b9343d2be54f', 'PATTERN_LANGUAGE_DELETE_efdc1625-6445-4662-a37e-5f1fd37a542b');
INSERT INTO public.privilege VALUES ('7bb31e11-394c-4401-b889-25e92ae004fd', 'PATTERN_LANGUAGE_DELETE_f6b807aa-5905-4435-aec6-324355a0483f');
INSERT INTO public.privilege VALUES ('79f7314a-64c0-47b3-944d-5ae4ee1a0177', 'PATTERN_LANGUAGE_DELETE_af7780d5-1f97-4536-8da7-4194b093ab1d');
INSERT INTO public.privilege VALUES ('4d32857b-1fbb-4961-aed4-0893ace00370', 'PATTERN_LANGUAGE_DELETE_66540853-0299-4815-ac1b-6d2d1ba369d0');
INSERT INTO public.privilege VALUES ('0ce4d253-55ba-4e6a-a08d-ab03edd836eb', 'APPROVED_PATTERN_READ_1a1b9319-e303-431d-91c3-f4a3b6189982');
INSERT INTO public.privilege VALUES ('1fc013c6-4973-4aae-a988-a7b22252d4ac', 'APPROVED_PATTERN_READ_9bafcace-20a3-4726-963b-06d09437c677');
INSERT INTO public.privilege VALUES ('73647e0c-5e9a-4876-b8f9-67b1df3d8dd1', 'APPROVED_PATTERN_READ_26c8f1cb-a592-415e-846e-22f2ee761c8f');
INSERT INTO public.privilege VALUES ('1711ef84-1139-4851-be7c-ab8f712bb691', 'APPROVED_PATTERN_READ_d89d5a40-b864-4d97-9b44-211ed25c4f98');
INSERT INTO public.privilege VALUES ('1e0b0d28-35e6-409d-8df6-63529bb94773', 'APPROVED_PATTERN_READ_c56361d3-4230-4653-942b-fc8ac7488bf9');
INSERT INTO public.privilege VALUES ('dda9a10e-e66a-40af-a299-5a4731a4cfde', 'APPROVED_PATTERN_READ_19c5ed05-1a24-4971-9aac-390e1931f010');
INSERT INTO public.privilege VALUES ('dad27216-ba96-430a-8eb0-de8aa4ec0eab', 'APPROVED_PATTERN_READ_b14e9775-09ad-4019-b5db-dd9670221679');
INSERT INTO public.privilege VALUES ('df6c2ff2-6e3f-4519-b123-96b069527a3f', 'APPROVED_PATTERN_READ_f3afc386-7c81-41d1-9b94-a06a49deb965');
INSERT INTO public.privilege VALUES ('1911fc73-f43f-4702-a3b2-3f2ad542ecdb', 'APPROVED_PATTERN_READ_ef45bb4d-7f1a-4840-9783-aa22ed40032a');
INSERT INTO public.privilege VALUES ('d351e762-9ec1-4251-beaf-ad84d85bcdad', 'APPROVED_PATTERN_READ_ea7c0692-6545-40e3-8cf8-f4c828c5fce8');
INSERT INTO public.privilege VALUES ('f13214e6-3ede-4e7d-b8ae-e4ec5a93ba85', 'APPROVED_PATTERN_READ_330ba4a6-411d-4d44-913a-2805a9f21cf7');
INSERT INTO public.privilege VALUES ('39ffdd05-dcaf-431e-bb63-fced88edb95c', 'APPROVED_PATTERN_READ_acb053d6-b8be-4bce-b62d-3a8aa10b9a0d');
INSERT INTO public.privilege VALUES ('1a6e32e2-48f4-41b5-a04c-535ff837a7ef', 'APPROVED_PATTERN_READ_045e55b5-bc6e-4787-adf6-0cacfddfead4');
INSERT INTO public.privilege VALUES ('47da300f-1ecd-4091-959a-9dfd03871333', 'APPROVED_PATTERN_READ_c34d4c11-da4f-445d-8682-1c92dcfbb6be');
INSERT INTO public.privilege VALUES ('f0af0656-c011-4ac8-83d5-19c9af4ea0cb', 'APPROVED_PATTERN_READ_01d63259-109f-4136-878d-77e503ac8a11');
INSERT INTO public.privilege VALUES ('14b43607-a552-455d-9a18-e0eb67ef101d', 'APPROVED_PATTERN_READ_9c49472d-47fc-417e-b75a-512d57e76870');
INSERT INTO public.privilege VALUES ('5e1ad4d5-0ba2-4944-9d06-be760f29a942', 'APPROVED_PATTERN_READ_be9c4245-79db-40cd-a0d4-c750c3a822b6');
INSERT INTO public.privilege VALUES ('fe906304-d2b1-499d-b8ae-764c0d1a7751', 'APPROVED_PATTERN_READ_0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf');
INSERT INTO public.privilege VALUES ('75b77b2c-60e0-4dc5-bbaf-db2b1b47f896', 'APPROVED_PATTERN_READ_7d28fe21-466a-4e22-9851-374e9cb93cd9');
INSERT INTO public.privilege VALUES ('b56362b9-f9fd-48d3-9b37-e03e35d8c935', 'APPROVED_PATTERN_READ_db5033cf-c13f-47b1-a617-aea77a0d5864');
INSERT INTO public.privilege VALUES ('a839718b-615e-4299-a366-5d6dda227a58', 'APPROVED_PATTERN_READ_8c047398-63a1-4940-a5c5-c44834f48516');
INSERT INTO public.privilege VALUES ('823bade2-48c2-48f0-9eb1-850270f68ea4', 'APPROVED_PATTERN_READ_885ade35-d310-421a-98b8-877e27e51531');
INSERT INTO public.privilege VALUES ('1c389a31-5407-4a2e-a4f8-b417c3fb62c0', 'APPROVED_PATTERN_READ_ba3aaa33-9010-459f-acb5-5452788e9abc');
INSERT INTO public.privilege VALUES ('96a1c978-29e5-46f0-ae78-bceace4b073a', 'APPROVED_PATTERN_READ_c7e15bdd-a5f3-486d-8e3d-f3117f39eb1a');
INSERT INTO public.privilege VALUES ('a9e5b144-999f-453b-9fc3-f4f40f4f8738', 'APPROVED_PATTERN_READ_53adbbff-f4d6-4bd7-8b90-475f57913c1a');
INSERT INTO public.privilege VALUES ('a1b91377-4b86-4e51-a8d0-cc46a8370194', 'APPROVED_PATTERN_READ_329b49fc-de79-4d63-97ca-87a8f83ef1e2');
INSERT INTO public.privilege VALUES ('590b76a9-da73-453a-8ecf-53b24d0a13b6', 'APPROVED_PATTERN_READ_29f4224d-6b91-4218-aed6-0db3e5fa9dc2');
INSERT INTO public.privilege VALUES ('0edf566c-a221-4a6e-b201-9429b82123ed', 'APPROVED_PATTERN_READ_658b6fce-40b0-4f05-a2da-2fd3e33684fb');
INSERT INTO public.privilege VALUES ('7166b7cf-6c09-4b8b-bafb-0b7c1ca8ea25', 'APPROVED_PATTERN_READ_b3418862-26a6-4bbb-b546-c12f48c45b16');
INSERT INTO public.privilege VALUES ('816f891e-818a-405b-bddb-11872097f435', 'APPROVED_PATTERN_READ_26bc2583-1c9f-4d6e-9968-e5aa0e8ab82f');
INSERT INTO public.privilege VALUES ('9a63c007-ae60-425a-b164-7f748d8b154f', 'APPROVED_PATTERN_READ_6c3f4121-65c2-444e-9d5a-f16f47fd2ed5');
INSERT INTO public.privilege VALUES ('c590ebc5-a91b-4f48-a7f2-19bea7714daa', 'APPROVED_PATTERN_READ_89dd6672-dd42-470b-8e84-129e4ec7540c');
INSERT INTO public.privilege VALUES ('7f2e92bb-2755-420c-a639-252d3d151662', 'APPROVED_PATTERN_READ_98ccd4dc-86a8-4652-b2c1-5b83b6f078e1');
INSERT INTO public.privilege VALUES ('bd99351f-14d9-475a-9ba0-08a4e2062ac8', 'APPROVED_PATTERN_READ_3953e924-30f6-4561-8e02-e761b417c1d4');
INSERT INTO public.privilege VALUES ('5bae84d5-b8ad-4b7e-a39f-21b06d649534', 'APPROVED_PATTERN_READ_02fc1261-b7d6-4d85-89ef-c987ab92f3d4');
INSERT INTO public.privilege VALUES ('6e897621-36a2-4f63-b185-00c2a73b8f1e', 'APPROVED_PATTERN_READ_29acda13-a41f-4270-9248-375814889f20');
INSERT INTO public.privilege VALUES ('885a9bc9-a6c8-431e-af23-1df1657b5ab2', 'APPROVED_PATTERN_READ_7116be12-b724-456f-ac3d-0a1ab6e85b9a');
INSERT INTO public.privilege VALUES ('927d6e90-eb0d-4f37-b961-7e2036ffb92d', 'APPROVED_PATTERN_READ_a2b0eaca-aa24-4036-b730-265a97043b75');
INSERT INTO public.privilege VALUES ('d2e2814b-3dc2-4c86-af54-f2fa54e1978a', 'APPROVED_PATTERN_READ_78b58f38-9075-44a1-8eb4-5ab0ba4b801d');
INSERT INTO public.privilege VALUES ('51e9a09c-1239-4f9f-b30a-5f335dc83882', 'APPROVED_PATTERN_READ_87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65');
INSERT INTO public.privilege VALUES ('186fcaa2-7ac0-41c6-a798-defe1c021462', 'APPROVED_PATTERN_READ_d9bd086d-030c-4ca4-b6d2-29c2fbf517c8');
INSERT INTO public.privilege VALUES ('fc9fc7a3-06a5-4e45-be82-c39d82f89611', 'APPROVED_PATTERN_READ_7c775873-1ebf-4574-8cb1-29b0c661b8f3');
INSERT INTO public.privilege VALUES ('df4ac8fd-4288-49fc-9c14-492d0691e79d', 'APPROVED_PATTERN_READ_0ee54310-5f4d-4435-9c34-cf93f742e101');
INSERT INTO public.privilege VALUES ('8c71ca65-2c2e-4e73-ae6e-d09589f96694', 'APPROVED_PATTERN_READ_ca07715c-696e-4a62-af10-74145ff818f5');
INSERT INTO public.privilege VALUES ('d42e347e-a185-4240-8366-6e35c6b4c27f', 'APPROVED_PATTERN_READ_06c5d5cc-5c29-4a74-be75-dfba20cc4f80');
INSERT INTO public.privilege VALUES ('20cf203e-3562-4420-ad95-4092b3b6c1ab', 'APPROVED_PATTERN_READ_9167d0da-69ec-40a5-b7f8-5eab25833d70');
INSERT INTO public.privilege VALUES ('2437f09e-2e3c-4112-9d2f-d56c2c148bbc', 'APPROVED_PATTERN_READ_3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.privilege VALUES ('b65792fc-c323-4b6d-96ec-37908a394f15', 'APPROVED_PATTERN_READ_28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.privilege VALUES ('bb99ff1a-afb5-467c-95f3-18a81e39c28f', 'APPROVED_PATTERN_READ_cf3a2b5f-9d7a-4f2c-ba39-ab2911d3a7d7');
INSERT INTO public.privilege VALUES ('9d6d9889-fc42-4c9b-9694-822c010ce1ca', 'APPROVED_PATTERN_READ_6e2eacf0-d026-4a00-8ca4-157298b75f0f');
INSERT INTO public.privilege VALUES ('b31b4cb3-3389-4927-9148-a387edcbbf29', 'APPROVED_PATTERN_READ_3e74edee-f076-45b3-8247-a5dd19cb24b2');
INSERT INTO public.privilege VALUES ('52e49481-3798-477b-9639-ac009861e33b', 'APPROVED_PATTERN_READ_78185c7d-f353-49ee-b1e2-c2a0bcfc4ed2');
INSERT INTO public.privilege VALUES ('0fe1f4b4-3254-4cc4-9c95-579882715f0c', 'APPROVED_PATTERN_READ_96ec8c86-c024-4d03-a283-49375e43e086');
INSERT INTO public.privilege VALUES ('88e42fdb-c035-4c09-804e-973aa66afa3b', 'APPROVED_PATTERN_READ_b5c458ea-3a4e-4211-afc9-82510c2cff46');
INSERT INTO public.privilege VALUES ('817c7211-46ba-4307-b357-500195135e3a', 'APPROVED_PATTERN_READ_adcaac7d-a028-4d33-9111-ef3e711637e7');
INSERT INTO public.privilege VALUES ('96ab9687-e990-4694-b1e3-3dc33f23a67f', 'APPROVED_PATTERN_READ_ccb661e2-6c0d-4020-9eb2-abd290230b5b');
INSERT INTO public.privilege VALUES ('fd93c53b-66fe-494e-be66-756b641d5e7d', 'APPROVED_PATTERN_READ_712b29e2-411b-4ef8-8f81-6cae15222c07');
INSERT INTO public.privilege VALUES ('469592ab-e9dd-41ff-862a-2e354a3b801b', 'APPROVED_PATTERN_READ_662ffad9-7dd3-490f-93d2-efb92f74c5ae');
INSERT INTO public.privilege VALUES ('2a49687a-0516-424d-9aa2-6e2ce85ea44d', 'APPROVED_PATTERN_READ_b244a2fb-1f27-4e6d-8f43-7e512798f299');
INSERT INTO public.privilege VALUES ('51600aae-e6ca-48f4-9ed3-6dc4931dac60', 'APPROVED_PATTERN_READ_84c81b22-765b-4edb-a6e7-c626151e0af8');
INSERT INTO public.privilege VALUES ('31cbdaee-141c-452e-8877-107e63476763', 'APPROVED_PATTERN_READ_c699fdf0-f31e-45c0-9d0d-cee2388e1544');
INSERT INTO public.privilege VALUES ('f7220a8d-093a-4f09-a25e-6d1594491388', 'APPROVED_PATTERN_READ_467cae27-d8be-4509-af26-64ed0a809028');
INSERT INTO public.privilege VALUES ('9c2877bb-bdaf-43d4-a2d7-1ae711d89622', 'APPROVED_PATTERN_READ_5778b4ba-4acd-4c94-9c10-d83d80f75d50');
INSERT INTO public.privilege VALUES ('4812727a-5d37-41db-a178-10616c47d1e5', 'APPROVED_PATTERN_READ_38b1dd17-c3ff-46c4-b300-2e1c7d542abe');
INSERT INTO public.privilege VALUES ('af3b6367-4bec-49a7-8962-13504457b815', 'APPROVED_PATTERN_READ_f619a8fd-fff8-4981-8947-48ebaaad993c');
INSERT INTO public.privilege VALUES ('f2764a55-e6b4-40d6-a401-cb156d6c2544', 'APPROVED_PATTERN_READ_60e3ca01-0b7a-4785-acd7-3dddad0eea8e');
INSERT INTO public.privilege VALUES ('9cf6ec72-c805-499f-8a8c-b763042219ff', 'APPROVED_PATTERN_READ_36531ec5-477c-4d74-8d84-43276359aa14');
INSERT INTO public.privilege VALUES ('ce0256c4-9d8b-4171-96e4-408d73bb674d', 'APPROVED_PATTERN_READ_a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.privilege VALUES ('dc8c6ee9-f64d-4356-bcbb-f366b31b4e43', 'APPROVED_PATTERN_READ_9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.privilege VALUES ('205a724a-8905-4e1b-b486-2cbb900147f8', 'APPROVED_PATTERN_READ_3baad63c-42d2-46cb-b7a5-ab394b4e012c');
INSERT INTO public.privilege VALUES ('fdd1a00a-1f32-45f2-a02d-9ee41090e4e0', 'APPROVED_PATTERN_READ_4d153210-05d9-43f0-8560-3c3bd722d8bd');
INSERT INTO public.privilege VALUES ('19e94528-6619-48ea-bab4-5c1ebc7d7f5e', 'APPROVED_PATTERN_READ_2ee3eb24-165d-46d5-976c-9eb052a1912b');
INSERT INTO public.privilege VALUES ('867cc892-0538-492c-b062-6fe8841f2b6d', 'APPROVED_PATTERN_READ_d53673f0-fc52-48c8-8893-f8f244cf6ee3');
INSERT INTO public.privilege VALUES ('eb145a2a-b7b5-4184-96f9-a5c0dbe92fda', 'APPROVED_PATTERN_READ_3a1fb1cd-1078-4616-b603-a22c8f9449b2');
INSERT INTO public.privilege VALUES ('b8aaac90-f547-4e0e-8d73-d59a2df3ee44', 'APPROVED_PATTERN_READ_10a46ac6-1420-41ad-9d3a-ab244d959062');
INSERT INTO public.privilege VALUES ('0df4f41f-21cc-4dbe-aa6e-d3b7ad4a45da', 'APPROVED_PATTERN_READ_e6e239af-3d3a-4dfb-8c84-cbe268ca90d4');
INSERT INTO public.privilege VALUES ('f9099323-4094-4334-bbc3-00d6ab9510a0', 'APPROVED_PATTERN_READ_ce95634f-69e0-4f97-a9b6-10bc8364849f');
INSERT INTO public.privilege VALUES ('46460248-a75d-4047-8a85-c65f8f6e1d01', 'APPROVED_PATTERN_READ_ecb7d0a0-72d0-44c3-90dd-5b9af536ebca');
INSERT INTO public.privilege VALUES ('36af125a-0148-4cb2-b3ed-f5db63722bf3', 'APPROVED_PATTERN_READ_61130a8b-68ad-4281-80ad-a62d44bc4090');
INSERT INTO public.privilege VALUES ('320e9bbe-ec7d-4e8b-8eb6-43a90b640bd3', 'APPROVED_PATTERN_READ_0a4ffca5-3b28-4897-9842-295f9bb6bea8');
INSERT INTO public.privilege VALUES ('46d2de37-1fd5-4ca7-b3e5-7f3c70e369e2', 'APPROVED_PATTERN_READ_386a4d90-1a3d-427c-96a6-6f1a433daae6');
INSERT INTO public.privilege VALUES ('9cbb9ca6-9dd9-4591-865b-04106342cf13', 'APPROVED_PATTERN_READ_407ae0d5-e5be-4151-900b-041ed5dfcdbe');
INSERT INTO public.privilege VALUES ('a477037b-68ea-4bd3-9c1f-7c5b3e430fd8', 'APPROVED_PATTERN_READ_b8e826e0-dc07-4515-ae10-87b402e3d52c');
INSERT INTO public.privilege VALUES ('b4a663db-a755-4684-8fcc-226e9d9a20f4', 'APPROVED_PATTERN_READ_358bf776-378f-465e-a9e6-e8a1c7716825');
INSERT INTO public.privilege VALUES ('fa3c70e3-4e7b-454a-a3e7-5fc729f840c8', 'APPROVED_PATTERN_READ_a81eb2c5-84ce-4a14-8242-e9ce19532423');
INSERT INTO public.privilege VALUES ('07dfd796-619c-436a-816f-1046874d2d23', 'APPROVED_PATTERN_READ_7f488cff-525f-4e50-a6c6-219b4ab4854d');
INSERT INTO public.privilege VALUES ('a83b296b-fc46-4ebb-8d73-755854d87ff7', 'APPROVED_PATTERN_READ_9b50b4bf-4b5c-4d52-a7d3-1b0e6a0f53f9');
INSERT INTO public.privilege VALUES ('06d4ec92-ee6f-4096-89f8-f80f3b879b8b', 'APPROVED_PATTERN_READ_2fb586fd-9982-4f4e-987b-17909069e10e');
INSERT INTO public.privilege VALUES ('e9514c7b-b7e8-4d2b-a917-bdd30db71160', 'APPROVED_PATTERN_READ_cbc6fe12-4a7d-4de5-b709-b20dd0cacbbf');
INSERT INTO public.privilege VALUES ('40e28447-b89e-4e87-9fcd-0abbebcf1621', 'APPROVED_PATTERN_READ_d285eda8-41ee-4ba2-879d-52acec6a1416');
INSERT INTO public.privilege VALUES ('8df4495a-86db-4891-bf71-42a0f2798c6c', 'APPROVED_PATTERN_READ_81dba31f-e19a-4a8b-a07f-e1561fc2ce06');
INSERT INTO public.privilege VALUES ('425497a0-9735-468d-9cb2-f4eead2e11e5', 'APPROVED_PATTERN_READ_b6436fe2-9e3f-49ac-9e09-5cce86e480e1');
INSERT INTO public.privilege VALUES ('d19ecb40-f446-49b2-8b7d-a6b1266bff5f', 'APPROVED_PATTERN_READ_7c8849ee-26ad-4910-b798-902367e617d6');
INSERT INTO public.privilege VALUES ('99ba97b4-644a-42e7-a576-862c9b6fad6f', 'APPROVED_PATTERN_READ_80d829b6-d1ed-40a3-95ea-7e0b34de8eba');
INSERT INTO public.privilege VALUES ('0c1251bd-fadf-4f0a-8f7d-3e39b0d486e1', 'APPROVED_PATTERN_READ_e6106e4d-46a4-4557-8c2d-009ff7159464');
INSERT INTO public.privilege VALUES ('80551dde-dbaf-4f26-8e71-631a5ed1f68c', 'APPROVED_PATTERN_READ_68a4bbc9-2535-4cfc-a4f4-b149adfb674a');
INSERT INTO public.privilege VALUES ('736dfb30-0d7f-47db-9617-52095ed0d7c9', 'APPROVED_PATTERN_READ_f69638dc-6844-415c-a679-d3982c691f38');
INSERT INTO public.privilege VALUES ('8e556419-b48f-4b1a-9287-ba0cea246733', 'APPROVED_PATTERN_READ_35de7456-fced-4c23-bca5-8777984bf731');
INSERT INTO public.privilege VALUES ('65f29cdc-fb06-4433-8a66-7c9114bea98a', 'APPROVED_PATTERN_READ_c12b3086-5fa4-4140-915b-330fbffdfc43');
INSERT INTO public.privilege VALUES ('933f0a31-cfac-4f48-bccb-0e2ae5b1d14c', 'APPROVED_PATTERN_READ_b7602673-7825-48e2-829e-b9df269071fc');
INSERT INTO public.privilege VALUES ('4f191d80-2716-4b5c-a775-ddc7459c3324', 'APPROVED_PATTERN_READ_55f886b3-4fe0-4bc8-8bde-d0b7004a70ee');
INSERT INTO public.privilege VALUES ('90e4f008-baa6-49f0-8b4d-dbdcfbd056c2', 'APPROVED_PATTERN_READ_b86f6da4-3c9e-4146-8161-9c806b50b923');
INSERT INTO public.privilege VALUES ('60be6c40-1b7d-46ca-9b33-8358e22b387d', 'APPROVED_PATTERN_READ_7d2e969e-c266-4a83-85a5-5a07d528c6ef');
INSERT INTO public.privilege VALUES ('b72e21f0-ec5d-4412-844a-12b8b2e89464', 'APPROVED_PATTERN_READ_6d763f90-d7d4-4d58-a82c-09bb68ac6b82');
INSERT INTO public.privilege VALUES ('691efeb0-b0de-42cb-86a0-e2e3bfdaf2bf', 'APPROVED_PATTERN_READ_0b5ba218-dcb1-4841-a517-b6010b8a2951');
INSERT INTO public.privilege VALUES ('6248069f-30cb-49c9-be74-f54e22ef9306', 'APPROVED_PATTERN_READ_d8c99d65-8950-4b83-aa1d-549a88e28339');
INSERT INTO public.privilege VALUES ('d2923fe7-72a7-4fe7-871c-f18f343350f1', 'APPROVED_PATTERN_READ_b228d692-009d-4122-b617-1a3799a68766');
INSERT INTO public.privilege VALUES ('3e2b1dcf-f32a-4036-95f9-aa43666ad1c7', 'APPROVED_PATTERN_READ_94331ad5-4f67-4183-8fbe-55fe9c542789');
INSERT INTO public.privilege VALUES ('e054a405-b28e-49ba-8cae-d7fe743eaa14', 'APPROVED_PATTERN_READ_5d7a8af7-94fb-4c63-958c-403d845d4107');
INSERT INTO public.privilege VALUES ('37d803bf-926e-45ff-8009-e53e72019b09', 'APPROVED_PATTERN_READ_b9484449-18bd-4667-a9e5-1f6bf66d442d');
INSERT INTO public.privilege VALUES ('8e1ee07a-5880-4524-bc7e-a820334c318c', 'APPROVED_PATTERN_READ_cd686d46-c77f-4c35-8016-f9819282f8a5');
INSERT INTO public.privilege VALUES ('34e80b12-ab06-4d2c-8beb-668b9ea08cf2', 'APPROVED_PATTERN_READ_da2bd135-4ba2-4b98-bb77-c60607402094');
INSERT INTO public.privilege VALUES ('02e1319b-fcb0-493a-998d-8a7329c9bca2', 'APPROVED_PATTERN_READ_45fdc628-1914-4b2c-92c4-38f7be3c622a');
INSERT INTO public.privilege VALUES ('8c5938b7-97de-406e-a11b-135f083fe7c6', 'APPROVED_PATTERN_READ_5190eb38-48a2-41ee-b85e-dbb3c609ed30');
INSERT INTO public.privilege VALUES ('0acecdee-bced-474a-8f55-1ac7278d1e64', 'APPROVED_PATTERN_READ_da3a0878-df45-4eb1-857e-82e5ae055683');
INSERT INTO public.privilege VALUES ('acad189b-7ce6-4dac-9e83-0e949db61977', 'APPROVED_PATTERN_READ_1dafcbc7-f048-4867-ad7f-2d0b40e096e1');
INSERT INTO public.privilege VALUES ('20da2c1e-d3df-4631-bd04-0be81aefd604', 'APPROVED_PATTERN_READ_a6e349c7-d5c0-42a7-bd78-21e4b2738fa7');
INSERT INTO public.privilege VALUES ('410a4167-5ac0-45d8-859e-fc2029ee3f26', 'APPROVED_PATTERN_READ_0145a85e-3b00-4e64-9e20-bdaf77d2fc86');
INSERT INTO public.privilege VALUES ('a57fcd58-46f5-4914-a01f-7c47b65413f9', 'APPROVED_PATTERN_READ_e35d735c-f724-4946-aad9-7fa520d5a843');
INSERT INTO public.privilege VALUES ('4388fa21-88bc-44e7-89c4-02009d47186d', 'APPROVED_PATTERN_READ_e22b33bc-b5cf-4a61-a8e9-dd204c48857b');
INSERT INTO public.privilege VALUES ('c5e045bd-0984-45e8-95d9-1e50d7664cec', 'APPROVED_PATTERN_READ_50d0b397-d2df-4797-8975-d2526c8cdd63');
INSERT INTO public.privilege VALUES ('a01d0460-445c-41ce-863d-f84e186a716a', 'APPROVED_PATTERN_READ_9bcced52-edb3-44a2-a86d-43499ea61289');
INSERT INTO public.privilege VALUES ('dd71eca0-298c-488b-9ac0-cff590a41fb9', 'APPROVED_PATTERN_READ_4710c428-a004-4da1-98a8-58205e051ec2');
INSERT INTO public.privilege VALUES ('77cd5f32-425b-4fd0-82e7-b5bd4d7dc2aa', 'APPROVED_PATTERN_READ_bace6e02-1e3f-4ddc-9e9a-eb04933fa226');
INSERT INTO public.privilege VALUES ('0b63eb8f-4bfb-438a-bac4-ab00da02b755', 'APPROVED_PATTERN_READ_801d44ab-fc18-4cc0-8e10-49f2e73b229a');
INSERT INTO public.privilege VALUES ('7404e5a7-97cc-48d2-aea9-8cae9bbeac99', 'APPROVED_PATTERN_READ_3b090377-8703-4cf7-9ce8-a432dce76335');
INSERT INTO public.privilege VALUES ('9f75f672-a5ff-406d-98e5-455e4da035d9', 'APPROVED_PATTERN_READ_15da23b4-5ad5-44ff-8936-140dd98935df');
INSERT INTO public.privilege VALUES ('95d631bb-997d-4010-b908-768873e9a6a0', 'APPROVED_PATTERN_READ_f675060d-34cd-4af7-abb7-864a8b9adef6');
INSERT INTO public.privilege VALUES ('6ec97ccb-c351-4b61-a0ca-f0d59774e53e', 'APPROVED_PATTERN_READ_155933df-9d41-4b2d-bdf8-11291fb7084c');
INSERT INTO public.privilege VALUES ('ea4d67ce-04e0-4f0b-982b-1a4b23b524ea', 'APPROVED_PATTERN_READ_599e5d49-ede8-489b-bb72-3e41c288ae89');
INSERT INTO public.privilege VALUES ('35d34701-0940-4734-af5e-cbabe0392d0c', 'APPROVED_PATTERN_READ_3d6ef3c9-28dd-4d2f-b006-e3427e24c0b0');
INSERT INTO public.privilege VALUES ('688d480e-5d0c-46b7-9132-3e77e9caad87', 'APPROVED_PATTERN_READ_f53f1daa-1eda-4fd9-966f-3f14c107930a');
INSERT INTO public.privilege VALUES ('61b1ddf2-9579-4a55-bff3-a2691602b893', 'APPROVED_PATTERN_READ_10edf46a-113f-4688-9af6-75494b950fbf');
INSERT INTO public.privilege VALUES ('41b730ab-4619-456a-897a-083a16a7b0eb', 'APPROVED_PATTERN_READ_47e05a38-2201-49f2-80e6-17d618ed260f');
INSERT INTO public.privilege VALUES ('fc4e9867-1803-494c-91c8-8901ee7eedb3', 'APPROVED_PATTERN_READ_e4e0fe4d-8757-4253-95de-a6f13ea66f30');
INSERT INTO public.privilege VALUES ('90e24de4-8441-4ebd-9a87-058bcefb682b', 'APPROVED_PATTERN_READ_000904c1-aa91-498b-88da-d6cb014931df');
INSERT INTO public.privilege VALUES ('1c117280-6113-44c7-be27-22988e8ead7b', 'APPROVED_PATTERN_READ_a7bc398e-972a-481f-8c63-b4c5a1b946d9');
INSERT INTO public.privilege VALUES ('c7f34ff3-b4b4-43f7-bd06-8b01e0cc5965', 'APPROVED_PATTERN_READ_678a2e5a-697f-4416-afe6-fd18bc935bdc');
INSERT INTO public.privilege VALUES ('d6d2433d-3ae3-455e-8f07-cf89225fd0f0', 'APPROVED_PATTERN_READ_34b02438-ceaf-4177-9a3e-74f907cfd63d');
INSERT INTO public.privilege VALUES ('e7f77dd8-e94d-40d3-852c-cc439a6cc54b', 'APPROVED_PATTERN_READ_d6d9a4e5-0944-4360-8af9-77d6f780716e');
INSERT INTO public.privilege VALUES ('e3f54cef-8155-44c4-bbb8-53ef80750c32', 'APPROVED_PATTERN_READ_d6db370c-42eb-414b-80b7-af50c14fb7e4');
INSERT INTO public.privilege VALUES ('a3e47489-eeef-4827-aa80-0837caee9655', 'APPROVED_PATTERN_READ_a9fabb2b-a9ba-4627-a0a9-455dacf6c8c8');
INSERT INTO public.privilege VALUES ('afd9222f-2a2e-4816-a9fe-e6d8e1d6f1a4', 'APPROVED_PATTERN_READ_d30b4f69-877e-405e-9070-f05398ebd5e1');
INSERT INTO public.privilege VALUES ('138e7d4f-b464-4fb5-b77e-668ba9590903', 'APPROVED_PATTERN_READ_de5b0951-2b66-4312-bf06-7082d3232e6e');
INSERT INTO public.privilege VALUES ('ea1af203-9063-4f9e-9b58-c8199a7ef9aa', 'APPROVED_PATTERN_READ_66620d74-ebc6-49f5-aafb-5749a8dec5c6');
INSERT INTO public.privilege VALUES ('fd7a7217-fb44-465e-9782-3f1a06d70e11', 'APPROVED_PATTERN_READ_25ed4f02-2b74-4493-8f85-812c28feb9a8');
INSERT INTO public.privilege VALUES ('44bd4aa1-e478-4828-a401-bd3c533336d2', 'APPROVED_PATTERN_READ_80a5a17d-7a99-421c-a743-7ab12c2d727d');
INSERT INTO public.privilege VALUES ('d5437d6f-7e5a-47cd-b274-331e75de746d', 'APPROVED_PATTERN_READ_3ab1e189-e4a8-4c1c-8a4b-426e07f8a267');
INSERT INTO public.privilege VALUES ('80ba8c41-cf64-478c-9ae4-b989fd689464', 'APPROVED_PATTERN_READ_b4ea4a4a-e892-4780-80d9-40d6a20e8f6f');
INSERT INTO public.privilege VALUES ('c881288d-e76c-46f7-8c2c-547b40ba002d', 'APPROVED_PATTERN_READ_1463b4df-ea4f-44c9-952c-a5612f2016b6');
INSERT INTO public.privilege VALUES ('344c67b8-f309-4835-bc51-5eab772a82da', 'APPROVED_PATTERN_READ_a614b4ee-e8e3-4600-8324-c170e1b69ec0');
INSERT INTO public.privilege VALUES ('0fe2553f-a4ff-4c69-84b5-461888cd513a', 'APPROVED_PATTERN_READ_e7c75a04-f9d3-40e0-aec6-6eabcfbc4aee');
INSERT INTO public.privilege VALUES ('d1d0c9c2-c3c0-4405-b8a6-5ff408465c12', 'APPROVED_PATTERN_READ_5afb64cd-694b-45f1-bf2c-c371373aaee3');
INSERT INTO public.privilege VALUES ('dbe5c127-ab10-45d7-982d-83c13304911d', 'APPROVED_PATTERN_READ_72e1d670-0d69-4f26-98b3-d216a2f00107');
INSERT INTO public.privilege VALUES ('4b816c28-0742-477a-ab4a-892b4156d29e', 'APPROVED_PATTERN_READ_5dc385bb-2691-4f20-86c1-11dad63afd3f');
INSERT INTO public.privilege VALUES ('42af26ea-f300-4633-9969-f2a91a76a82b', 'APPROVED_PATTERN_READ_4c7a0a0f-face-4953-baf5-5cacedd36f0c');
INSERT INTO public.privilege VALUES ('7d1f5acb-6f0e-417b-8d7c-43aacab52389', 'APPROVED_PATTERN_READ_3339fd4b-158d-4a83-9591-a1dba018e238');
INSERT INTO public.privilege VALUES ('edf04d4c-0681-429c-9676-35fa79d24d05', 'APPROVED_PATTERN_READ_3cbcb60b-853f-46c0-beb7-f63fa6e9bc12');
INSERT INTO public.privilege VALUES ('0739d55a-0316-47dc-8455-0c47d21a8899', 'APPROVED_PATTERN_READ_91a39a34-5f79-477a-8bdb-b248ef79b4cc');
INSERT INTO public.privilege VALUES ('01168a07-4fe8-4175-bd88-9297143ca295', 'APPROVED_PATTERN_READ_c0a25c90-aebe-4fbf-8579-358afa157d21');
INSERT INTO public.privilege VALUES ('768449da-80f9-4e41-abfd-a25fc3f5b440', 'APPROVED_PATTERN_READ_2dec367b-fbf3-4e33-bf1b-1ab7581a9e51');
INSERT INTO public.privilege VALUES ('f081dd98-d043-4f04-9909-a5ddda2521da', 'APPROVED_PATTERN_READ_6c53a774-8c9e-4fb3-9283-454ae5cffcdb');
INSERT INTO public.privilege VALUES ('1d763960-4ff0-4669-bde6-73dd2dadc869', 'APPROVED_PATTERN_READ_9bf3816c-cf1c-4b85-8cc8-f0ae0a8c5d7b');
INSERT INTO public.privilege VALUES ('b0000c9e-6805-472c-8033-9bd235fe037d', 'APPROVED_PATTERN_READ_45559bb5-24ff-4432-9bb1-8802778180cd');
INSERT INTO public.privilege VALUES ('12940cf6-dc78-49d7-a77b-5347fad4c054', 'APPROVED_PATTERN_READ_2cd1fca5-139f-4159-a040-fd6b59449398');
INSERT INTO public.privilege VALUES ('33b0351d-0319-4f6e-9ce2-677ebafd82ae', 'APPROVED_PATTERN_READ_1c3b59e7-7b7f-49eb-8f79-8b5a26212367');
INSERT INTO public.privilege VALUES ('f7b26b3a-289e-4d6b-9f3f-64e0471a77e2', 'APPROVED_PATTERN_READ_eae90baf-ea92-4a7e-ae12-7f6119cfb376');
INSERT INTO public.privilege VALUES ('3239c529-c14d-4d9d-8152-dbdd7f1dc2c4', 'APPROVED_PATTERN_READ_dc9e7d0c-923b-4f29-b118-2a743baab105');
INSERT INTO public.privilege VALUES ('6c034d5c-2363-4659-b2f9-6d32cb47521d', 'APPROVED_PATTERN_READ_df903950-138e-45ae-8fdd-787dcfdeb5f1');
INSERT INTO public.privilege VALUES ('680c30d6-9eb2-4845-8799-b4047f80dd58', 'APPROVED_PATTERN_READ_80945f10-25df-465b-a3aa-38df56adbbac');
INSERT INTO public.privilege VALUES ('aa7f1d2b-8a8b-4fa8-8277-a5ddb79bc5cc', 'APPROVED_PATTERN_READ_d5da5afa-d17d-4ab5-a56c-a399a0bf376a');
INSERT INTO public.privilege VALUES ('40bb5662-e278-44a4-8ced-0c497de760f0', 'APPROVED_PATTERN_READ_87bf22e8-5611-45e4-98f2-0ead82bc1095');
INSERT INTO public.privilege VALUES ('91d0ae1e-458a-432e-bdbd-197ab5719ca4', 'APPROVED_PATTERN_READ_7fdef8d4-e31e-41b6-80a0-caf365ec5247');
INSERT INTO public.privilege VALUES ('7c6f39c3-f984-405c-877d-983f6a3f0f0c', 'APPROVED_PATTERN_READ_560a18fd-4fe7-49ad-a7d5-20a3011ddb3c');
INSERT INTO public.privilege VALUES ('3a6066d7-a3fd-4f10-809f-0a889141da39', 'APPROVED_PATTERN_READ_ea97c486-7047-4fb9-97e8-f0a58b072faa');
INSERT INTO public.privilege VALUES ('489aa96b-6e43-4675-bf53-64bcffe2ba43', 'APPROVED_PATTERN_READ_b9a1279c-9b1a-4966-bde2-2743988dde1b');
INSERT INTO public.privilege VALUES ('9114f0a4-1ac6-4e7c-a297-f178bff800f1', 'APPROVED_PATTERN_READ_89aa9d13-decb-4e49-b738-a97394042eec');
INSERT INTO public.privilege VALUES ('0bf5f6fe-08b4-4041-9124-64136af29542', 'APPROVED_PATTERN_READ_de2064d4-c769-409f-92c5-665f6da84635');
INSERT INTO public.privilege VALUES ('b87a2676-d324-41e3-bddf-990eee82917d', 'APPROVED_PATTERN_EDIT_1a1b9319-e303-431d-91c3-f4a3b6189982');
INSERT INTO public.privilege VALUES ('c27d331c-2c6a-4d6f-90f5-96caefebd56f', 'APPROVED_PATTERN_EDIT_9bafcace-20a3-4726-963b-06d09437c677');
INSERT INTO public.privilege VALUES ('c22143c2-7c59-494b-8018-a43b7e1f071c', 'APPROVED_PATTERN_EDIT_26c8f1cb-a592-415e-846e-22f2ee761c8f');
INSERT INTO public.privilege VALUES ('fde21817-d6f5-4415-a684-a60ed6673dae', 'APPROVED_PATTERN_EDIT_d89d5a40-b864-4d97-9b44-211ed25c4f98');
INSERT INTO public.privilege VALUES ('eab65851-3984-474a-95cf-9d3523cdf78b', 'APPROVED_PATTERN_EDIT_c56361d3-4230-4653-942b-fc8ac7488bf9');
INSERT INTO public.privilege VALUES ('940b845e-b75c-484b-afab-1baa38e4b1e4', 'APPROVED_PATTERN_EDIT_19c5ed05-1a24-4971-9aac-390e1931f010');
INSERT INTO public.privilege VALUES ('613d6ea0-1a1d-4312-8865-8a3f3e0eca8a', 'APPROVED_PATTERN_EDIT_b14e9775-09ad-4019-b5db-dd9670221679');
INSERT INTO public.privilege VALUES ('901b6164-9f2b-4b85-8059-fda46666d116', 'APPROVED_PATTERN_EDIT_f3afc386-7c81-41d1-9b94-a06a49deb965');
INSERT INTO public.privilege VALUES ('699cb141-c104-4c68-893a-9ca0c8a4ece5', 'APPROVED_PATTERN_EDIT_ef45bb4d-7f1a-4840-9783-aa22ed40032a');
INSERT INTO public.privilege VALUES ('d424a780-1e80-48d7-b1b4-90eebfc5d366', 'APPROVED_PATTERN_EDIT_ea7c0692-6545-40e3-8cf8-f4c828c5fce8');
INSERT INTO public.privilege VALUES ('e4d1a84f-8fc8-496f-ba0c-e21498688b28', 'APPROVED_PATTERN_EDIT_330ba4a6-411d-4d44-913a-2805a9f21cf7');
INSERT INTO public.privilege VALUES ('014417d9-6392-4e87-930f-073f548047b7', 'APPROVED_PATTERN_EDIT_acb053d6-b8be-4bce-b62d-3a8aa10b9a0d');
INSERT INTO public.privilege VALUES ('506524be-d581-4090-9631-263948f106f8', 'APPROVED_PATTERN_EDIT_045e55b5-bc6e-4787-adf6-0cacfddfead4');
INSERT INTO public.privilege VALUES ('e323c344-a785-4ffa-b939-40cf6026ed7b', 'APPROVED_PATTERN_EDIT_c34d4c11-da4f-445d-8682-1c92dcfbb6be');
INSERT INTO public.privilege VALUES ('71193654-94cb-4627-b4e2-4395c9222804', 'APPROVED_PATTERN_EDIT_01d63259-109f-4136-878d-77e503ac8a11');
INSERT INTO public.privilege VALUES ('9637309d-ea00-436b-b13e-ae5215f7b091', 'APPROVED_PATTERN_EDIT_9c49472d-47fc-417e-b75a-512d57e76870');
INSERT INTO public.privilege VALUES ('ab8743a0-a47f-4292-b0ac-f66e2892233e', 'APPROVED_PATTERN_EDIT_be9c4245-79db-40cd-a0d4-c750c3a822b6');
INSERT INTO public.privilege VALUES ('632f935b-800f-4d22-9eb9-413c247d9595', 'APPROVED_PATTERN_EDIT_0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf');
INSERT INTO public.privilege VALUES ('c1b106a1-e939-44be-a0e6-2979969a4259', 'APPROVED_PATTERN_EDIT_7d28fe21-466a-4e22-9851-374e9cb93cd9');
INSERT INTO public.privilege VALUES ('5d160d38-9a12-406b-8b15-921a7ea5836b', 'APPROVED_PATTERN_EDIT_db5033cf-c13f-47b1-a617-aea77a0d5864');
INSERT INTO public.privilege VALUES ('1c1ef303-d6b7-4ef9-b7da-6b2eda89bc7b', 'APPROVED_PATTERN_EDIT_8c047398-63a1-4940-a5c5-c44834f48516');
INSERT INTO public.privilege VALUES ('2d41b20e-61e3-47e9-88ee-b3fe0510ff9f', 'APPROVED_PATTERN_EDIT_885ade35-d310-421a-98b8-877e27e51531');
INSERT INTO public.privilege VALUES ('6255e66d-8bd0-422a-849b-be10349e2851', 'APPROVED_PATTERN_EDIT_ba3aaa33-9010-459f-acb5-5452788e9abc');
INSERT INTO public.privilege VALUES ('a2f209c5-535c-490c-a412-a12afb9e9a88', 'APPROVED_PATTERN_EDIT_c7e15bdd-a5f3-486d-8e3d-f3117f39eb1a');
INSERT INTO public.privilege VALUES ('34670e9f-37d4-4883-9373-4b52bc65f83f', 'APPROVED_PATTERN_EDIT_53adbbff-f4d6-4bd7-8b90-475f57913c1a');
INSERT INTO public.privilege VALUES ('9a20d09a-f827-4dde-85ef-aff699980a0d', 'APPROVED_PATTERN_EDIT_329b49fc-de79-4d63-97ca-87a8f83ef1e2');
INSERT INTO public.privilege VALUES ('1585a4cf-26ec-42ed-8114-3fdda7cab3e6', 'APPROVED_PATTERN_EDIT_29f4224d-6b91-4218-aed6-0db3e5fa9dc2');
INSERT INTO public.privilege VALUES ('a895f29a-4400-422a-9cb1-41aaa1c5b433', 'APPROVED_PATTERN_EDIT_658b6fce-40b0-4f05-a2da-2fd3e33684fb');
INSERT INTO public.privilege VALUES ('326f2209-ddc4-4981-b1a8-6c514b230272', 'APPROVED_PATTERN_EDIT_b3418862-26a6-4bbb-b546-c12f48c45b16');
INSERT INTO public.privilege VALUES ('cb599c7b-65a3-4027-8337-ea69f7d6f666', 'APPROVED_PATTERN_EDIT_26bc2583-1c9f-4d6e-9968-e5aa0e8ab82f');
INSERT INTO public.privilege VALUES ('456be0d6-39ca-4391-a30c-a4e87704e141', 'APPROVED_PATTERN_EDIT_6c3f4121-65c2-444e-9d5a-f16f47fd2ed5');
INSERT INTO public.privilege VALUES ('0fd2954b-88e4-4efb-a777-136cc53b9578', 'APPROVED_PATTERN_EDIT_89dd6672-dd42-470b-8e84-129e4ec7540c');
INSERT INTO public.privilege VALUES ('5489929a-95f4-4836-a047-88f1d176dc94', 'APPROVED_PATTERN_EDIT_98ccd4dc-86a8-4652-b2c1-5b83b6f078e1');
INSERT INTO public.privilege VALUES ('cf0c7bbf-4b41-4bfd-919d-af5156e4a617', 'APPROVED_PATTERN_EDIT_3953e924-30f6-4561-8e02-e761b417c1d4');
INSERT INTO public.privilege VALUES ('aff538ba-1568-4b90-8c2f-117deb4913f9', 'APPROVED_PATTERN_EDIT_02fc1261-b7d6-4d85-89ef-c987ab92f3d4');
INSERT INTO public.privilege VALUES ('68aeb99a-e0a1-415f-808a-c9f7c6b295dd', 'APPROVED_PATTERN_EDIT_29acda13-a41f-4270-9248-375814889f20');
INSERT INTO public.privilege VALUES ('1847ca95-a39d-40ee-8f6a-92bb7b8bae74', 'APPROVED_PATTERN_EDIT_7116be12-b724-456f-ac3d-0a1ab6e85b9a');
INSERT INTO public.privilege VALUES ('9a942668-370a-4984-904f-716ad4443404', 'APPROVED_PATTERN_EDIT_a2b0eaca-aa24-4036-b730-265a97043b75');
INSERT INTO public.privilege VALUES ('599c509a-c540-4b97-a960-d98a997e1d5e', 'APPROVED_PATTERN_EDIT_78b58f38-9075-44a1-8eb4-5ab0ba4b801d');
INSERT INTO public.privilege VALUES ('f678343d-7e8c-4e66-89f4-c457cc86f45d', 'APPROVED_PATTERN_EDIT_87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65');
INSERT INTO public.privilege VALUES ('75555c75-12fb-44ed-ad20-b8e5bcc129e8', 'APPROVED_PATTERN_EDIT_d9bd086d-030c-4ca4-b6d2-29c2fbf517c8');
INSERT INTO public.privilege VALUES ('172988e7-7856-45c6-97cf-de6c0e090f5e', 'APPROVED_PATTERN_EDIT_7c775873-1ebf-4574-8cb1-29b0c661b8f3');
INSERT INTO public.privilege VALUES ('f9b43c44-d93c-4ca1-82c7-9ff875c81d75', 'APPROVED_PATTERN_EDIT_0ee54310-5f4d-4435-9c34-cf93f742e101');
INSERT INTO public.privilege VALUES ('7b491451-ae7d-4542-8ed0-51235ea7283d', 'APPROVED_PATTERN_EDIT_ca07715c-696e-4a62-af10-74145ff818f5');
INSERT INTO public.privilege VALUES ('cb2f1ea2-2287-40ef-b312-1f2b1e0d4259', 'APPROVED_PATTERN_EDIT_06c5d5cc-5c29-4a74-be75-dfba20cc4f80');
INSERT INTO public.privilege VALUES ('839dcfc1-3144-476f-a9ae-783554470299', 'APPROVED_PATTERN_EDIT_9167d0da-69ec-40a5-b7f8-5eab25833d70');
INSERT INTO public.privilege VALUES ('f7b2e93e-f64b-4f7c-b440-7d5a9a2482e3', 'APPROVED_PATTERN_EDIT_3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.privilege VALUES ('84a35235-ea72-4e42-855a-3f44df7a4a42', 'APPROVED_PATTERN_EDIT_28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.privilege VALUES ('462618ae-e806-4c1b-95e5-acf57e1b7705', 'APPROVED_PATTERN_EDIT_cf3a2b5f-9d7a-4f2c-ba39-ab2911d3a7d7');
INSERT INTO public.privilege VALUES ('44449679-ba63-40ad-aa83-a2efc7c77b32', 'APPROVED_PATTERN_EDIT_6e2eacf0-d026-4a00-8ca4-157298b75f0f');
INSERT INTO public.privilege VALUES ('6c2e56ed-3b01-41aa-a950-1fdd0126e885', 'APPROVED_PATTERN_EDIT_3e74edee-f076-45b3-8247-a5dd19cb24b2');
INSERT INTO public.privilege VALUES ('61a1a1df-f4ff-4bc4-8cb0-cbc5e9a62e32', 'APPROVED_PATTERN_EDIT_78185c7d-f353-49ee-b1e2-c2a0bcfc4ed2');
INSERT INTO public.privilege VALUES ('edb76dab-1836-411b-8df0-5a41b43b725b', 'APPROVED_PATTERN_EDIT_96ec8c86-c024-4d03-a283-49375e43e086');
INSERT INTO public.privilege VALUES ('ab822f4f-29ce-440b-b7ae-83c0006472fc', 'APPROVED_PATTERN_EDIT_b5c458ea-3a4e-4211-afc9-82510c2cff46');
INSERT INTO public.privilege VALUES ('941abc40-e239-422d-91c0-8f9b501dd2e7', 'APPROVED_PATTERN_EDIT_adcaac7d-a028-4d33-9111-ef3e711637e7');
INSERT INTO public.privilege VALUES ('3550d1e5-afd8-4d97-9e50-492b1ba02323', 'APPROVED_PATTERN_EDIT_ccb661e2-6c0d-4020-9eb2-abd290230b5b');
INSERT INTO public.privilege VALUES ('59a9ec02-5e38-4bf7-b6b1-f5fbf683c46a', 'APPROVED_PATTERN_EDIT_712b29e2-411b-4ef8-8f81-6cae15222c07');
INSERT INTO public.privilege VALUES ('fe07319e-8a14-412b-9e3b-34f490532132', 'APPROVED_PATTERN_EDIT_662ffad9-7dd3-490f-93d2-efb92f74c5ae');
INSERT INTO public.privilege VALUES ('cba4db3d-a871-45d4-bf16-cfd48e7b65d5', 'APPROVED_PATTERN_EDIT_b244a2fb-1f27-4e6d-8f43-7e512798f299');
INSERT INTO public.privilege VALUES ('251dd380-5888-4392-ad1a-f85dd1089fdb', 'APPROVED_PATTERN_EDIT_84c81b22-765b-4edb-a6e7-c626151e0af8');
INSERT INTO public.privilege VALUES ('a1db81c0-9188-42f6-b7b8-90b15c39dc58', 'APPROVED_PATTERN_EDIT_c699fdf0-f31e-45c0-9d0d-cee2388e1544');
INSERT INTO public.privilege VALUES ('7e8b55d2-4146-464c-a303-1a6b127e177d', 'APPROVED_PATTERN_EDIT_467cae27-d8be-4509-af26-64ed0a809028');
INSERT INTO public.privilege VALUES ('b0f06ddd-2f3b-4057-aaa5-16c3ce4c350a', 'APPROVED_PATTERN_EDIT_5778b4ba-4acd-4c94-9c10-d83d80f75d50');
INSERT INTO public.privilege VALUES ('d1e7add2-f254-409e-8bd1-4facad0d6512', 'APPROVED_PATTERN_EDIT_38b1dd17-c3ff-46c4-b300-2e1c7d542abe');
INSERT INTO public.privilege VALUES ('3976d444-2e6a-4629-891e-c7c13046b6d7', 'APPROVED_PATTERN_EDIT_f619a8fd-fff8-4981-8947-48ebaaad993c');
INSERT INTO public.privilege VALUES ('360af6be-04aa-4b86-ab20-b6972dc325ae', 'APPROVED_PATTERN_EDIT_60e3ca01-0b7a-4785-acd7-3dddad0eea8e');
INSERT INTO public.privilege VALUES ('ddc65400-4afe-49f6-8176-67cfbca937ec', 'APPROVED_PATTERN_EDIT_36531ec5-477c-4d74-8d84-43276359aa14');
INSERT INTO public.privilege VALUES ('bf0e4d6f-aecb-4cdf-aa99-18a6af380583', 'APPROVED_PATTERN_EDIT_a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.privilege VALUES ('b301ce64-2e59-4143-ad44-fddb2e9709ee', 'APPROVED_PATTERN_EDIT_9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.privilege VALUES ('74bf0f2c-8c2c-469b-a78a-d4e3eef605b0', 'APPROVED_PATTERN_EDIT_3baad63c-42d2-46cb-b7a5-ab394b4e012c');
INSERT INTO public.privilege VALUES ('e3681a28-0a4e-47a8-931d-2b68830ff913', 'APPROVED_PATTERN_EDIT_4d153210-05d9-43f0-8560-3c3bd722d8bd');
INSERT INTO public.privilege VALUES ('e5af2f49-30c7-4f67-992f-d2adf6cd5fca', 'APPROVED_PATTERN_EDIT_2ee3eb24-165d-46d5-976c-9eb052a1912b');
INSERT INTO public.privilege VALUES ('f91ecf87-5c68-479f-b3b6-1bf6dc9b1c55', 'APPROVED_PATTERN_EDIT_d53673f0-fc52-48c8-8893-f8f244cf6ee3');
INSERT INTO public.privilege VALUES ('6b622cf1-7315-4cf7-a224-62fa5e5fcdd4', 'APPROVED_PATTERN_EDIT_3a1fb1cd-1078-4616-b603-a22c8f9449b2');
INSERT INTO public.privilege VALUES ('77281188-d1f6-448c-8960-31e4d5690258', 'APPROVED_PATTERN_EDIT_10a46ac6-1420-41ad-9d3a-ab244d959062');
INSERT INTO public.privilege VALUES ('7ec31a01-e525-4393-8426-26e0f2d4e2bc', 'APPROVED_PATTERN_EDIT_e6e239af-3d3a-4dfb-8c84-cbe268ca90d4');
INSERT INTO public.privilege VALUES ('2e35a058-5779-48c2-bd93-fa4f13b71bf9', 'APPROVED_PATTERN_EDIT_ce95634f-69e0-4f97-a9b6-10bc8364849f');
INSERT INTO public.privilege VALUES ('fea89b81-aef1-4c2d-b0bc-81b7922a36a3', 'APPROVED_PATTERN_EDIT_ecb7d0a0-72d0-44c3-90dd-5b9af536ebca');
INSERT INTO public.privilege VALUES ('e955e192-f59a-4003-a23b-93fc9d873004', 'APPROVED_PATTERN_EDIT_61130a8b-68ad-4281-80ad-a62d44bc4090');
INSERT INTO public.privilege VALUES ('c05996ae-bb6a-4743-99c5-98fb80b8084d', 'APPROVED_PATTERN_EDIT_0a4ffca5-3b28-4897-9842-295f9bb6bea8');
INSERT INTO public.privilege VALUES ('375d95f6-81e6-4de6-9e86-6482ffb24154', 'APPROVED_PATTERN_EDIT_386a4d90-1a3d-427c-96a6-6f1a433daae6');
INSERT INTO public.privilege VALUES ('61a41db8-2cb9-4a26-b7d4-1bfba7c971eb', 'APPROVED_PATTERN_EDIT_407ae0d5-e5be-4151-900b-041ed5dfcdbe');
INSERT INTO public.privilege VALUES ('a2e1f060-75e4-4589-bde1-b3d8c747311c', 'APPROVED_PATTERN_EDIT_b8e826e0-dc07-4515-ae10-87b402e3d52c');
INSERT INTO public.privilege VALUES ('176f6514-e9f0-452c-b6c9-f2b21f803f98', 'APPROVED_PATTERN_EDIT_358bf776-378f-465e-a9e6-e8a1c7716825');
INSERT INTO public.privilege VALUES ('c40e9d69-5bf9-4fd2-91e4-22dba0a552b5', 'APPROVED_PATTERN_EDIT_a81eb2c5-84ce-4a14-8242-e9ce19532423');
INSERT INTO public.privilege VALUES ('e85df68b-0b5e-4297-a58f-b3c8cbfb4975', 'APPROVED_PATTERN_EDIT_7f488cff-525f-4e50-a6c6-219b4ab4854d');
INSERT INTO public.privilege VALUES ('f308fbb7-d1ac-49a9-9a22-a0aa2e9ba9f9', 'APPROVED_PATTERN_EDIT_9b50b4bf-4b5c-4d52-a7d3-1b0e6a0f53f9');
INSERT INTO public.privilege VALUES ('14b2a10c-8559-4cf0-be0d-4d56f471f7da', 'APPROVED_PATTERN_EDIT_2fb586fd-9982-4f4e-987b-17909069e10e');
INSERT INTO public.privilege VALUES ('4349856f-eb7e-4b92-a5d6-847aaec01dff', 'APPROVED_PATTERN_EDIT_cbc6fe12-4a7d-4de5-b709-b20dd0cacbbf');
INSERT INTO public.privilege VALUES ('0f03d34f-d38f-4914-a62d-bcea5aa8c01e', 'APPROVED_PATTERN_EDIT_d285eda8-41ee-4ba2-879d-52acec6a1416');
INSERT INTO public.privilege VALUES ('a8c9ffdb-c9ac-4b39-9f5a-e8dbad1081fb', 'APPROVED_PATTERN_EDIT_81dba31f-e19a-4a8b-a07f-e1561fc2ce06');
INSERT INTO public.privilege VALUES ('4202a367-b009-4e78-ac03-65583551e8a5', 'APPROVED_PATTERN_EDIT_b6436fe2-9e3f-49ac-9e09-5cce86e480e1');
INSERT INTO public.privilege VALUES ('3ee9233b-51ef-4841-b7e1-9f662248aef6', 'APPROVED_PATTERN_EDIT_7c8849ee-26ad-4910-b798-902367e617d6');
INSERT INTO public.privilege VALUES ('506fc39e-12c2-4380-a57a-9ffd8dd491e4', 'APPROVED_PATTERN_EDIT_80d829b6-d1ed-40a3-95ea-7e0b34de8eba');
INSERT INTO public.privilege VALUES ('2cde8848-26b9-472e-b3b6-83c91ea39178', 'APPROVED_PATTERN_EDIT_e6106e4d-46a4-4557-8c2d-009ff7159464');
INSERT INTO public.privilege VALUES ('7c560a90-2f23-45d8-b972-b3454cc8f6d3', 'APPROVED_PATTERN_EDIT_68a4bbc9-2535-4cfc-a4f4-b149adfb674a');
INSERT INTO public.privilege VALUES ('4aca09af-d0d6-4947-8fe8-ce6b9b79a072', 'APPROVED_PATTERN_EDIT_f69638dc-6844-415c-a679-d3982c691f38');
INSERT INTO public.privilege VALUES ('621e5039-1cca-4d44-a214-caae29b7ca9b', 'APPROVED_PATTERN_EDIT_35de7456-fced-4c23-bca5-8777984bf731');
INSERT INTO public.privilege VALUES ('028adbe8-9fee-40ea-97a8-9dce0deba38a', 'APPROVED_PATTERN_EDIT_c12b3086-5fa4-4140-915b-330fbffdfc43');
INSERT INTO public.privilege VALUES ('728e92ea-0668-4754-b613-ae4d798e58e9', 'APPROVED_PATTERN_EDIT_b7602673-7825-48e2-829e-b9df269071fc');
INSERT INTO public.privilege VALUES ('db34fb36-7e7c-4aa1-83fb-d511d4126d22', 'APPROVED_PATTERN_EDIT_55f886b3-4fe0-4bc8-8bde-d0b7004a70ee');
INSERT INTO public.privilege VALUES ('5e5bf804-53e2-406a-9c8a-691e0f63312e', 'APPROVED_PATTERN_EDIT_b86f6da4-3c9e-4146-8161-9c806b50b923');
INSERT INTO public.privilege VALUES ('b393fac5-6818-4717-9948-f75b29ff2ee6', 'APPROVED_PATTERN_EDIT_7d2e969e-c266-4a83-85a5-5a07d528c6ef');
INSERT INTO public.privilege VALUES ('5868c4da-890a-4ab4-95ef-070a06991049', 'APPROVED_PATTERN_EDIT_6d763f90-d7d4-4d58-a82c-09bb68ac6b82');
INSERT INTO public.privilege VALUES ('72c6235b-eda5-450b-bb42-5da66f7d7c11', 'APPROVED_PATTERN_EDIT_0b5ba218-dcb1-4841-a517-b6010b8a2951');
INSERT INTO public.privilege VALUES ('aeb9bf48-c87f-4a27-b886-afebc37ad085', 'APPROVED_PATTERN_EDIT_d8c99d65-8950-4b83-aa1d-549a88e28339');
INSERT INTO public.privilege VALUES ('841db128-864b-4f52-991e-2d5eb3b0d6d0', 'APPROVED_PATTERN_EDIT_b228d692-009d-4122-b617-1a3799a68766');
INSERT INTO public.privilege VALUES ('bddf7221-4ad1-4c79-9f0d-d4ed5dc84210', 'APPROVED_PATTERN_EDIT_94331ad5-4f67-4183-8fbe-55fe9c542789');
INSERT INTO public.privilege VALUES ('48f5e92c-9bd9-49e7-a86f-9ff0c3c1d71d', 'APPROVED_PATTERN_EDIT_5d7a8af7-94fb-4c63-958c-403d845d4107');
INSERT INTO public.privilege VALUES ('a9b3a1cc-c1df-4958-9a39-bb2ae9e81616', 'APPROVED_PATTERN_EDIT_b9484449-18bd-4667-a9e5-1f6bf66d442d');
INSERT INTO public.privilege VALUES ('546620e4-1816-41ff-ac05-ce2359d9f99b', 'APPROVED_PATTERN_EDIT_cd686d46-c77f-4c35-8016-f9819282f8a5');
INSERT INTO public.privilege VALUES ('4e8a24a3-66eb-4c4d-adcd-142393419e0d', 'APPROVED_PATTERN_EDIT_da2bd135-4ba2-4b98-bb77-c60607402094');
INSERT INTO public.privilege VALUES ('bb731939-6bc7-4438-b4bc-a282ce41ee32', 'APPROVED_PATTERN_EDIT_45fdc628-1914-4b2c-92c4-38f7be3c622a');
INSERT INTO public.privilege VALUES ('853ef8a8-e136-4180-affd-8aa636fe3982', 'APPROVED_PATTERN_EDIT_5190eb38-48a2-41ee-b85e-dbb3c609ed30');
INSERT INTO public.privilege VALUES ('8004ec25-065c-4469-8486-cde20681cffe', 'APPROVED_PATTERN_EDIT_da3a0878-df45-4eb1-857e-82e5ae055683');
INSERT INTO public.privilege VALUES ('450c36c5-c53d-4ab7-930f-be70daa8f77f', 'APPROVED_PATTERN_EDIT_1dafcbc7-f048-4867-ad7f-2d0b40e096e1');
INSERT INTO public.privilege VALUES ('a5e8fad5-cb20-434c-9a13-b20f4515ffd0', 'APPROVED_PATTERN_EDIT_a6e349c7-d5c0-42a7-bd78-21e4b2738fa7');
INSERT INTO public.privilege VALUES ('665ed930-9f49-40de-8c7d-4c24ccc78719', 'APPROVED_PATTERN_EDIT_0145a85e-3b00-4e64-9e20-bdaf77d2fc86');
INSERT INTO public.privilege VALUES ('a24d8e19-9d64-466c-87b1-180f2f36780c', 'APPROVED_PATTERN_EDIT_e35d735c-f724-4946-aad9-7fa520d5a843');
INSERT INTO public.privilege VALUES ('5f13dca2-0227-4e0e-a38b-db8f1282a8c8', 'APPROVED_PATTERN_EDIT_e22b33bc-b5cf-4a61-a8e9-dd204c48857b');
INSERT INTO public.privilege VALUES ('3408d4b4-20e0-429c-bd93-7295e13e1879', 'APPROVED_PATTERN_EDIT_50d0b397-d2df-4797-8975-d2526c8cdd63');
INSERT INTO public.privilege VALUES ('847a4785-d24d-48f5-81ae-afb141308f65', 'APPROVED_PATTERN_EDIT_9bcced52-edb3-44a2-a86d-43499ea61289');
INSERT INTO public.privilege VALUES ('74c7a681-b48f-4e7d-b0b2-fb551c13ab2d', 'APPROVED_PATTERN_EDIT_4710c428-a004-4da1-98a8-58205e051ec2');
INSERT INTO public.privilege VALUES ('dab8128d-ea9b-4d41-b5e2-cd39db1ca7cb', 'APPROVED_PATTERN_EDIT_bace6e02-1e3f-4ddc-9e9a-eb04933fa226');
INSERT INTO public.privilege VALUES ('e8bed21a-c70b-4826-aa2c-9da049364065', 'APPROVED_PATTERN_EDIT_801d44ab-fc18-4cc0-8e10-49f2e73b229a');
INSERT INTO public.privilege VALUES ('45b600e5-58d3-498e-9b86-c4177fcdbace', 'APPROVED_PATTERN_EDIT_3b090377-8703-4cf7-9ce8-a432dce76335');
INSERT INTO public.privilege VALUES ('5b73a839-8a26-484e-9e29-990f18ca6e1c', 'APPROVED_PATTERN_EDIT_15da23b4-5ad5-44ff-8936-140dd98935df');
INSERT INTO public.privilege VALUES ('3d74ba82-e4ab-4785-ba17-15289134298b', 'APPROVED_PATTERN_EDIT_f675060d-34cd-4af7-abb7-864a8b9adef6');
INSERT INTO public.privilege VALUES ('581cd05a-976e-482e-979a-8408227d4bfe', 'APPROVED_PATTERN_EDIT_155933df-9d41-4b2d-bdf8-11291fb7084c');
INSERT INTO public.privilege VALUES ('6f25a52e-b55b-41b1-8906-0d81d1855d85', 'APPROVED_PATTERN_EDIT_599e5d49-ede8-489b-bb72-3e41c288ae89');
INSERT INTO public.privilege VALUES ('66134159-69ce-4b1b-a274-7aa962a3166a', 'APPROVED_PATTERN_EDIT_3d6ef3c9-28dd-4d2f-b006-e3427e24c0b0');
INSERT INTO public.privilege VALUES ('cb31411f-1e7d-4ddb-86e8-20b462d4fc8a', 'APPROVED_PATTERN_EDIT_f53f1daa-1eda-4fd9-966f-3f14c107930a');
INSERT INTO public.privilege VALUES ('7317d87a-b600-484b-9207-1d08ae864fd3', 'APPROVED_PATTERN_EDIT_10edf46a-113f-4688-9af6-75494b950fbf');
INSERT INTO public.privilege VALUES ('5b7a4afb-5412-417d-8cdd-5c34d21f1e48', 'APPROVED_PATTERN_EDIT_47e05a38-2201-49f2-80e6-17d618ed260f');
INSERT INTO public.privilege VALUES ('755715cf-1020-4d41-af01-3bb0d87b0671', 'APPROVED_PATTERN_EDIT_e4e0fe4d-8757-4253-95de-a6f13ea66f30');
INSERT INTO public.privilege VALUES ('b53396fb-4eec-4039-8530-d6efd1456124', 'APPROVED_PATTERN_EDIT_000904c1-aa91-498b-88da-d6cb014931df');
INSERT INTO public.privilege VALUES ('d94b31cc-d94e-4f9c-a122-e743f93ba8d8', 'APPROVED_PATTERN_EDIT_a7bc398e-972a-481f-8c63-b4c5a1b946d9');
INSERT INTO public.privilege VALUES ('18e061e9-4bb2-44e8-92e0-5c6eb36c4736', 'APPROVED_PATTERN_EDIT_678a2e5a-697f-4416-afe6-fd18bc935bdc');
INSERT INTO public.privilege VALUES ('14fd4dc1-ad38-4768-ae21-7b5365009be0', 'APPROVED_PATTERN_EDIT_34b02438-ceaf-4177-9a3e-74f907cfd63d');
INSERT INTO public.privilege VALUES ('766dceb0-ea61-425a-8d0d-a1f975f708be', 'APPROVED_PATTERN_EDIT_d6d9a4e5-0944-4360-8af9-77d6f780716e');
INSERT INTO public.privilege VALUES ('c6a6ecf9-dbee-4c5c-b88a-614370b4b063', 'APPROVED_PATTERN_EDIT_d6db370c-42eb-414b-80b7-af50c14fb7e4');
INSERT INTO public.privilege VALUES ('9d0e53c6-1853-448f-8c4d-b464ed4f71cb', 'APPROVED_PATTERN_EDIT_a9fabb2b-a9ba-4627-a0a9-455dacf6c8c8');
INSERT INTO public.privilege VALUES ('ca133d03-e799-4b4e-a2e4-e8015b8bfd77', 'APPROVED_PATTERN_EDIT_d30b4f69-877e-405e-9070-f05398ebd5e1');
INSERT INTO public.privilege VALUES ('c4a519cc-283e-4759-b7ec-784fca5b66b8', 'APPROVED_PATTERN_EDIT_de5b0951-2b66-4312-bf06-7082d3232e6e');
INSERT INTO public.privilege VALUES ('275ab81e-33d6-4ab0-9394-4b91767d946f', 'APPROVED_PATTERN_EDIT_66620d74-ebc6-49f5-aafb-5749a8dec5c6');
INSERT INTO public.privilege VALUES ('9dec3491-e679-4b4c-8dec-93bd1e7712d2', 'APPROVED_PATTERN_EDIT_25ed4f02-2b74-4493-8f85-812c28feb9a8');
INSERT INTO public.privilege VALUES ('590d2d57-a464-4d90-b812-65858559ad47', 'APPROVED_PATTERN_EDIT_80a5a17d-7a99-421c-a743-7ab12c2d727d');
INSERT INTO public.privilege VALUES ('384d5905-ce4b-4729-a183-f262da02764e', 'APPROVED_PATTERN_EDIT_3ab1e189-e4a8-4c1c-8a4b-426e07f8a267');
INSERT INTO public.privilege VALUES ('c0270cf4-9a7f-4e7e-a011-600736b5d977', 'APPROVED_PATTERN_EDIT_b4ea4a4a-e892-4780-80d9-40d6a20e8f6f');
INSERT INTO public.privilege VALUES ('f588122d-1ac8-43b1-8afa-9600cc985310', 'APPROVED_PATTERN_EDIT_1463b4df-ea4f-44c9-952c-a5612f2016b6');
INSERT INTO public.privilege VALUES ('e2a12263-0859-47d8-8e64-0eab9d564155', 'APPROVED_PATTERN_EDIT_a614b4ee-e8e3-4600-8324-c170e1b69ec0');
INSERT INTO public.privilege VALUES ('1c04216e-a2e4-4ce6-9d84-8727425fcc6c', 'APPROVED_PATTERN_EDIT_e7c75a04-f9d3-40e0-aec6-6eabcfbc4aee');
INSERT INTO public.privilege VALUES ('4ebb9351-57d0-4435-a7bf-f2fdfc5c9a1f', 'APPROVED_PATTERN_EDIT_5afb64cd-694b-45f1-bf2c-c371373aaee3');
INSERT INTO public.privilege VALUES ('9e2e3724-a278-43bf-9c3f-fad11c8d8413', 'APPROVED_PATTERN_EDIT_72e1d670-0d69-4f26-98b3-d216a2f00107');
INSERT INTO public.privilege VALUES ('b3fe5c48-912c-41b7-b915-8e63a613ef25', 'APPROVED_PATTERN_EDIT_5dc385bb-2691-4f20-86c1-11dad63afd3f');
INSERT INTO public.privilege VALUES ('14c8b0a1-83f6-47e3-857f-d39085df5f5f', 'APPROVED_PATTERN_EDIT_4c7a0a0f-face-4953-baf5-5cacedd36f0c');
INSERT INTO public.privilege VALUES ('1fd6edce-2956-4747-b95a-127bb93686b8', 'APPROVED_PATTERN_EDIT_3339fd4b-158d-4a83-9591-a1dba018e238');
INSERT INTO public.privilege VALUES ('9f17d9cc-6286-465a-8a31-7796bcbe5ea6', 'APPROVED_PATTERN_EDIT_3cbcb60b-853f-46c0-beb7-f63fa6e9bc12');
INSERT INTO public.privilege VALUES ('ca4084d0-5912-47cd-9b3c-3bdb657e2d57', 'APPROVED_PATTERN_EDIT_91a39a34-5f79-477a-8bdb-b248ef79b4cc');
INSERT INTO public.privilege VALUES ('3cf3d5cc-0d59-441c-b6d2-75ac12ce7bcd', 'APPROVED_PATTERN_EDIT_c0a25c90-aebe-4fbf-8579-358afa157d21');
INSERT INTO public.privilege VALUES ('30127a60-3d55-4529-920a-66402a81b193', 'APPROVED_PATTERN_EDIT_2dec367b-fbf3-4e33-bf1b-1ab7581a9e51');
INSERT INTO public.privilege VALUES ('cd7ff0bd-e912-426f-b24d-3d5867b40277', 'APPROVED_PATTERN_EDIT_6c53a774-8c9e-4fb3-9283-454ae5cffcdb');
INSERT INTO public.privilege VALUES ('f6099bf3-1980-428f-9bb7-96753a2ac9be', 'APPROVED_PATTERN_EDIT_9bf3816c-cf1c-4b85-8cc8-f0ae0a8c5d7b');
INSERT INTO public.privilege VALUES ('f6337e0a-d4d9-43c4-8ae0-da542a2b8b07', 'APPROVED_PATTERN_EDIT_45559bb5-24ff-4432-9bb1-8802778180cd');
INSERT INTO public.privilege VALUES ('1ba75b7c-214d-45cd-a225-f47b628a7398', 'APPROVED_PATTERN_EDIT_2cd1fca5-139f-4159-a040-fd6b59449398');
INSERT INTO public.privilege VALUES ('d8b7e741-abd5-426a-b6a0-ff2e3a9ce3ee', 'APPROVED_PATTERN_EDIT_1c3b59e7-7b7f-49eb-8f79-8b5a26212367');
INSERT INTO public.privilege VALUES ('a7db5369-3dab-48a0-83c5-4afd6326294a', 'APPROVED_PATTERN_EDIT_eae90baf-ea92-4a7e-ae12-7f6119cfb376');
INSERT INTO public.privilege VALUES ('e4d996ef-cf46-451b-a2fb-6a64db35cdbb', 'APPROVED_PATTERN_EDIT_dc9e7d0c-923b-4f29-b118-2a743baab105');
INSERT INTO public.privilege VALUES ('95f45208-ccc6-4e64-a61f-7dee94c0187c', 'APPROVED_PATTERN_EDIT_df903950-138e-45ae-8fdd-787dcfdeb5f1');
INSERT INTO public.privilege VALUES ('ab7415f6-18d4-4c9c-b547-5bac42002020', 'APPROVED_PATTERN_EDIT_80945f10-25df-465b-a3aa-38df56adbbac');
INSERT INTO public.privilege VALUES ('5b2e2d9f-9311-4cee-b87b-88e98c202c75', 'APPROVED_PATTERN_EDIT_d5da5afa-d17d-4ab5-a56c-a399a0bf376a');
INSERT INTO public.privilege VALUES ('cab7f687-d62c-46e1-a0e9-590b3e385da4', 'APPROVED_PATTERN_EDIT_87bf22e8-5611-45e4-98f2-0ead82bc1095');
INSERT INTO public.privilege VALUES ('68779d87-0aaf-4a8e-b1e4-fe3fb6de9a7d', 'APPROVED_PATTERN_EDIT_7fdef8d4-e31e-41b6-80a0-caf365ec5247');
INSERT INTO public.privilege VALUES ('c39f6cd1-9129-4ac1-8e9b-5425551865ab', 'APPROVED_PATTERN_EDIT_560a18fd-4fe7-49ad-a7d5-20a3011ddb3c');
INSERT INTO public.privilege VALUES ('5c367d98-650e-44e4-ae3d-09183e6a1309', 'APPROVED_PATTERN_EDIT_ea97c486-7047-4fb9-97e8-f0a58b072faa');
INSERT INTO public.privilege VALUES ('d69801b2-6c2e-4209-869c-5569bcb6893b', 'APPROVED_PATTERN_EDIT_b9a1279c-9b1a-4966-bde2-2743988dde1b');
INSERT INTO public.privilege VALUES ('adece3e4-176b-4275-aca2-ea22667ee26c', 'APPROVED_PATTERN_EDIT_89aa9d13-decb-4e49-b738-a97394042eec');
INSERT INTO public.privilege VALUES ('5863f917-0cb2-43b4-b2bf-7bca9d7fad37', 'APPROVED_PATTERN_EDIT_de2064d4-c769-409f-92c5-665f6da84635');
INSERT INTO public.privilege VALUES ('c8355f86-4003-459f-a9ab-8745589964df', 'APPROVED_PATTERN_DELETE_1a1b9319-e303-431d-91c3-f4a3b6189982');
INSERT INTO public.privilege VALUES ('15f21420-330b-49f4-8087-35a73d3bc0ee', 'APPROVED_PATTERN_DELETE_9bafcace-20a3-4726-963b-06d09437c677');
INSERT INTO public.privilege VALUES ('099b38d6-8553-456c-b84d-49720bc581c6', 'APPROVED_PATTERN_DELETE_26c8f1cb-a592-415e-846e-22f2ee761c8f');
INSERT INTO public.privilege VALUES ('d71d5e89-759d-4115-9a74-db55520b068e', 'APPROVED_PATTERN_DELETE_d89d5a40-b864-4d97-9b44-211ed25c4f98');
INSERT INTO public.privilege VALUES ('32d8239b-8b58-4a15-a10a-4ad3034445c7', 'APPROVED_PATTERN_DELETE_c56361d3-4230-4653-942b-fc8ac7488bf9');
INSERT INTO public.privilege VALUES ('2936bb4c-aa38-4e00-993a-d492d6fff7ef', 'APPROVED_PATTERN_DELETE_19c5ed05-1a24-4971-9aac-390e1931f010');
INSERT INTO public.privilege VALUES ('9cf71664-9d22-4130-bfa1-cf4ca6ceaf03', 'APPROVED_PATTERN_DELETE_b14e9775-09ad-4019-b5db-dd9670221679');
INSERT INTO public.privilege VALUES ('bef5c2b1-2717-43e8-a22e-e20cf02ce417', 'APPROVED_PATTERN_DELETE_f3afc386-7c81-41d1-9b94-a06a49deb965');
INSERT INTO public.privilege VALUES ('414c0dce-76e8-45f8-8abf-8a4f1824236a', 'APPROVED_PATTERN_DELETE_ef45bb4d-7f1a-4840-9783-aa22ed40032a');
INSERT INTO public.privilege VALUES ('8ff1f30b-267c-430a-a396-5fca2acbe1cd', 'APPROVED_PATTERN_DELETE_ea7c0692-6545-40e3-8cf8-f4c828c5fce8');
INSERT INTO public.privilege VALUES ('1d5df50e-363e-466f-84d7-50738ae2d242', 'APPROVED_PATTERN_DELETE_330ba4a6-411d-4d44-913a-2805a9f21cf7');
INSERT INTO public.privilege VALUES ('3f998ac1-ce7d-4c6e-837b-1481a7f9c19c', 'APPROVED_PATTERN_DELETE_acb053d6-b8be-4bce-b62d-3a8aa10b9a0d');
INSERT INTO public.privilege VALUES ('a7dd5953-ef6f-48bc-828a-8a45ad318809', 'APPROVED_PATTERN_DELETE_045e55b5-bc6e-4787-adf6-0cacfddfead4');
INSERT INTO public.privilege VALUES ('5a9d1156-6609-4f0b-952c-82ed2bcbb70a', 'APPROVED_PATTERN_DELETE_c34d4c11-da4f-445d-8682-1c92dcfbb6be');
INSERT INTO public.privilege VALUES ('e50574a8-3902-4f4b-acbe-87376d9f1a5d', 'APPROVED_PATTERN_DELETE_01d63259-109f-4136-878d-77e503ac8a11');
INSERT INTO public.privilege VALUES ('833b7a13-03fb-4112-80e6-02220a9baafe', 'APPROVED_PATTERN_DELETE_9c49472d-47fc-417e-b75a-512d57e76870');
INSERT INTO public.privilege VALUES ('8ce80d19-9e41-412a-a053-cfbe719ed3d2', 'APPROVED_PATTERN_DELETE_be9c4245-79db-40cd-a0d4-c750c3a822b6');
INSERT INTO public.privilege VALUES ('7268fc65-8b05-4300-aa41-dc0ee9b65023', 'APPROVED_PATTERN_DELETE_0b8fa48f-6ccf-48ef-ac0b-3dadadad40bf');
INSERT INTO public.privilege VALUES ('3dbd7807-51ca-472d-917d-1b326b243f7a', 'APPROVED_PATTERN_DELETE_7d28fe21-466a-4e22-9851-374e9cb93cd9');
INSERT INTO public.privilege VALUES ('50385032-b8f0-4b7a-81d4-2c086734e39e', 'APPROVED_PATTERN_DELETE_db5033cf-c13f-47b1-a617-aea77a0d5864');
INSERT INTO public.privilege VALUES ('767a7533-8e5c-4d02-9c99-91270de9a9f4', 'APPROVED_PATTERN_DELETE_8c047398-63a1-4940-a5c5-c44834f48516');
INSERT INTO public.privilege VALUES ('3d69a690-dc97-4ccb-ab22-988dd55031d5', 'APPROVED_PATTERN_DELETE_885ade35-d310-421a-98b8-877e27e51531');
INSERT INTO public.privilege VALUES ('f5706483-bebd-489c-8072-1bf075dd8615', 'APPROVED_PATTERN_DELETE_ba3aaa33-9010-459f-acb5-5452788e9abc');
INSERT INTO public.privilege VALUES ('f251587f-518d-4833-8c3e-cb273ce38801', 'APPROVED_PATTERN_DELETE_c7e15bdd-a5f3-486d-8e3d-f3117f39eb1a');
INSERT INTO public.privilege VALUES ('5eea4c98-8112-482c-92d0-9c8e0e2cb582', 'APPROVED_PATTERN_DELETE_53adbbff-f4d6-4bd7-8b90-475f57913c1a');
INSERT INTO public.privilege VALUES ('cec99395-4a38-4477-a620-97e8db116806', 'APPROVED_PATTERN_DELETE_329b49fc-de79-4d63-97ca-87a8f83ef1e2');
INSERT INTO public.privilege VALUES ('db5f61fe-2a8d-4726-b259-dfac00e92702', 'APPROVED_PATTERN_DELETE_29f4224d-6b91-4218-aed6-0db3e5fa9dc2');
INSERT INTO public.privilege VALUES ('46ae036d-e15b-4129-ab7c-cd3ef863afaa', 'APPROVED_PATTERN_DELETE_658b6fce-40b0-4f05-a2da-2fd3e33684fb');
INSERT INTO public.privilege VALUES ('bd84c95c-2b44-4e73-a22c-edf1d938e612', 'APPROVED_PATTERN_DELETE_b3418862-26a6-4bbb-b546-c12f48c45b16');
INSERT INTO public.privilege VALUES ('c7e25270-389f-41e5-9df2-61930d861792', 'APPROVED_PATTERN_DELETE_26bc2583-1c9f-4d6e-9968-e5aa0e8ab82f');
INSERT INTO public.privilege VALUES ('3212149e-d331-4232-9087-f5d0ba83dc94', 'APPROVED_PATTERN_DELETE_6c3f4121-65c2-444e-9d5a-f16f47fd2ed5');
INSERT INTO public.privilege VALUES ('06e122d2-a509-4ade-91a9-a4b9e727f36b', 'APPROVED_PATTERN_DELETE_89dd6672-dd42-470b-8e84-129e4ec7540c');
INSERT INTO public.privilege VALUES ('e85411d2-7175-489a-a84d-3663ec50326b', 'APPROVED_PATTERN_DELETE_98ccd4dc-86a8-4652-b2c1-5b83b6f078e1');
INSERT INTO public.privilege VALUES ('1c733635-73bb-4be6-b25d-b1407d748db9', 'APPROVED_PATTERN_DELETE_3953e924-30f6-4561-8e02-e761b417c1d4');
INSERT INTO public.privilege VALUES ('4f4935eb-5c5c-4868-8a1e-c8bd818e7464', 'APPROVED_PATTERN_DELETE_02fc1261-b7d6-4d85-89ef-c987ab92f3d4');
INSERT INTO public.privilege VALUES ('175c64b4-7cf2-45ac-9085-08274240db86', 'APPROVED_PATTERN_DELETE_29acda13-a41f-4270-9248-375814889f20');
INSERT INTO public.privilege VALUES ('91e6a6dd-ed2d-484d-94a7-5fec97893576', 'APPROVED_PATTERN_DELETE_7116be12-b724-456f-ac3d-0a1ab6e85b9a');
INSERT INTO public.privilege VALUES ('cb633b43-446b-4850-bb75-17817d79ef75', 'APPROVED_PATTERN_DELETE_a2b0eaca-aa24-4036-b730-265a97043b75');
INSERT INTO public.privilege VALUES ('b1446825-53f7-4d62-a599-dd2245901626', 'APPROVED_PATTERN_DELETE_78b58f38-9075-44a1-8eb4-5ab0ba4b801d');
INSERT INTO public.privilege VALUES ('7d454018-44b8-4df4-ace2-e5f91ee6b972', 'APPROVED_PATTERN_DELETE_87ae00d9-3fc7-4b9b-ac8b-48b79cbf8f65');
INSERT INTO public.privilege VALUES ('94da50bc-f1cf-45d7-90ce-93a8332bb6c3', 'APPROVED_PATTERN_DELETE_d9bd086d-030c-4ca4-b6d2-29c2fbf517c8');
INSERT INTO public.privilege VALUES ('22da5f34-019d-4ad6-b5fe-5a33a2cf251a', 'APPROVED_PATTERN_DELETE_7c775873-1ebf-4574-8cb1-29b0c661b8f3');
INSERT INTO public.privilege VALUES ('c87a8dd3-4e1a-4f63-8a60-3eb52c13c2c8', 'APPROVED_PATTERN_DELETE_0ee54310-5f4d-4435-9c34-cf93f742e101');
INSERT INTO public.privilege VALUES ('6e3df184-cce7-4efa-8fe8-e9f75f2a667e', 'APPROVED_PATTERN_DELETE_ca07715c-696e-4a62-af10-74145ff818f5');
INSERT INTO public.privilege VALUES ('55389b42-ced6-492e-86f8-e53f135d601d', 'APPROVED_PATTERN_DELETE_06c5d5cc-5c29-4a74-be75-dfba20cc4f80');
INSERT INTO public.privilege VALUES ('a10ee469-2cd9-45e9-963f-9095f608d1aa', 'APPROVED_PATTERN_DELETE_9167d0da-69ec-40a5-b7f8-5eab25833d70');
INSERT INTO public.privilege VALUES ('c7d04176-d7a4-408c-8a53-48ec790c69de', 'APPROVED_PATTERN_DELETE_3b3a9b48-63aa-4523-be3a-6a39fdf4bda7');
INSERT INTO public.privilege VALUES ('18f2509e-a3a5-43df-bca7-703e0b256e0d', 'APPROVED_PATTERN_DELETE_28343b10-ce82-4c1f-aef2-f7d95316b48e');
INSERT INTO public.privilege VALUES ('12bce721-fbd2-48a2-84fe-cffc1392e839', 'APPROVED_PATTERN_DELETE_cf3a2b5f-9d7a-4f2c-ba39-ab2911d3a7d7');
INSERT INTO public.privilege VALUES ('f713f533-5ec5-4cfe-96b3-f6878601127b', 'APPROVED_PATTERN_DELETE_6e2eacf0-d026-4a00-8ca4-157298b75f0f');
INSERT INTO public.privilege VALUES ('f8732782-8add-4e6d-a136-5d478dc6eed8', 'APPROVED_PATTERN_DELETE_3e74edee-f076-45b3-8247-a5dd19cb24b2');
INSERT INTO public.privilege VALUES ('5bd6bebe-9809-435e-ad82-a8d51590c03f', 'APPROVED_PATTERN_DELETE_78185c7d-f353-49ee-b1e2-c2a0bcfc4ed2');
INSERT INTO public.privilege VALUES ('22a28840-ced7-48af-a6fa-1fa92ca076cd', 'APPROVED_PATTERN_DELETE_96ec8c86-c024-4d03-a283-49375e43e086');
INSERT INTO public.privilege VALUES ('1e807613-5a5d-4327-b14c-49619862a12b', 'APPROVED_PATTERN_DELETE_b5c458ea-3a4e-4211-afc9-82510c2cff46');
INSERT INTO public.privilege VALUES ('e239a024-d242-472e-86ce-a2d474fa54a5', 'APPROVED_PATTERN_DELETE_adcaac7d-a028-4d33-9111-ef3e711637e7');
INSERT INTO public.privilege VALUES ('38959a08-ebcf-4611-8886-3a07a397bdf7', 'APPROVED_PATTERN_DELETE_ccb661e2-6c0d-4020-9eb2-abd290230b5b');
INSERT INTO public.privilege VALUES ('397c9669-eb9e-4c4c-98b5-408549a91dd5', 'APPROVED_PATTERN_DELETE_712b29e2-411b-4ef8-8f81-6cae15222c07');
INSERT INTO public.privilege VALUES ('d124b9e0-e8a3-4252-bfc0-5e46a3fdd56c', 'APPROVED_PATTERN_DELETE_662ffad9-7dd3-490f-93d2-efb92f74c5ae');
INSERT INTO public.privilege VALUES ('0efe6d13-158c-4361-8be9-73956c7cd8f1', 'APPROVED_PATTERN_DELETE_b244a2fb-1f27-4e6d-8f43-7e512798f299');
INSERT INTO public.privilege VALUES ('0e6f1420-1292-4351-a834-a14724bc9ab2', 'APPROVED_PATTERN_DELETE_84c81b22-765b-4edb-a6e7-c626151e0af8');
INSERT INTO public.privilege VALUES ('1bdd041f-8000-448e-85fe-e9fa702bbe5f', 'APPROVED_PATTERN_DELETE_c699fdf0-f31e-45c0-9d0d-cee2388e1544');
INSERT INTO public.privilege VALUES ('a9644b5c-e351-40de-8ab3-65aee49fbda3', 'APPROVED_PATTERN_DELETE_467cae27-d8be-4509-af26-64ed0a809028');
INSERT INTO public.privilege VALUES ('3ba52e50-e6c9-431a-af03-6495feec2f57', 'APPROVED_PATTERN_DELETE_5778b4ba-4acd-4c94-9c10-d83d80f75d50');
INSERT INTO public.privilege VALUES ('dd89af73-9f0d-4646-942b-31fcf7b0d71a', 'APPROVED_PATTERN_DELETE_38b1dd17-c3ff-46c4-b300-2e1c7d542abe');
INSERT INTO public.privilege VALUES ('2db3d381-6f0b-4ad7-a8c0-6033fe2edb79', 'APPROVED_PATTERN_DELETE_f619a8fd-fff8-4981-8947-48ebaaad993c');
INSERT INTO public.privilege VALUES ('55f59e6c-72ab-4c11-83e1-50a7ecc1a1aa', 'APPROVED_PATTERN_DELETE_60e3ca01-0b7a-4785-acd7-3dddad0eea8e');
INSERT INTO public.privilege VALUES ('8e097047-ff6c-4ac8-a4c3-6f3eeee6e601', 'APPROVED_PATTERN_DELETE_36531ec5-477c-4d74-8d84-43276359aa14');
INSERT INTO public.privilege VALUES ('bfff47d6-fbc8-4214-bc86-4804fe21c0b8', 'APPROVED_PATTERN_DELETE_a7e45f3a-e408-4593-9aba-0a724c5ebf26');
INSERT INTO public.privilege VALUES ('f6f2e1e8-8c95-440b-a9db-e008d713ca53', 'APPROVED_PATTERN_DELETE_9fee292c-8c59-4a99-a3c2-467717a22c70');
INSERT INTO public.privilege VALUES ('cb75dcbb-f0d7-4a0b-93b1-d442717d39c6', 'APPROVED_PATTERN_DELETE_3baad63c-42d2-46cb-b7a5-ab394b4e012c');
INSERT INTO public.privilege VALUES ('ab87b7bd-d334-483e-8822-6fa6bed486cb', 'APPROVED_PATTERN_DELETE_4d153210-05d9-43f0-8560-3c3bd722d8bd');
INSERT INTO public.privilege VALUES ('c731c68d-19a2-4646-b29b-62996d37e93a', 'APPROVED_PATTERN_DELETE_2ee3eb24-165d-46d5-976c-9eb052a1912b');
INSERT INTO public.privilege VALUES ('8c3e514a-2935-45b6-aaca-3047b71e776b', 'APPROVED_PATTERN_DELETE_d53673f0-fc52-48c8-8893-f8f244cf6ee3');
INSERT INTO public.privilege VALUES ('69b7e81b-f638-4aff-ba2c-8369cc5090cb', 'APPROVED_PATTERN_DELETE_3a1fb1cd-1078-4616-b603-a22c8f9449b2');
INSERT INTO public.privilege VALUES ('4ec2c4ce-fad0-462e-adad-4304897d874b', 'APPROVED_PATTERN_DELETE_10a46ac6-1420-41ad-9d3a-ab244d959062');
INSERT INTO public.privilege VALUES ('852a5eeb-8e7a-40bc-bab0-9d6184fd5d0b', 'APPROVED_PATTERN_DELETE_e6e239af-3d3a-4dfb-8c84-cbe268ca90d4');
INSERT INTO public.privilege VALUES ('e022cff9-a59a-4732-981c-ee9c417684e0', 'APPROVED_PATTERN_DELETE_ce95634f-69e0-4f97-a9b6-10bc8364849f');
INSERT INTO public.privilege VALUES ('fb0c71cd-0841-479c-846e-f32224518953', 'APPROVED_PATTERN_DELETE_ecb7d0a0-72d0-44c3-90dd-5b9af536ebca');
INSERT INTO public.privilege VALUES ('5510b91b-4cc0-4997-a4b2-7e25a978cc16', 'APPROVED_PATTERN_DELETE_61130a8b-68ad-4281-80ad-a62d44bc4090');
INSERT INTO public.privilege VALUES ('2ff5847d-b43e-4084-bdee-02c25777acc3', 'APPROVED_PATTERN_DELETE_0a4ffca5-3b28-4897-9842-295f9bb6bea8');
INSERT INTO public.privilege VALUES ('7f3066aa-cd6f-4d7d-9d5a-0d93d513862f', 'APPROVED_PATTERN_DELETE_386a4d90-1a3d-427c-96a6-6f1a433daae6');
INSERT INTO public.privilege VALUES ('99b45364-06d4-43ce-ba4f-7cc730c734f0', 'APPROVED_PATTERN_DELETE_407ae0d5-e5be-4151-900b-041ed5dfcdbe');
INSERT INTO public.privilege VALUES ('a89df081-a0f1-48b6-91cd-0123af823846', 'APPROVED_PATTERN_DELETE_b8e826e0-dc07-4515-ae10-87b402e3d52c');
INSERT INTO public.privilege VALUES ('9a334241-29de-48eb-8284-1d6ddeb02afd', 'APPROVED_PATTERN_DELETE_358bf776-378f-465e-a9e6-e8a1c7716825');
INSERT INTO public.privilege VALUES ('4bb75b1b-777a-45f6-ba4d-4a1b73a6a5fb', 'APPROVED_PATTERN_DELETE_a81eb2c5-84ce-4a14-8242-e9ce19532423');
INSERT INTO public.privilege VALUES ('a248ae2e-23c0-46db-b739-700535f5bedf', 'APPROVED_PATTERN_DELETE_7f488cff-525f-4e50-a6c6-219b4ab4854d');
INSERT INTO public.privilege VALUES ('268275bc-2741-4acd-85eb-74f570eb1c9e', 'APPROVED_PATTERN_DELETE_9b50b4bf-4b5c-4d52-a7d3-1b0e6a0f53f9');
INSERT INTO public.privilege VALUES ('7c53bfb4-3154-4d7e-b2f8-978d574cefe6', 'APPROVED_PATTERN_DELETE_2fb586fd-9982-4f4e-987b-17909069e10e');
INSERT INTO public.privilege VALUES ('1df837f2-0120-4ef5-87fc-42ea0fd096dc', 'APPROVED_PATTERN_DELETE_cbc6fe12-4a7d-4de5-b709-b20dd0cacbbf');
INSERT INTO public.privilege VALUES ('41ef367c-6fa9-4e8e-81f4-b78995671eb1', 'APPROVED_PATTERN_DELETE_d285eda8-41ee-4ba2-879d-52acec6a1416');
INSERT INTO public.privilege VALUES ('a9d0ee78-efc4-46d5-911b-9d7450a9b476', 'APPROVED_PATTERN_DELETE_81dba31f-e19a-4a8b-a07f-e1561fc2ce06');
INSERT INTO public.privilege VALUES ('8498a403-e92b-4abd-a853-50a90638a90b', 'APPROVED_PATTERN_DELETE_b6436fe2-9e3f-49ac-9e09-5cce86e480e1');
INSERT INTO public.privilege VALUES ('c88c9e85-4cba-4e25-9506-4468940588e1', 'APPROVED_PATTERN_DELETE_7c8849ee-26ad-4910-b798-902367e617d6');
INSERT INTO public.privilege VALUES ('5d00b679-8c22-4a1d-9b35-207db29f388f', 'APPROVED_PATTERN_DELETE_80d829b6-d1ed-40a3-95ea-7e0b34de8eba');
INSERT INTO public.privilege VALUES ('1764ca98-785b-4a66-bec3-dd3bae2bf9c2', 'APPROVED_PATTERN_DELETE_e6106e4d-46a4-4557-8c2d-009ff7159464');
INSERT INTO public.privilege VALUES ('d0a3d09c-63df-4be3-901d-6fe975ed74dd', 'APPROVED_PATTERN_DELETE_68a4bbc9-2535-4cfc-a4f4-b149adfb674a');
INSERT INTO public.privilege VALUES ('a157ec40-6bfb-4fc1-8d4d-0944c84f3999', 'APPROVED_PATTERN_DELETE_f69638dc-6844-415c-a679-d3982c691f38');
INSERT INTO public.privilege VALUES ('213b82de-6377-4645-93b7-c74cb21d773a', 'APPROVED_PATTERN_DELETE_35de7456-fced-4c23-bca5-8777984bf731');
INSERT INTO public.privilege VALUES ('47df99f1-5fdb-4526-bcba-ad19c60ac708', 'APPROVED_PATTERN_DELETE_c12b3086-5fa4-4140-915b-330fbffdfc43');
INSERT INTO public.privilege VALUES ('359f209c-1e2d-48b1-9eeb-6bbd3fad979b', 'APPROVED_PATTERN_DELETE_b7602673-7825-48e2-829e-b9df269071fc');
INSERT INTO public.privilege VALUES ('66b06608-b9e2-42a9-826a-226e75cdf21c', 'APPROVED_PATTERN_DELETE_55f886b3-4fe0-4bc8-8bde-d0b7004a70ee');
INSERT INTO public.privilege VALUES ('906e6d5d-bff1-4752-9fae-04549f0658c5', 'APPROVED_PATTERN_DELETE_b86f6da4-3c9e-4146-8161-9c806b50b923');
INSERT INTO public.privilege VALUES ('79e9df18-8fb7-470b-8a29-a26bb3bd81c0', 'APPROVED_PATTERN_DELETE_7d2e969e-c266-4a83-85a5-5a07d528c6ef');
INSERT INTO public.privilege VALUES ('be874184-9da7-48a7-8ca4-719b72be5532', 'APPROVED_PATTERN_DELETE_6d763f90-d7d4-4d58-a82c-09bb68ac6b82');
INSERT INTO public.privilege VALUES ('a9cb835b-39b3-4681-b382-24f5ed773086', 'APPROVED_PATTERN_DELETE_0b5ba218-dcb1-4841-a517-b6010b8a2951');
INSERT INTO public.privilege VALUES ('03ed7442-07a0-4e49-8bd4-57adb0d10f46', 'APPROVED_PATTERN_DELETE_d8c99d65-8950-4b83-aa1d-549a88e28339');
INSERT INTO public.privilege VALUES ('311468e5-cfc8-4619-9211-5a139b0c1306', 'APPROVED_PATTERN_DELETE_b228d692-009d-4122-b617-1a3799a68766');
INSERT INTO public.privilege VALUES ('26c3886a-1606-4589-b570-73ae49455829', 'APPROVED_PATTERN_DELETE_94331ad5-4f67-4183-8fbe-55fe9c542789');
INSERT INTO public.privilege VALUES ('78277cd6-9857-4e3d-b868-f73cd0de0ad2', 'APPROVED_PATTERN_DELETE_5d7a8af7-94fb-4c63-958c-403d845d4107');
INSERT INTO public.privilege VALUES ('753631be-2b93-4bea-a375-17f9dbb26a6f', 'APPROVED_PATTERN_DELETE_b9484449-18bd-4667-a9e5-1f6bf66d442d');
INSERT INTO public.privilege VALUES ('c6a90d57-a004-445a-94b1-31f60e84d591', 'APPROVED_PATTERN_DELETE_cd686d46-c77f-4c35-8016-f9819282f8a5');
INSERT INTO public.privilege VALUES ('83dc2875-631d-499e-a4ef-b08f5196f33c', 'APPROVED_PATTERN_DELETE_da2bd135-4ba2-4b98-bb77-c60607402094');
INSERT INTO public.privilege VALUES ('e5d033c3-f883-41be-b12d-d5e850554afc', 'APPROVED_PATTERN_DELETE_45fdc628-1914-4b2c-92c4-38f7be3c622a');
INSERT INTO public.privilege VALUES ('3b670b76-dcd4-42bb-82ab-f6adf8935f94', 'APPROVED_PATTERN_DELETE_5190eb38-48a2-41ee-b85e-dbb3c609ed30');
INSERT INTO public.privilege VALUES ('d0541949-6dc9-4eb2-aad9-3875755395d3', 'APPROVED_PATTERN_DELETE_da3a0878-df45-4eb1-857e-82e5ae055683');
INSERT INTO public.privilege VALUES ('231bd716-145c-45aa-8f70-a07f250ba2fc', 'APPROVED_PATTERN_DELETE_1dafcbc7-f048-4867-ad7f-2d0b40e096e1');
INSERT INTO public.privilege VALUES ('518bfec1-24c5-4efe-b742-7503d1a7cad4', 'APPROVED_PATTERN_DELETE_a6e349c7-d5c0-42a7-bd78-21e4b2738fa7');
INSERT INTO public.privilege VALUES ('12cb76a3-1474-49de-8d2e-105abdac3da3', 'APPROVED_PATTERN_DELETE_0145a85e-3b00-4e64-9e20-bdaf77d2fc86');
INSERT INTO public.privilege VALUES ('295f2497-07ea-42e9-bf5d-2289ce8b526d', 'APPROVED_PATTERN_DELETE_e35d735c-f724-4946-aad9-7fa520d5a843');
INSERT INTO public.privilege VALUES ('3d3e9e29-9177-43d1-8b46-b421cdf2053f', 'APPROVED_PATTERN_DELETE_e22b33bc-b5cf-4a61-a8e9-dd204c48857b');
INSERT INTO public.privilege VALUES ('8f534328-6d1c-41ce-8b39-11c79f6fbe20', 'APPROVED_PATTERN_DELETE_50d0b397-d2df-4797-8975-d2526c8cdd63');
INSERT INTO public.privilege VALUES ('1c3d7c88-f6b9-41cb-ac6f-3f3e1d46297b', 'APPROVED_PATTERN_DELETE_9bcced52-edb3-44a2-a86d-43499ea61289');
INSERT INTO public.privilege VALUES ('00f78bfa-e734-4ed5-8424-2e40c3265e48', 'APPROVED_PATTERN_DELETE_4710c428-a004-4da1-98a8-58205e051ec2');
INSERT INTO public.privilege VALUES ('544b08fa-3703-411e-ba87-535479730724', 'APPROVED_PATTERN_DELETE_bace6e02-1e3f-4ddc-9e9a-eb04933fa226');
INSERT INTO public.privilege VALUES ('7019160b-426c-469f-a3a5-857971f2b654', 'APPROVED_PATTERN_DELETE_801d44ab-fc18-4cc0-8e10-49f2e73b229a');
INSERT INTO public.privilege VALUES ('f47dea03-cefb-4cab-94c2-83cec06e4749', 'APPROVED_PATTERN_DELETE_3b090377-8703-4cf7-9ce8-a432dce76335');
INSERT INTO public.privilege VALUES ('7a306ed5-1b0d-4a2e-b287-120a1d82acca', 'APPROVED_PATTERN_DELETE_15da23b4-5ad5-44ff-8936-140dd98935df');
INSERT INTO public.privilege VALUES ('be7ec1ca-2c13-40b9-9b5c-db0381ff88e6', 'APPROVED_PATTERN_DELETE_f675060d-34cd-4af7-abb7-864a8b9adef6');
INSERT INTO public.privilege VALUES ('99f07b75-0743-42a9-be55-80b6a14dc701', 'APPROVED_PATTERN_DELETE_155933df-9d41-4b2d-bdf8-11291fb7084c');
INSERT INTO public.privilege VALUES ('a3f5377a-3341-4d41-9392-ac56c164a588', 'APPROVED_PATTERN_DELETE_599e5d49-ede8-489b-bb72-3e41c288ae89');
INSERT INTO public.privilege VALUES ('2fce0a65-903d-4555-9590-983e91b0e78f', 'APPROVED_PATTERN_DELETE_3d6ef3c9-28dd-4d2f-b006-e3427e24c0b0');
INSERT INTO public.privilege VALUES ('0bc63598-3983-4197-a8bc-42d4d2c1438c', 'APPROVED_PATTERN_DELETE_f53f1daa-1eda-4fd9-966f-3f14c107930a');
INSERT INTO public.privilege VALUES ('9f6469e1-1170-44b7-ba48-2b5abc44ad5b', 'APPROVED_PATTERN_DELETE_10edf46a-113f-4688-9af6-75494b950fbf');
INSERT INTO public.privilege VALUES ('aea3dc29-300f-44e6-ac9d-69d1587cc161', 'APPROVED_PATTERN_DELETE_47e05a38-2201-49f2-80e6-17d618ed260f');
INSERT INTO public.privilege VALUES ('9f549931-498f-4f7b-b6d2-a6ab5f05c620', 'APPROVED_PATTERN_DELETE_e4e0fe4d-8757-4253-95de-a6f13ea66f30');
INSERT INTO public.privilege VALUES ('fb422ac2-f145-46d5-a87b-b102ffda17fc', 'APPROVED_PATTERN_DELETE_000904c1-aa91-498b-88da-d6cb014931df');
INSERT INTO public.privilege VALUES ('adabc8a8-f3b5-4354-bbdd-ceef988f1312', 'APPROVED_PATTERN_DELETE_a7bc398e-972a-481f-8c63-b4c5a1b946d9');
INSERT INTO public.privilege VALUES ('12e2c2c6-00a8-4011-92db-7c3a25ef7c25', 'APPROVED_PATTERN_DELETE_678a2e5a-697f-4416-afe6-fd18bc935bdc');
INSERT INTO public.privilege VALUES ('b83c2925-36a1-466d-acd5-c5fe933546f5', 'APPROVED_PATTERN_DELETE_34b02438-ceaf-4177-9a3e-74f907cfd63d');
INSERT INTO public.privilege VALUES ('8673372d-e652-4fa0-ad98-b3c398240c7d', 'APPROVED_PATTERN_DELETE_d6d9a4e5-0944-4360-8af9-77d6f780716e');
INSERT INTO public.privilege VALUES ('d80bb78d-c26e-454d-b1d9-4ff7d08e846c', 'APPROVED_PATTERN_DELETE_d6db370c-42eb-414b-80b7-af50c14fb7e4');
INSERT INTO public.privilege VALUES ('96270329-803b-4faf-9bd7-887b48c91a90', 'APPROVED_PATTERN_DELETE_a9fabb2b-a9ba-4627-a0a9-455dacf6c8c8');
INSERT INTO public.privilege VALUES ('4b51a6bd-b27b-4fe5-a750-54c43eae78a2', 'APPROVED_PATTERN_DELETE_d30b4f69-877e-405e-9070-f05398ebd5e1');
INSERT INTO public.privilege VALUES ('d7bd95a1-12a1-4d37-a698-a87ccd00fde8', 'APPROVED_PATTERN_DELETE_de5b0951-2b66-4312-bf06-7082d3232e6e');
INSERT INTO public.privilege VALUES ('b30479ce-13cc-4b61-9f2f-111b3e3ee52a', 'APPROVED_PATTERN_DELETE_66620d74-ebc6-49f5-aafb-5749a8dec5c6');
INSERT INTO public.privilege VALUES ('de4a5cc1-3650-4066-9dab-2c46b17c8c8e', 'APPROVED_PATTERN_DELETE_25ed4f02-2b74-4493-8f85-812c28feb9a8');
INSERT INTO public.privilege VALUES ('bc6f5de5-502c-402d-8ac8-0a85e56eaf32', 'APPROVED_PATTERN_DELETE_80a5a17d-7a99-421c-a743-7ab12c2d727d');
INSERT INTO public.privilege VALUES ('c3e392d0-80b8-48f1-bdcb-0e7441b899c5', 'APPROVED_PATTERN_DELETE_3ab1e189-e4a8-4c1c-8a4b-426e07f8a267');
INSERT INTO public.privilege VALUES ('2984b317-afce-4f91-9128-a9c578fc3c63', 'APPROVED_PATTERN_DELETE_b4ea4a4a-e892-4780-80d9-40d6a20e8f6f');
INSERT INTO public.privilege VALUES ('6d908328-5a2f-4e85-a506-bccca4bd907b', 'APPROVED_PATTERN_DELETE_1463b4df-ea4f-44c9-952c-a5612f2016b6');
INSERT INTO public.privilege VALUES ('e3a7dad5-6521-4f50-a25f-5b59e4214d4a', 'APPROVED_PATTERN_DELETE_a614b4ee-e8e3-4600-8324-c170e1b69ec0');
INSERT INTO public.privilege VALUES ('2f668065-8afb-4d6d-981a-db29c53e7e4d', 'APPROVED_PATTERN_DELETE_e7c75a04-f9d3-40e0-aec6-6eabcfbc4aee');
INSERT INTO public.privilege VALUES ('8ca07668-3d55-4697-a16a-88e9fb46150f', 'APPROVED_PATTERN_DELETE_5afb64cd-694b-45f1-bf2c-c371373aaee3');
INSERT INTO public.privilege VALUES ('5ba1b63c-a371-472d-955a-95180255c600', 'APPROVED_PATTERN_DELETE_72e1d670-0d69-4f26-98b3-d216a2f00107');
INSERT INTO public.privilege VALUES ('f1835a12-d1a4-4b54-b468-c4fd64a30b54', 'APPROVED_PATTERN_DELETE_5dc385bb-2691-4f20-86c1-11dad63afd3f');
INSERT INTO public.privilege VALUES ('9a77eaa4-b0f4-4b13-b685-3c91c7aea8ff', 'APPROVED_PATTERN_DELETE_4c7a0a0f-face-4953-baf5-5cacedd36f0c');
INSERT INTO public.privilege VALUES ('fc651534-6117-4d73-a81b-feb0c188aade', 'APPROVED_PATTERN_DELETE_3339fd4b-158d-4a83-9591-a1dba018e238');
INSERT INTO public.privilege VALUES ('6d7dfce3-4b0f-4ff1-99e7-a7341e8e08f8', 'APPROVED_PATTERN_DELETE_3cbcb60b-853f-46c0-beb7-f63fa6e9bc12');
INSERT INTO public.privilege VALUES ('8a7c90f7-1311-4f8a-9176-636579132310', 'APPROVED_PATTERN_DELETE_91a39a34-5f79-477a-8bdb-b248ef79b4cc');
INSERT INTO public.privilege VALUES ('c201b09a-fbb7-4a1c-ac03-e4cbada28dd3', 'APPROVED_PATTERN_DELETE_c0a25c90-aebe-4fbf-8579-358afa157d21');
INSERT INTO public.privilege VALUES ('3446e99d-0841-4986-a5b0-aa90d0a99b77', 'APPROVED_PATTERN_DELETE_2dec367b-fbf3-4e33-bf1b-1ab7581a9e51');
INSERT INTO public.privilege VALUES ('a87307cc-1924-40c9-a226-4f6e76f29120', 'APPROVED_PATTERN_DELETE_6c53a774-8c9e-4fb3-9283-454ae5cffcdb');
INSERT INTO public.privilege VALUES ('c15848e6-a44e-43bc-bdb3-37558b1bd4c0', 'APPROVED_PATTERN_DELETE_9bf3816c-cf1c-4b85-8cc8-f0ae0a8c5d7b');
INSERT INTO public.privilege VALUES ('ea280e74-ea87-43d2-bbd1-fae85565bea0', 'APPROVED_PATTERN_DELETE_45559bb5-24ff-4432-9bb1-8802778180cd');
INSERT INTO public.privilege VALUES ('5524bae8-aefc-42f2-916d-2925fdfcdd4e', 'APPROVED_PATTERN_DELETE_2cd1fca5-139f-4159-a040-fd6b59449398');
INSERT INTO public.privilege VALUES ('1455fb9a-8299-4938-bcc2-4d9fd341294c', 'APPROVED_PATTERN_DELETE_1c3b59e7-7b7f-49eb-8f79-8b5a26212367');
INSERT INTO public.privilege VALUES ('8a4a0e62-0646-4d24-b47c-43549a25761b', 'APPROVED_PATTERN_DELETE_eae90baf-ea92-4a7e-ae12-7f6119cfb376');
INSERT INTO public.privilege VALUES ('08181a00-e8ae-40a2-a62a-0196dd5574ca', 'APPROVED_PATTERN_DELETE_dc9e7d0c-923b-4f29-b118-2a743baab105');
INSERT INTO public.privilege VALUES ('657ff708-999d-468e-af8d-ac35d756eb3e', 'APPROVED_PATTERN_DELETE_df903950-138e-45ae-8fdd-787dcfdeb5f1');
INSERT INTO public.privilege VALUES ('dbba4866-eef2-4285-9e5b-1c7c04de82d3', 'APPROVED_PATTERN_DELETE_80945f10-25df-465b-a3aa-38df56adbbac');
INSERT INTO public.privilege VALUES ('78aa2d53-5dc6-487a-b418-9e4d852760d5', 'APPROVED_PATTERN_DELETE_d5da5afa-d17d-4ab5-a56c-a399a0bf376a');
INSERT INTO public.privilege VALUES ('7c34b474-9c68-461f-bf53-a67e9d653947', 'APPROVED_PATTERN_DELETE_87bf22e8-5611-45e4-98f2-0ead82bc1095');
INSERT INTO public.privilege VALUES ('4a4a5879-566e-4c25-beb2-4dec31d6a7d8', 'APPROVED_PATTERN_DELETE_7fdef8d4-e31e-41b6-80a0-caf365ec5247');
INSERT INTO public.privilege VALUES ('ee735e2b-2b38-4dc1-8a5b-db290410cad0', 'APPROVED_PATTERN_DELETE_560a18fd-4fe7-49ad-a7d5-20a3011ddb3c');
INSERT INTO public.privilege VALUES ('dae84836-9759-4181-acd3-30af1662fec2', 'APPROVED_PATTERN_DELETE_ea97c486-7047-4fb9-97e8-f0a58b072faa');
INSERT INTO public.privilege VALUES ('f7f7f4a5-6033-493f-b3de-8421e6481fe9', 'APPROVED_PATTERN_DELETE_b9a1279c-9b1a-4966-bde2-2743988dde1b');
INSERT INTO public.privilege VALUES ('6b3b2413-0479-465b-a91c-1334ae56f2d4', 'APPROVED_PATTERN_DELETE_89aa9d13-decb-4e49-b738-a97394042eec');
INSERT INTO public.privilege VALUES ('385ce531-43e8-4de7-811b-029d7ab1cd08', 'APPROVED_PATTERN_DELETE_de2064d4-c769-409f-92c5-665f6da84635');


--
-- TOC entry 3265 (class 0 OID 16528)
-- Dependencies: 236
-- Data for Name: role_privileges; Type: TABLE DATA; Schema: public; Owner: patternatlas
--

INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', '2dd99322-adeb-49f1-a88b-088829fdbad5');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', '024eb53a-8e75-4109-b00e-e35aff24b2e5');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', 'b2403c34-3894-4a63-8628-ba8c96477cf3');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', '5d574f21-5151-4ad6-93db-024452630ea5');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', '7cd08260-e6d7-45f0-bea2-26b854a54f06');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', 'd0b0db3d-c368-42f5-9a05-cfe89d284636');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', '5d164e4a-1130-4cc2-8070-a23680e245ae');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', '5353ddd2-e720-460f-a887-b95a9f036091');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', '99739159-5f6b-4031-8bdd-b570dcc9ca30');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', 'e125fbed-daa1-4a17-b4da-ab69758ff580');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', '0a138873-1e76-411f-b792-3df50f76898a');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', '2fe73819-7c3b-473c-bd75-80d7bd99a9cf');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', 'a7a4ef2b-5def-4daf-b844-5a553810ed8c');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', '551f5827-6f07-4aef-83ee-80c9ea239718');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', '903617a7-54c2-4d36-a9f0-4879f606a394');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', '958f608e-95d1-4c74-a324-c0b121106d72');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', '9e4658a6-17f9-4e74-9f3a-b9fc1d75d1d9');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', '6ffb7514-159c-4cdf-aa50-c0d5f536fa75');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', 'f7f13e40-456a-4c3f-aaf7-6ff9733a0534');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', 'b152095d-d21b-4c7a-bf16-68e990b298f8');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', '596995c3-286e-4eea-996d-830f4ce3b0c0');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', 'bb6f4e60-08a2-48d2-b0da-69eab58d39e8');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', '7727e4db-f892-440f-aeaf-86cf09275800');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', '3b9fd885-a4c9-4f6a-bcf3-e2d01daed51d');
INSERT INTO public.role_privileges VALUES ('e75701d2-06f3-4ade-8d49-790020ac808e', '2fdfcb48-1ae2-4cd9-b8da-844b4da44373');


--
-- TOC entry 3267 (class 0 OID 16537)
-- Dependencies: 238
-- Data for Name: undirected_hyperedge; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3268 (class 0 OID 16543)
-- Dependencies: 239
-- Data for Name: undirected_hyperedge_patterns; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3270 (class 0 OID 16552)
-- Dependencies: 241
-- Data for Name: user_entity_roles; Type: TABLE DATA; Schema: public; Owner: patternatlas
--



--
-- TOC entry 3276 (class 0 OID 0)
-- Dependencies: 218
-- Name: hibernate_sequence; Type: SEQUENCE SET; Schema: public; Owner: patternatlas
--

SELECT pg_catalog.setval('public.hibernate_sequence', 1, false);


-- Completed on 2021-11-28 17:10:56 CET

--
-- PostgreSQL database dump complete
--

