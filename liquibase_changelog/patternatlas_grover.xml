<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:pro="http://www.liquibase.org/xml/ns/pro" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-4.6.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.6.xsd">
    <changeSet author="PhilWun" id="1896454976142-1">
        <insert tableName="pattern">
            <column name="id" value="b8c2dca0-563a-432d-adfd-8bd15ef0dfb8"/>
            <column name="name" value="Grover"/>
            <column name="uri" value="https://patternpedia.org/patternLanguages/reformulatedQuantumComputingPatterns/grover"/>
            <column name="content" value="{&quot;Alias&quot;:&quot;&quot;,&quot;Intent&quot;:&quot;How can you find a specific element \\( \\tilde{x} \\) within an unsorted database of \\( N \\) elements?&quot;,&quot;Result&quot;:&quot;The solution string $\\tilde{x}$&quot;,&quot;Context&quot;:&quot;The goal is to find the correct bit string\r\n$\\tilde{x} \\in \\{0,1\\}^N$\r\nfor which the function\r\n\\[\r\nf: \\{0,1\\}^N \\rightarrow \\{0,1\\}\r\n\\]\r\n\\[\r\nf(x) =\r\n\\begin{cases}\r\n0, &amp; x \\neq \\tilde{x} \\\\\r\n1, &amp; x = \\tilde{x}\r\n\\end{cases}\r\n\\]\r\nbecomes 1 (indicator function). The assumption is that the function itself is provided in the form of an oracle, and any bit string with length $N$ can be evaluated using it.&quot;,&quot;Solution&quot;:&quot;1. **Create the superposition of all possible solutions:**\r\n  \\[\r\n  s = \\frac{1}{\\sqrt{N}} \\sum_{x=0}^{N-1} |x\\rangle\r\n  \\]\r\n  This step involves preparing the quantum system in an equal superposition of all possible states, representing every possible solution.\r\n2. **Repeat the following steps until the amplitude of the desired solution $\\tilde{x}$ is \&quot;large enough\&quot;:**\r\n  2.1. **Negate the amplitude of the target solution $\\tilde{x}$:**\r\n  Apply the oracle function that flips the sign of the amplitude corresponding to the target state \\( |$\\tilde{x}$\\rangle \\).\r\n  2.2. **Reflect all amplitudes about the current average amplitude:**\r\n  Perform a diffusion operator (also known as the Grover diffusion or inversion about the mean), which reflects the quantum state across the average of all amplitudes. This step amplifies the amplitude of the target solution while reducing the amplitudes of other states.\r\n3. **Measure the final quantum state:**\r\n  After repeating the above steps a sufficient number of times, measure the quantum register. The result will likely be the desired solution $\\tilde{x}$.&quot;,&quot;Variants&quot;:&quot;&quot;,&quot;Known Uses&quot;:&quot;Unstructured search, optimization problems, and satisfiability problems like 3-KNF-SAT where we want to find a solution to given clauses.&quot;,&quot;Related Patterns&quot;:&quot;&quot;}"/>
            <column name="icon_url" value="https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-content/main/icons/quantum_computing_patterns/grover_icon.svg"/>
            <column name="rendered_content" value="{&quot;Alias&quot;:&quot;&quot;,&quot;Intent&quot;:&quot;How can you find a specific element \\( \\tilde{x} \\) within an unsorted database of \\( N \\) elements?&quot;,&quot;Result&quot;:&quot;The solution string $\\tilde{x}$&quot;,&quot;Context&quot;:&quot;The goal is to find the correct bit string\r\n$\\tilde{x} \\in \\{0,1\\}^N$\r\nfor which the function\r\n\\[\r\nf: \\{0,1\\}^N \\rightarrow \\{0,1\\}\r\n\\]\r\n\\[\r\nf(x) =\r\n\\begin{cases}\r\n0, &amp; x \\neq \\tilde{x} \\\\\r\n1, &amp; x = \\tilde{x}\r\n\\end{cases}\r\n\\]\r\nbecomes 1 (indicator function). The assumption is that the function itself is provided in the form of an oracle, and any bit string with length $N$ can be evaluated using it.&quot;,&quot;Solution&quot;:&quot;1. **Create the superposition of all possible solutions:**\r\n  \\[\r\n  s = \\frac{1}{\\sqrt{N}} \\sum_{x=0}^{N-1} |x\\rangle\r\n  \\]\r\n  This step involves preparing the quantum system in an equal superposition of all possible states, representing every possible solution.\r\n2. **Repeat the following steps until the amplitude of the desired solution $\\tilde{x}$ is \&quot;large enough\&quot;:**\r\n  2.1. **Negate the amplitude of the target solution $\\tilde{x}$:**\r\n  Apply the oracle function that flips the sign of the amplitude corresponding to the target state \\( |$\\tilde{x}$\\rangle \\).\r\n  2.2. **Reflect all amplitudes about the current average amplitude:**\r\n  Perform a diffusion operator (also known as the Grover diffusion or inversion about the mean), which reflects the quantum state across the average of all amplitudes. This step amplifies the amplitude of the target solution while reducing the amplitudes of other states.\r\n3. **Measure the final quantum state:**\r\n  After repeating the above steps a sufficient number of times, measure the quantum register. The result will likely be the desired solution $\\tilde{x}$.&quot;,&quot;Variants&quot;:&quot;&quot;,&quot;Known Uses&quot;:&quot;Unstructured search, optimization problems, and satisfiability problems like 3-KNF-SAT where we want to find a solution to given clauses.&quot;,&quot;Related Patterns&quot;:&quot;&quot;}"/>
            <column name="pattern_language_id" value="af7780d5-1f97-4536-8da7-4194b093ab1d"/>
            <column name="paper_ref" value=""/>
            <column name="deployment_modeling_behavior_pattern"/>
            <column name="deployment_modeling_structure_pattern"/>
            <column name="tags" value="algorithm"/>
        </insert>
    </changeSet>
</databaseChangeLog>
