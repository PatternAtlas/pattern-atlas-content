<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:pro="http://www.liquibase.org/xml/ns/pro" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-latest.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">
    <changeSet author="marvin (generated)" id="1698913867280-35"> 
        <update tableName="pattern">
            <column name="content" value="{&quot;Alias&quot;: &quot;Enter your input for this section here.&quot;, &quot;Forces&quot;: &quot;For smaller quantum devices, limited by their number of qubits and successfully executable gates, to contribute to the computation of a larger quantum circuit, it is necessary to divide the larger circuit into several smaller computations. Each of these smaller computations must require fewer resources, while collectively they must preserve the original circuit's result. However, several factors hinder the partitioning of a quantum circuit into multiple smaller computations. First, multi-qubit gates in a quantum circuit can create entanglement between the qubits on which they operate, resulting in the interdependence of their states. As a result, a quantum circuit with all qubits interconnected by multi-qubit gates cannot be partitioned into smaller, disconnected circuits that can be independently computed and then combined to produce the same result as the original circuit. Furthermore, removing multi-qubit gates to partition the circuit alters the computation's result. Moreover, the absence of shared entanglement or other means of quantum communication between quantum devices renders the distribution of a quantum circuit computation over multiple devices impossible.&quot;, &quot;Intent&quot;: &quot;How to partition the computation of a quantum circuit into multiple smaller computations fitting the capabilities of available quantum devices?&quot;, &quot;Result&quot;: &quot;Each individual subcircuit execution requires fewer qubits and gates, consequently reducing the hardware requirements of the quantum devices and enhancing the overall computation's robustness against errors and decoherence. Replacing the original circuit with a linear combination of subcircuits resulting from the cut enables replicating the effect of entanglement and, consequently, also the result. Each partitioned subcircuit can be executed successively on one or concurrently on multiple quantum devices to decrease the overall runtime of the computation \\[[Bravyi et al, 2022](https://pubs.aip.org/aip/jap/article/132/16/160902/2837574/The-future-of-quantum-computing-with)\\]. However, compared to directly executing the original circuit, more shots are needed due to the multiplicative factor each cut introduces for estimating the expectation value with desired statistical accuracy  \\[[Piveteau et al, 2024](https://ieeexplore.ieee.org/document/10236453)\\]. To minimize the resulting additional overhead and error propagation, the placement of cuts, e.g. WIRE CUTs and GATE CUTs, and the structure of the subcircuits should be optimized \\[[Casciola et al., 2022](https://ieeexplore.ieee.org/document/9897308)\\]. Achieving this optimization can be automated through the utilization of mixed-integer programming techniques \\[[Tang et al., 2021](https://dl.acm.org/doi/10.1145/3445814.3446758)\\].&quot;, &quot;Context&quot;: &quot;The maximum circuit width that a quantum device is able to execute is determined by its qubit count. As a result, devices with a limited number of qubits are restricted to executing circuits of small widths. Additionally, current NISQ devices face further limitations, such as high error rates and low coherence times, which impose restrictions on the number of gates that can be executed successfully in a circuit. &quot;, &quot;Examples&quot;: &quot;Enter your input for this section here.&quot;, &quot;Solution&quot;: &quot;Employ circuit cutting to divide a quantum circuit's computation into the computation of smaller circuits \\[[Peng et al., 2020](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.125.150504) [Mitarai et al., 2021](https://iopscience.iop.org/article/10.1088/1367-2630/abd7bc)\\] as shown in the sketch. In the first step, the circuit is divided into multiple different variations of it, known as *subcircuits*. Each of these subcircuits can be partitioned along a cutting line, allowing the individual execution of its disconnected parts in the second step. In the final third step, these separate results can be combined for each subcircuit, and their outcomes are then merged to obtain the original circuit's output using classical post-processing.\n\n![Solution sketch](https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-content/main/sketches/quantum_computing_patterns/circuit_cutting_sketch.svg)&quot;, &quot;Known Uses&quot;: &quot;Circuit cutting has been utilized in several works to extend the width of executable circuits beyond a device's qubit limit \\[[Tang et al., 2021](https://dl.acm.org/doi/10.1145/3445814.3446758), [Ying et al., 2023](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.130.110601)\\] and improve results \\[[Ayral et al., 2021](https://link.springer.com/article/10.1007/s42979-021-00508-9), [Bechtold et al.,2023](https://iopscience.iop.org/article/10.1088/2058-9565/acf59c)\\].\nImplementations are integrated into [Pennylane](https://pennylane.ai/) and Qiskit's [Circuit Knitting Toolbox](https://qiskit-extensions.github.io/circuit-knitting-toolbox/).\nAdditionally, a workflow modeling extension has been introduced for orchestrating circuit cutting \\[[Beisel et al., 2023](https://www.scitepress.org/PublicationsDetail.aspx?ID=z3QRYnUlyQs=&amp;t=1)\\].&quot;, &quot;Related Pattern&quot;: &quot;Circuit cutting uses the GATE CUT and WIRE CUT patterns to decompose quantum circuits. The ORCHESTRATED EXECUTION can manage the control and data flow for circuit cutting, while PRIORITIZED EXECUTION can speed up subcircuit execution. Circuit cutting can be applied in VQAs, e.g., VQE or QAOA. It can also be used in combination with quantum error handing techniques, such as READOUT ERROR MITIGATION or GATE ERROR MITIGATION.&quot;}"/>
            <column name="rendered_content" value="{&quot;Alias&quot;: &quot;Enter your input for this section here.&quot;, &quot;Forces&quot;: &quot;For smaller quantum devices, limited by their number of qubits and successfully executable gates, to contribute to the computation of a larger quantum circuit, it is necessary to divide the larger circuit into several smaller computations. Each of these smaller computations must require fewer resources, while collectively they must preserve the original circuit's result. However, several factors hinder the partitioning of a quantum circuit into multiple smaller computations. First, multi-qubit gates in a quantum circuit can create entanglement between the qubits on which they operate, resulting in the interdependence of their states. As a result, a quantum circuit with all qubits interconnected by multi-qubit gates cannot be partitioned into smaller, disconnected circuits that can be independently computed and then combined to produce the same result as the original circuit. Furthermore, removing multi-qubit gates to partition the circuit alters the computation's result. Moreover, the absence of shared entanglement or other means of quantum communication between quantum devices renders the distribution of a quantum circuit computation over multiple devices impossible.&quot;, &quot;Intent&quot;: &quot;How to partition the computation of a quantum circuit into multiple smaller computations fitting the capabilities of available quantum devices?&quot;, &quot;Result&quot;: &quot;Each individual subcircuit execution requires fewer qubits and gates, consequently reducing the hardware requirements of the quantum devices and enhancing the overall computation's robustness against errors and decoherence. Replacing the original circuit with a linear combination of subcircuits resulting from the cut enables replicating the effect of entanglement and, consequently, also the result. Each partitioned subcircuit can be executed successively on one or concurrently on multiple quantum devices to decrease the overall runtime of the computation \\[[Bravyi et al, 2022](https://pubs.aip.org/aip/jap/article/132/16/160902/2837574/The-future-of-quantum-computing-with)\\]. However, compared to directly executing the original circuit, more shots are needed due to the multiplicative factor each cut introduces for estimating the expectation value with desired statistical accuracy  \\[[Piveteau et al, 2024](https://ieeexplore.ieee.org/document/10236453)\\]. To minimize the resulting additional overhead and error propagation, the placement of cuts, e.g. WIRE CUTs and GATE CUTs, and the structure of the subcircuits should be optimized \\[[Casciola et al., 2022](https://ieeexplore.ieee.org/document/9897308)\\]. Achieving this optimization can be automated through the utilization of mixed-integer programming techniques \\[[Tang et al., 2021](https://dl.acm.org/doi/10.1145/3445814.3446758)\\].&quot;, &quot;Context&quot;: &quot;The maximum circuit width that a quantum device is able to execute is determined by its qubit count. As a result, devices with a limited number of qubits are restricted to executing circuits of small widths. Additionally, current NISQ devices face further limitations, such as high error rates and low coherence times, which impose restrictions on the number of gates that can be executed successfully in a circuit. &quot;, &quot;Examples&quot;: &quot;Enter your input for this section here.&quot;, &quot;Solution&quot;: &quot;Employ circuit cutting to divide a quantum circuit's computation into the computation of smaller circuits \\[[Peng et al., 2020](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.125.150504) [Mitarai et al., 2021](https://iopscience.iop.org/article/10.1088/1367-2630/abd7bc)\\] as shown in the sketch. In the first step, the circuit is divided into multiple different variations of it, known as *subcircuits*. Each of these subcircuits can be partitioned along a cutting line, allowing the individual execution of its disconnected parts in the second step. In the final third step, these separate results can be combined for each subcircuit, and their outcomes are then merged to obtain the original circuit's output using classical post-processing.\n\n![Solution sketch](https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-content/main/sketches/quantum_computing_patterns/circuit_cutting_sketch.svg)&quot;, &quot;Known Uses&quot;: &quot;Circuit cutting has been utilized in several works to extend the width of executable circuits beyond a device's qubit limit \\[[Tang et al., 2021](https://dl.acm.org/doi/10.1145/3445814.3446758), [Ying et al., 2023](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.130.110601)\\] and improve results \\[[Ayral et al., 2021](https://link.springer.com/article/10.1007/s42979-021-00508-9), [Bechtold et al.,2023](https://iopscience.iop.org/article/10.1088/2058-9565/acf59c)\\].\nImplementations are integrated into [Pennylane](https://pennylane.ai/) and Qiskit's [Circuit Knitting Toolbox](https://qiskit-extensions.github.io/circuit-knitting-toolbox/).\nAdditionally, a workflow modeling extension has been introduced for orchestrating circuit cutting \\[[Beisel et al., 2023](https://www.scitepress.org/PublicationsDetail.aspx?ID=z3QRYnUlyQs=&amp;t=1)\\].&quot;, &quot;Related Pattern&quot;: &quot;Circuit cutting uses the GATE CUT and WIRE CUT patterns to decompose quantum circuits. The ORCHESTRATED EXECUTION can manage the control and data flow for circuit cutting, while PRIORITIZED EXECUTION can speed up subcircuit execution. Circuit cutting can be applied in VQAs, e.g., VQE or QAOA. It can also be used in combination with quantum error handing techniques, such as READOUT ERROR MITIGATION or GATE ERROR MITIGATION.&quot;}"/>
            <where>id='3d9bca6e-5fca-40c5-b005-8a794958f3aa'</where>
        </update>
        <update tableName="pattern">
            <column name="content" value="{&quot;Alias&quot;: &quot;Enter your input for this section here.&quot;, &quot;Forces&quot;: &quot;Given the non-trivial nature of the state, it cannot be measured and reinitialized based on the measurement outcome, as the qubit's full state is not revealed through the measurement process. Instead, the measurement collapses the qubit probabilistically to a state associated with the measurement basis, destroying its superposition and entanglement. Furthermore, since the state of the wire is unknown, it cannot be restored independently of the previous measurement either.&quot;, &quot;Intent&quot;: &quot;How to interrupt a wire in a quantum circuit classically such that no quantum information is transmitted while preserving the computation's result?&quot;, &quot;Result&quot;: &quot;Applying a WIRE CUT interrupts the wire classically without disturbing the computation's expectation value. The behavior of superposition and entanglement is simulated by replacing the wire with a linear combination of subcircuits that perform a measurement and then reinitialize the qubit. However, the trade-off involves executing multiple subcircuits, which raises the computational overhead in terms of shots needed to maintain the same statistical accuracy in the computed expectation value as the original circuit. To reduce this computational overhead, it is advantageous to incorporate classical communication in the cut, enabling each state preparation to depend on its immediate prior measurement outcome \\[[Brenner et al., 2023](https://arxiv.org/abs/2302.03366), [Pednault, 2023](https://arxiv.org/abs/2303.08287), [Harada et al., 2023](https://arxiv.org/abs/2303.07340)\\]. This approach also lowers the cost of cutting multiple wires together compared to cutting each wire individually. Furthermore, leveraging multiple devices for parallel execution of subcircuits decreases the total computation runtime \\[[Bravyi et al, 2022](https://pubs.aip.org/aip/jap/article/132/16/160902/2837574/The-future-of-quantum-computing-with)\\]. Additionally, employing maximum-likelihood fragment tomography can enhance subcircuit results and thereby improve the overall output quality \\[[Perlin et al, 2021](https://www.nature.com/articles/s41534-021-00390-6)\\]. However, a wire cut only reproduces the result regarding the expectation value, and therefore, it is not suited for single-shot experiments \\[[Brenner et al., 2023](https://arxiv.org/abs/2302.03366)\\].&quot;, &quot;Context&quot;: &quot;In a quantum circuit, a wire transfers a non-trivial quantum state between two gates, that is, a state that exhibits superposition and has the potential of entanglement with other qubits. The precise state conveyed by the wire is unknown. Furthermore, the quantum state experiences decay over time. Moreover, the interest of the experiment lies in the expectation value over multiple shots rather than the outcome of a single-shot execution.&quot;, &quot;Examples&quot;: &quot;Enter your input for this section here.&quot;, &quot;Solution&quot;: &quot;Apply a wire cut to decompose a circuit's wire into a weighted sum of subcircuits \\[[Peng et al., 2020](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.125.150504)\\]. As shown in the solution sketch, the subcircuits interrupt the wire with different measurements described by observables $O_{i}$ and subsequent qubit initializations of the states $\\ket{\\psi_{i}}$. The sum of the expectation values of these subcircuits, each weighted by real coefficient $a_i$, must replicate the expectation value of the original circuit. To cut the wire, run the subcircuits and combine their results based on the coefficients $a_{i}$ and the measurement outcomes.\n\n![Solution sketch](https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-content/main/sketches/quantum_computing_patterns/wire_cut_sketch.svg)&quot;, &quot;Known Uses&quot;: &quot;Wire cutting is applied in several circuit cutting works \\[[Tang et al., 2021](https://dl.acm.org/doi/10.1145/3445814.3446758), [Lowe et al., 2023](https://quantum-journal.org/papers/q-2023-03-02-934/)\\]. Moreover, their implementations are part of [Pennylane](https://pennylane.ai/) and in Qiskit's [Circuit Knitting Toolbox](https://qiskit-extensions.github.io/circuit-knitting-toolbox/).&quot;, &quot;Related Pattern&quot;: &quot;The WIRE CUT pattern, used in CIRCUIT CUTTING, applies STATE PREPARATION for qubit initialization after measurement in the cut. Additionally, it can be employed in VQAs, e.g, VQE or QAOA. PRIORITIZED EXECUTION can speed up subcircuit execution.&quot;}"/>
            <column name="rendered_content" value="{&quot;Alias&quot;: &quot;Enter your input for this section here.&quot;, &quot;Forces&quot;: &quot;Given the non-trivial nature of the state, it cannot be measured and reinitialized based on the measurement outcome, as the qubit's full state is not revealed through the measurement process. Instead, the measurement collapses the qubit probabilistically to a state associated with the measurement basis, destroying its superposition and entanglement. Furthermore, since the state of the wire is unknown, it cannot be restored independently of the previous measurement either.&quot;, &quot;Intent&quot;: &quot;How to interrupt a wire in a quantum circuit classically such that no quantum information is transmitted while preserving the computation's result?&quot;, &quot;Result&quot;: &quot;Applying a WIRE CUT interrupts the wire classically without disturbing the computation's expectation value. The behavior of superposition and entanglement is simulated by replacing the wire with a linear combination of subcircuits that perform a measurement and then reinitialize the qubit. However, the trade-off involves executing multiple subcircuits, which raises the computational overhead in terms of shots needed to maintain the same statistical accuracy in the computed expectation value as the original circuit. To reduce this computational overhead, it is advantageous to incorporate classical communication in the cut, enabling each state preparation to depend on its immediate prior measurement outcome \\[[Brenner et al., 2023](https://arxiv.org/abs/2302.03366), [Pednault, 2023](https://arxiv.org/abs/2303.08287), [Harada et al., 2023](https://arxiv.org/abs/2303.07340)\\]. This approach also lowers the cost of cutting multiple wires together compared to cutting each wire individually. Furthermore, leveraging multiple devices for parallel execution of subcircuits decreases the total computation runtime \\[[Bravyi et al, 2022](https://pubs.aip.org/aip/jap/article/132/16/160902/2837574/The-future-of-quantum-computing-with)\\]. Additionally, employing maximum-likelihood fragment tomography can enhance subcircuit results and thereby improve the overall output quality \\[[Perlin et al, 2021](https://www.nature.com/articles/s41534-021-00390-6)\\]. However, a wire cut only reproduces the result regarding the expectation value, and therefore, it is not suited for single-shot experiments \\[[Brenner et al., 2023](https://arxiv.org/abs/2302.03366)\\].&quot;, &quot;Context&quot;: &quot;In a quantum circuit, a wire transfers a non-trivial quantum state between two gates, that is, a state that exhibits superposition and has the potential of entanglement with other qubits. The precise state conveyed by the wire is unknown. Furthermore, the quantum state experiences decay over time. Moreover, the interest of the experiment lies in the expectation value over multiple shots rather than the outcome of a single-shot execution.&quot;, &quot;Examples&quot;: &quot;Enter your input for this section here.&quot;, &quot;Solution&quot;: &quot;Apply a wire cut to decompose a circuit's wire into a weighted sum of subcircuits \\[[Peng et al., 2020](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.125.150504)\\]. As shown in the solution sketch, the subcircuits interrupt the wire with different measurements described by observables $O_{i}$ and subsequent qubit initializations of the states $\\ket{\\psi_{i}}$. The sum of the expectation values of these subcircuits, each weighted by real coefficient $a_i$, must replicate the expectation value of the original circuit. To cut the wire, run the subcircuits and combine their results based on the coefficients $a_{i}$ and the measurement outcomes.\n\n![Solution sketch](https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-content/main/sketches/quantum_computing_patterns/wire_cut_sketch.svg)&quot;, &quot;Known Uses&quot;: &quot;Wire cutting is applied in several circuit cutting works \\[[Tang et al., 2021](https://dl.acm.org/doi/10.1145/3445814.3446758), [Lowe et al., 2023](https://quantum-journal.org/papers/q-2023-03-02-934/)\\]. Moreover, their implementations are part of [Pennylane](https://pennylane.ai/) and in Qiskit's [Circuit Knitting Toolbox](https://qiskit-extensions.github.io/circuit-knitting-toolbox/).&quot;, &quot;Related Pattern&quot;: &quot;The WIRE CUT pattern, used in CIRCUIT CUTTING, applies STATE PREPARATION for qubit initialization after measurement in the cut. Additionally, it can be employed in VQAs, e.g, VQE or QAOA. PRIORITIZED EXECUTION can speed up subcircuit execution.&quot;}"/>
            <where>id='28c99b35-98ce-4bfe-bb6d-94a65207258a'</where>
        </update>
        <update tableName="pattern">
            <column name="content" value="{&quot;Alias&quot;: &quot;Enter your input for this section here.&quot;, &quot;Forces&quot;: &quot;Limited connectivity between qubits of the multi-qubit gate requires compensating with SWAP operations that exchange the states of two qubits to establish required connections, thereby introducing additional errors \\[[Leymann et al., 2020](https://iopscience.iop.org/article/10.1088/2058-9565/abae7d)\\]. The complete absence of connectivity between the qubit partitions, e.g., multiple devices without quantum communication, renders the execution of gates between partitions impossible.&quot;, &quot;Intent&quot;: &quot;How to partition a multi-qubit gate into independent gates while preserving the computation's result?&quot;, &quot;Result&quot;: &quot;The GATE CUT enables implementing a multi-qubit gate as a linear combination of local operations independent of the qubit connectivity. This eliminates the need for additional SWAP gates when applied on a single device and allows a multi-qubit gate across two quantum devices without requiring quantum communication. However, replacing multi-qubit gates with local gates and projections through executing multiple subcircuits increases the computational overhead in terms of required shots to achieve the same statistical accuracy in the expectation value as the original circuit. To reduce computational overhead when cutting multiple gates, consider incorporating classical communication between the partitions \\[[Piveteau et al, 2024](https://ieeexplore.ieee.org/document/10236453)\\]. Executing subcircuits in parallel on multiple devices reduces the overall computation runtime \\[[Bravyi et al, 2022](https://pubs.aip.org/aip/jap/article/132/16/160902/2837574/The-future-of-quantum-computing-with)\\]. Moreover, this approach reproduces only the expectation value, making it unsuitable for single-shot experiments \\[[Piveteau et al, 2024](https://ieeexplore.ieee.org/document/10236453)\\].&quot;, &quot;Context&quot;: &quot;A quantum circuit contains a multi-qubit gate operating between two partitions of qubits and cannot be expressed as a single product of local gates, i.e.,  gates that operate exclusively on qubits within a single partition. This gate can create entanglement between the partitions, and its execution requires direct physical connections between the involved qubits. The focus is on the expectation value across multiple shots, not single-shot experiments.&quot;, &quot;Examples&quot;: &quot;Enter your input for this section here.&quot;, &quot;Solution&quot;: &quot;Apply a gate cut to decompose a circuit's multi-qubit gate into a weighted sum of subcircuits [Mitarai et al., 2021](https://iopscience.iop.org/article/10.1088/1367-2630/abd7bc). As shown in the solution sketch, in each subcircuit, the original multi-qubit gate $U$ is replaced by local operations $F_{i}^{A}$ and $F_{i}^{B}$, which act on two disjoint qubit partitions labeled $A$ and $B$. The sum of the expectation values of these subcircuits, each weighted by real coefficient $a_i$, must replicate the expectation value of the original circuit with gate $U$. The local operations $F_{i}^{A}$ and $F_{i}^{B}$ can be either unitary transformations or projective measurements. Execute these subcircuits and combine their results using the real coefficients $a_{i}$.\n\n![Solution sketch](https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-content/main/sketches/quantum_computing_patterns/gate_cut_sketch.svg)&quot;, &quot;Known Uses&quot;: &quot;Gate cuts are used in various circuit cutting works, including two-qubit gate cutting \\[[Mitarai et al., 2021](https://quantum-journal.org/papers/q-2021-01-28-388/), [Bechtold et al.,2023](https://iopscience.iop.org/article/10.1088/2058-9565/acf59c)\\] and many-qubit gate cutting \\[[Ufrecht et al., 2023](https://quantum-journal.org/papers/q-2023-10-23-1147/)\\]. Moreover, gate cuts are applied to reduce errors by minimizing the number of two-qubit gates \\[[Yamamoto et al., 2023](https://pubs.aip.org/aip/jap/article/133/17/174401/2887757/Error-suppression-by-a-virtual-two-qubit-gate)\\]. An implementation is provided in Qiskit's [Circuit Knitting Toolbox](https://qiskit-extensions.github.io/circuit-knitting-toolbox/).&quot;, &quot;Related Pattern&quot;: &quot;The GATE CUT pattern is used in CIRCUIT CUTTING. PRIORITIZED EXECUTION can speed up subcircuit execution. The POST-SELECTIVE MEASUREMENT pattern can handle local projective measurements. Additionally, a GATE CUT can be employed in VQAs,  such as VQE or QAOA, to reduce ansatz connectivity without creating disconnected subcircuits.&quot;}"/>
            <column name="rendered_content" value="{&quot;Alias&quot;: &quot;Enter your input for this section here.&quot;, &quot;Forces&quot;: &quot;Limited connectivity between qubits of the multi-qubit gate requires compensating with SWAP operations that exchange the states of two qubits to establish required connections, thereby introducing additional errors \\[[Leymann et al., 2020](https://iopscience.iop.org/article/10.1088/2058-9565/abae7d)\\]. The complete absence of connectivity between the qubit partitions, e.g., multiple devices without quantum communication, renders the execution of gates between partitions impossible.&quot;, &quot;Intent&quot;: &quot;How to partition a multi-qubit gate into independent gates while preserving the computation's result?&quot;, &quot;Result&quot;: &quot;The GATE CUT enables implementing a multi-qubit gate as a linear combination of local operations independent of the qubit connectivity. This eliminates the need for additional SWAP gates when applied on a single device and allows a multi-qubit gate across two quantum devices without requiring quantum communication. However, replacing multi-qubit gates with local gates and projections through executing multiple subcircuits increases the computational overhead in terms of required shots to achieve the same statistical accuracy in the expectation value as the original circuit. To reduce computational overhead when cutting multiple gates, consider incorporating classical communication between the partitions \\[[Piveteau et al, 2024](https://ieeexplore.ieee.org/document/10236453)\\]. Executing subcircuits in parallel on multiple devices reduces the overall computation runtime \\[[Bravyi et al, 2022](https://pubs.aip.org/aip/jap/article/132/16/160902/2837574/The-future-of-quantum-computing-with)\\]. Moreover, this approach reproduces only the expectation value, making it unsuitable for single-shot experiments \\[[Piveteau et al, 2024](https://ieeexplore.ieee.org/document/10236453)\\].&quot;, &quot;Context&quot;: &quot;A quantum circuit contains a multi-qubit gate operating between two partitions of qubits and cannot be expressed as a single product of local gates, i.e.,  gates that operate exclusively on qubits within a single partition. This gate can create entanglement between the partitions, and its execution requires direct physical connections between the involved qubits. The focus is on the expectation value across multiple shots, not single-shot experiments.&quot;, &quot;Examples&quot;: &quot;Enter your input for this section here.&quot;, &quot;Solution&quot;: &quot;Apply a gate cut to decompose a circuit's multi-qubit gate into a weighted sum of subcircuits [Mitarai et al., 2021](https://iopscience.iop.org/article/10.1088/1367-2630/abd7bc). As shown in the solution sketch, in each subcircuit, the original multi-qubit gate $U$ is replaced by local operations $F_{i}^{A}$ and $F_{i}^{B}$, which act on two disjoint qubit partitions labeled $A$ and $B$. The sum of the expectation values of these subcircuits, each weighted by real coefficient $a_i$, must replicate the expectation value of the original circuit with gate $U$. The local operations $F_{i}^{A}$ and $F_{i}^{B}$ can be either unitary transformations or projective measurements. Execute these subcircuits and combine their results using the real coefficients $a_{i}$.\n\n![Solution sketch](https://raw.githubusercontent.com/PatternAtlas/pattern-atlas-content/main/sketches/quantum_computing_patterns/gate_cut_sketch.svg)&quot;, &quot;Known Uses&quot;: &quot;Gate cuts are used in various circuit cutting works, including two-qubit gate cutting \\[[Mitarai et al., 2021](https://quantum-journal.org/papers/q-2021-01-28-388/), [Bechtold et al.,2023](https://iopscience.iop.org/article/10.1088/2058-9565/acf59c)\\] and many-qubit gate cutting \\[[Ufrecht et al., 2023](https://quantum-journal.org/papers/q-2023-10-23-1147/)\\]. Moreover, gate cuts are applied to reduce errors by minimizing the number of two-qubit gates \\[[Yamamoto et al., 2023](https://pubs.aip.org/aip/jap/article/133/17/174401/2887757/Error-suppression-by-a-virtual-two-qubit-gate)\\]. An implementation is provided in Qiskit's [Circuit Knitting Toolbox](https://qiskit-extensions.github.io/circuit-knitting-toolbox/).&quot;, &quot;Related Pattern&quot;: &quot;The GATE CUT pattern is used in CIRCUIT CUTTING. PRIORITIZED EXECUTION can speed up subcircuit execution. The POST-SELECTIVE MEASUREMENT pattern can handle local projective measurements. Additionally, a GATE CUT can be employed in VQAs,  such as VQE or QAOA, to reduce ansatz connectivity without creating disconnected subcircuits.&quot;}"/>
            <where>id='7821a1f9-02a0-4833-a048-3bf184b1c6fe'</where>
        </update>
    </changeSet>
</databaseChangeLog>
